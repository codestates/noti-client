[{"/Users/seunghunhan/Desktop/project/noti-client/src/index.js":"1","/Users/seunghunhan/Desktop/project/noti-client/src/App.js":"2","/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/index.js":"3","/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/UserReducer.js":"4","/Users/seunghunhan/Desktop/project/noti-client/src/_Actions/Types.js":"5","/Users/seunghunhan/Desktop/project/noti-client/src/assets/state.js":"6","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/LandingPage.js":"7","/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/AlarmPage.js":"8","/Users/seunghunhan/Desktop/project/noti-client/src/components/UploadProductPage/UploadProdctPage.js":"9","/Users/seunghunhan/Desktop/project/noti-client/src/components/ModifiedPage/ModifiedPage.js":"10","/Users/seunghunhan/Desktop/project/noti-client/src/components/SignupPage/SignupPage.js":"11","/Users/seunghunhan/Desktop/project/noti-client/src/components/Navbar/Navbar.js":"12","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/DetailProductPage.js":"13","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/LoginPage.js":"14","/Users/seunghunhan/Desktop/project/noti-client/src/_Actions/UserActions.js":"15","/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/Validation.js":"16","/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/FileUpload.js":"17","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Comments.js":"18","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/SingleComment.js":"19","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/SearchBox.js":"20","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Toast.js":"21","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Likes.js":"22","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/Section/Card.js":"23","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Modal.js":"24","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/ModalButton.js":"25","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Product.js":"26","/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/Sections/AlarmItem.js":"27","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/LandingCard.js":"28","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/LandingCardDetail.js":"29"},{"size":1552,"mtime":1618899506274,"results":"30","hashOfConfig":"31"},{"size":4009,"mtime":1619086960331,"results":"32","hashOfConfig":"31"},{"size":259,"mtime":1618817250092,"results":"33","hashOfConfig":"31"},{"size":790,"mtime":1618904889663,"results":"34","hashOfConfig":"31"},{"size":188,"mtime":1618817250091,"results":"35","hashOfConfig":"31"},{"size":943,"mtime":1618817250092,"results":"36","hashOfConfig":"31"},{"size":2909,"mtime":1619135758644,"results":"37","hashOfConfig":"31"},{"size":2117,"mtime":1619066471848,"results":"38","hashOfConfig":"31"},{"size":2575,"mtime":1618817250106,"results":"39","hashOfConfig":"31"},{"size":405,"mtime":1618817250104,"results":"40","hashOfConfig":"31"},{"size":4622,"mtime":1619054024541,"results":"41","hashOfConfig":"31"},{"size":5800,"mtime":1619074781980,"results":"42","hashOfConfig":"31"},{"size":2927,"mtime":1619066524207,"results":"43","hashOfConfig":"31"},{"size":4444,"mtime":1619067183794,"results":"44","hashOfConfig":"31"},{"size":2958,"mtime":1618817250091,"results":"45","hashOfConfig":"31"},{"size":772,"mtime":1618817250108,"results":"46","hashOfConfig":"31"},{"size":2084,"mtime":1618817250108,"results":"47","hashOfConfig":"31"},{"size":2048,"mtime":1619066545996,"results":"48","hashOfConfig":"31"},{"size":642,"mtime":1619066553043,"results":"49","hashOfConfig":"31"},{"size":517,"mtime":1619135310213,"results":"50","hashOfConfig":"31"},{"size":750,"mtime":1618982403714,"results":"51","hashOfConfig":"31"},{"size":1298,"mtime":1619066569693,"results":"52","hashOfConfig":"31"},{"size":312,"mtime":1618916000307,"results":"53","hashOfConfig":"31"},{"size":2132,"mtime":1618977956789,"results":"54","hashOfConfig":"31"},{"size":552,"mtime":1618979070950,"results":"55","hashOfConfig":"31"},{"size":2733,"mtime":1619135212309,"results":"56","hashOfConfig":"31"},{"size":948,"mtime":1619087867777,"results":"57","hashOfConfig":"31"},{"size":3724,"mtime":1619134074132,"results":"58","hashOfConfig":"31"},{"size":1500,"mtime":1619133896253,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"1yfoxc8",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/seunghunhan/Desktop/project/noti-client/src/index.js",["132"],"// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Reducer from './_Reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    \n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        {/* <ChakraProvider> */}\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n        {/* </ChakraProvider> */}\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n",["133","134"],"/Users/seunghunhan/Desktop/project/noti-client/src/App.js",["135"],"/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/index.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/UserReducer.js",["136"],"import {\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM,\n} from '../_Actions/Types';\n\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case ADD_TO_CART:\n            return {\n                ...state,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload\n                }\n            }\n        case GET_CART_ITEMS:\n            return { ...state, cartDetail: action.payload }\n\n\n\n        case REMOVE_CART_ITEM:\n            return {\n                ...state, cartDetail: action.payload.productInfo,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart\n                }\n            }\n        default:\n            return state;\n    }\n}","/Users/seunghunhan/Desktop/project/noti-client/src/_Actions/Types.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/assets/state.js",[],["137","138"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/LandingPage.js",["139"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/AlarmPage.js",["140","141"],"import React, { useEffect, useState } from 'react'\nimport axios from \"axios\";\nimport Toast from '../LandingPage/Sections/Toast'\nimport AlarmItem from './Sections/AlarmItem';\n\nfunction AlarmPage({ accessToken }) {\n \n  const [alarmList, setAlarmList] = useState([])\n  const [leftDay, setLeftDay] = useState(\"\")\n  const [productName, setProductName] = useState(\"\")\n\n  useEffect(() => {\n    axios\n      .get(\"https://projectb1.com:4000/products/myList\",{\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n      })\n      .then(response => {\n        if(response.status === 200){\n          setAlarmList(response.data.data)\n          setLeftDay(response.data.data[0].leftDay)\n          setProductName(response.data.data[0].productName)\n        }\n      })\n  },[])\n\n  const handleDelete = (productId) => {\n        \n  axios.delete(`https://projectb1.com:4000/products/removeAlarm?productId=${productId}`, {\n    headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n  })\n  .then(response => {\n    console.log(\"삭제버튼누른뒤\", response.data.data.myList);\n    setAlarmList(response.data.data.myList)\n  });\n}\n\nreturn (\n  <div style={{ width: '85%', margin: '3rem auto' }}>\n    <h1>알림 리스트 페이지</h1>\n        <h2>{leftDay}일 뒤,</h2>\n        <h2>{productName}가 발매됩니다.</h2>\n          <div className=\"alarmList-container\">\n             {!alarmList.length ? (\n                <div className=\"alarmList-text\">\n                  알림리스트에 아이템이 없습니다.\n                </div>\n                ) : (\n                  <div className=\"alarmList\">\n                    {alarmList.map((data, idx) => {\n                      return <AlarmItem \n                               key={idx}\n                               item={data}\n                               handleDelete={handleDelete}\n                               accessToken={accessToken}\n                           />\n                        })}\n                      </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n\nexport default AlarmPage    \n","/Users/seunghunhan/Desktop/project/noti-client/src/components/UploadProductPage/UploadProdctPage.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/ModifiedPage/ModifiedPage.js",["142","143","144","145","146","147","148"],"import React, {useState, useEffect} from 'react'\n\nexport default function ModifiedPage({ accessToken, issueAccessToken}) {\n  \n  const [form, setForm] = useState({\n    changeNickname: \"\",\n    password: \"\",\n    confirmPassword:\"\"\n  });\n\n  const [errMessage, setErrMessage] = useState(\"\");\n  const { changeNickname, password, confirmPassword} = form;\n  \n  \n  return (\n    <div>\n      MODI\n    </div>\n  )\n}\n\n\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/SignupPage/SignupPage.js",["149","150"],"import React, { useState } from \"react\";\nimport { Card } from '../LoginPage/Section/Card'\nimport {\n  Box,\n  Button,\n  Heading,\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  SimpleGrid,\n  Link,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react'\nimport validation from \"../utils/Validation\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\n\naxios.defaults.withCredentials = true;\n\nexport default function SingupPage() {\n\n  const [values, setValues] = useState({\n    nickName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  \n  const [errors, setErrors] = useState({});\n\n  const handleChange = (key) => (e) => {\n    setValues({\n      ...values,\n      [key]: e.target.value,\n    });\n    setErrors(validation(values));\n  };\n  \n  const history = useHistory();\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n\n    const { nickName, email, password, confirmPassword } = values;\n    if (!email || !password || !nickName || !confirmPassword) {\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n   \n    axios\n      .post(\n        \"https://projectb1.com:4000/users/signup\",\n        {\n          nickName,\n          email,\n          password,\n          confirmPassword,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        if (res.status === 200) {\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err.response.data.message);\n        swal(\"Oops\", err.response.data.message, \"error\")\n        history.push(\"/login\");\n      });\n  };\n  return (\n    <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{ base: '4', lg: '8' }}\n  >\n    <Box maxW=\"md\" mx=\"auto\">\n    <Heading textAlign=\"center\" size=\"lg\" fontWeight=\"extrabold\">\n        🔔 발매 정보를 미리 받아 보세요!\n    </Heading>\n    <SimpleGrid mt=\"10\" columns={3} spacing=\"3\"/>\n    <Card>\n    <Stack spacing=\"6\">\n          <FormControl id=\"name\">\n            <FormLabel>💌 닉네임</FormLabel>\n              <Input onChange={handleChange(\"nickName\")}\n                // value={errors.nickName}\n                name=\"name\" \n                type=\"name\" \n                placeholder=\"닉네임을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.nickName && (\n              <p className=\"error-signup\">{errors.nickName}</p>\n            )}\n        </Stack>\n\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"email\">\n            <FormLabel>💌 이메일</FormLabel>\n              <Input onChange={handleChange(\"email\")}\n                name=\"email\" \n                type=\"email\" \n                placeholder=\"이메일을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.email && <p className=\"error-signup\">{errors.email}</p>}\n        </Stack>\n\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호</FormLabel>\n              <Input onChange={handleChange(\"password\")}\n                name=\"password\" \n                type=\"password\" \n                placeholder=\"비밀번호를 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.password && (<p className=\"error-signup\">{errors.password}</p> )}\n        </Stack>\n\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호 확인 </FormLabel>\n              <Input onChange={handleChange(\"confirmPassword\")}\n                name=\"confirmPassword\"\n                type=\"password\"\n                placeholder=\"비밀번호를 다시한번 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.confirmPassword && (\n              <p className=\"error-signup\">{errors.confirmPassword}</p>\n            )}\n        </Stack>\n\n           <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <Button\n              onClick={handleSignup}  \n              type=\"submit\" \n              colorScheme=\"purple\" \n              width=\"full\"\n              fontSize=\"md\">\n              회원가입하기\n          </Button>\n          <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n    </Card>\n    </Box>\n    </Box>\n    \n  );\n}\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/Navbar/Navbar.js",["151","152"],"import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../../Navbar.css\";\n\nexport default function Navbar({ loginHandler, handleLogout, isLogin, alarmList }){\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n\n  return(\n    <>\n      <nav className=\"navbar\">\n        <div className=\"nav-container\">\n          <Link \n            exact to=\"/\"\n            className=\"nav-logo\"\n            style={{textDecoration: \"none\", color: \"black\"}}>\n            NOTI\n          </Link>     \n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\n             {isLogin ? (\n            <>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link exact to=\"/user/alarmpage\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  알림리스트\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  회원정보수정\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link \n                  exact to=\"/\"\n                  onClick={handleLogout}\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={()=>{\n                    handleClick();\n                    handleLogout();\n                  }}\n                >\n                로그아웃\n                </Link>                  \n              </li> \n            </>\n             ) : (\n            <>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>              \n              <li className=\"nav-item\">\n                <Link exact to=\"/login\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  로그인\n                </Link>\n              </li>   \n            </>            \n            )}          \n          </ul>\n          <div className=\"nav-icon\" onClick={handleClick}>\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\n          </div> \n        </div>\n      </nav>\n    </>\n  );\n}\n\n\n\n// import React, {useState } from \"react\"\n// import { Link } from \"react-router-dom\"\n// import { Box, Flex, Text, Button, Stack, CloseIcon } from \"@chakra-ui/react\"\n// import { MdMenu } from \"react-icons/md\"\n\n// const MenuItems = (props) => {\n//   const { loginHandler, handleLogout, children, isLast, to = \"/\", ...rest } = props\n//   return (\n//     <Text\n//       mb={{ base: isLast ? 0 : 8, sm: 0 }}\n//       mr={{ base: 0, sm: isLast ? 0 : 8 }}\n//       display=\"block\"\n//       {...rest}\n//     >\n//       <Link to={to}>{children}</Link>\n//     </Text>\n//   )\n// }\n\n// const Navbar = (props) => {\n\n//   const [click, setClick] = useState(false);\n//   const handleClick = () => setClick(!click);\n//   const [show, setShow] = useState(false)\n//   const toggleMenu = () => setShow(!show)\n\n//   return (\n//     <Flex\n//       as=\"nav\"\n//       align=\"center\"\n//       justify=\"space-between\"\n//       wrap=\"wrap\"\n//       w=\"100%\"\n//       mb={8}\n//       p={8}\n//       bg={[\"primary.500\", \"primary.500\", \"transparent\", \"transparent\"]}\n//       color={[\"white\", \"white\", \"primary.700\", \"primary.700\"]}\n//       {...props}\n//     >\n//       <Flex align=\"center\">\n//         NOTI\n//       </Flex>\n\n//       <Box display={{ base: \"block\", md: \"none\" }} onClick={toggleMenu}>\n//         {show ? <CloseIcon /> : <MdMenu />}\n//       </Box>\n\n//       <Box\n//         display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\n//         flexBasis={{ base: \"100%\", md: \"auto\" }}\n//       >\n//         <Flex\n//           align={[\"center\", \"center\", \"center\", \"center\"]}\n//           justify={[\"center\", \"space-between\", \"flex-end\", \"flex-end\"]}\n//           direction={[\"column\", \"row\", \"row\", \"row\"]}\n//           pt={[4, 4, 0, 0]}\n//         >\n//           <MenuItems to=\"/\">발매정보리스트</MenuItems>\n//           <MenuItems to=\"/user/alarmpage\">알림 리스트 </MenuItems>\n//           <MenuItems to=\"/\">회원정보수정 </MenuItems>\n//           <MenuItems \n//           to=\"/\"\n//           onClick={()=>{\n//           handleClick();\n//           // handleLogout();\n//           }}\n//           >로그아웃 </MenuItems>\n//           <MenuItems to=\"/signup\" isLast>\n//             <Button\n//               size=\"sm\"\n//               rounded=\"md\"\n//               color={[\"primary.500\", \"primary.500\", \"white\", \"white\"]}\n//               bg={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}\n//               _hover={{\n//                 bg: [\n//                   \"primary.100\",\n//                   \"primary.100\",\n//                   \"primary.600\",\n//                   \"primary.600\",\n//                 ],\n//               }}\n//             >\n//               Create Account\n//             </Button>\n//           </MenuItems>\n//         </Flex>\n//       </Box>\n//     </Flex>\n//   )\n// }\n\n// export default Navbar\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/DetailProductPage.js",["153","154"],"import React, { useEffect, useState, useRef } from 'react'\nimport axios from 'axios';\nimport Comments from './Setions/Comments';\nimport '../../DetailProductPage.css';\n\nexport default function DetailProductPage(props) {\n\nconst productId = props.match.params.productId\n  \nconst [product, setProduct] = useState([])\nconst [commentLists, setCommentLists] = useState([])\n\nconst [likes, setLikes] = useState(0)\n\n  useEffect(() => {\n    axios\n      .get(`https://projectb1.com:4000/products/detailProduct?id=${productId}`)\n        .then(response => {\n          if(response.data.success){\n            console.log('res.data', response.data.data)\n            setProduct(response.data.data)\n            setCommentLists(response.data.data[0].comment)\n          } else {\n            alert('상세 정보 가져오기를 실패했습니다')\n          }\n        })\n  }, [])\n\n  const [index, setIndex] = useState(0)\n\n  const myRef = useRef(null)\n\n\n  const updateLikes = (newLike) => {\n    setLikes(newLike)\n  }\n\n  const updateComment = (newComment) => {\n    setCommentLists(newComment)\n  }\n  \n  const handleTab = (index) =>{\n    setIndex(index)\n    const images = myRef.current.children;\n    for(let i=0; i<images.length; i++){\n      images[i].className = images[i].className.replace(\"active\", \"\");\n    }\n    images[index].className = \"active\";\n  }\n    \n  return (\n  <>\n    <div className=\"detail-wrapper\">\n      {\n        \n        product.map(item => (\n          <div className=\"details\" key={item.id}>\n            <div className=\"big-img\">\n              <img src={item.images[index]} alt=\"\" />\n            </div>\n            <div className=\"info\">\n              <div className=\"row\">\n                 <h2>{item.productName}</h2>\n              </div>\n              <div className=\"row\">\n                <span>브랜드 사이트</span> \n              <a href={item.brand}><i class=\"fas fa-external-link-alt\"></i></a>\n              </div>              \n              <div className=\"row\">\n                <span>발매일</span> \n                <span style={{fontWeight:\"500\"}}>{item.releaseString}</span> \n              </div>\n              <div className=\"row\">\n                <span>발매가격</span>  \n                <span style={{fontWeight:\"500\"}}>KRW {item.price}</span>\n              </div>\n              <div className=\"thumb\" ref={myRef}>\n                {\n                  item.images.map((image, index) => (\n                    <img src={image} alt=\"\" key={index} \n                    onClick={()=> handleTab(index)}\n                    />\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        ))\n      }\n      {console.log(\"상세페이지\",product)}\n    </div> \n\n    <Comments \n      commentLists={commentLists} \n      productId={productId} \n      accessToken={props.accessToken}\n      updateComment={updateComment} \n      updateLikes={updateLikes}\n    />\n  </>   \n  )\n}\n\n\n\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/LoginPage.js",["155","156"],"import React, { useState } from 'react';\nimport { Card } from './Section/Card'\nimport { useHistory } from 'react-router-dom';\nimport GoogleLogin from \"react-google-login\";\nimport \"./LoginPage.css\";\nimport axios from 'axios';\nimport swal from \"sweetalert\";\nimport Toast from \"../LandingPage/Sections/Toast\"\nimport {\n  Box,\n  Button,\n  Heading,\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  SimpleGrid,\n  Link,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react'\naxios.defaults.withCredentials = true;\n \nexport default function LoginPage({ loginHandler }) {\n  \n  const [details, setDetails] = useState({email: \"\", password: \"\"})\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n\n  const submitHandler = (e) =>{\n    e.preventDefault();\n \n    const { email, password } = details;\n\n    if(!email || !password){\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n    \n    axios.post(\"https://projectb1.com:4000/users/login\", \n    {\n      email,\n      password\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n    .then(res => {\n      history.push(\"/\");\n      loginHandler(res.data)\n      window.localStorage.setItem(\"userToken\", res.data.data )\n    })\n    .catch(err => {\n      console.log(err.message);\n      alert(err.message)\n    })\n  }\n\n  const handleLoginSuccess = (response) => {\n    console.log(\"구글로그인\", response.profileObj)\n    if (response.profileObj) {\n      axios\n        .post(\n          \"https://projectb1.com:4000/users/socialLogin\",\n          {\n            email: response.profileObj.email,\n            nickName: response.profileObj.name,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res)\n          setUser(response.profileObj);\n          history.push(\"/\");\n        });\n    }\n  };\n\n   const handleLoginFailure = (error) => {\n    console.log(error);\n  };\n\n  return (\n    <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{ base: '4', lg: '8' }}\n  >\n    <Box maxW=\"md\" mx=\"auto\">\n    <SimpleGrid mt=\"16\" columns={3} spacing=\"3\"/>\n    <Heading textAlign=\"center\" size=\"lg\" fontWeight=\"extrabold\">\n        🔔 꼭 갖고 싶은 아이템 놓치지 마세요!\n      </Heading>\n      {/* simpleGrid mt===lineHeight 적용 */}\n      <SimpleGrid mt=\"10\" columns={3} spacing=\"3\"/>\n      <Card>\n        <Stack spacing=\"6\">\n          <FormControl id=\"email\">\n            <FormLabel>💌 이메일</FormLabel>\n              <Input onChange={(e) => setDetails({...details, email: e.target.value})}\n                value={details.email}\n                name=\"email\" \n                type=\"email\" \n                placeholder=\"이메일을 입력해주세요.\"\n                autoComplete=\"email\" required />\n            </FormControl>\n\n        </Stack>\n          <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <FormControl id=\"email\">\n           <FormLabel>🔐 비밀번호</FormLabel>\n              <Input onChange={(e) => setDetails({...details, password: e.target.value})}\n              value={details.password}\n              name=\"email\" \n              type=\"password\"\n              placeholder=\"비밀번호를 입력해주세요.\"\n              autoComplete=\"email\" required />\n           </FormControl>\n\n           <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <Button\n              onClick={submitHandler}  \n              type=\"submit\" \n              colorScheme=\"purple\" \n              // size=\"lg\"\n              width=\"full\"\n              fontSize=\"md\">\n              이메일로 시작하기\n          </Button>\n\n          <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          \n          <GoogleLogin\n            buttonSize=\"320px\"\n            className=\"btn-google\"\n            clientId=\"996092186048-291mg21lf890quda77fdgrqn11il9c0h.apps.googleusercontent.com\"\n            buttonText=\"구글 계정으로 시작하기\"\n            onSuccess={handleLoginSuccess}\n            onFailure={handleLoginFailure}\n            cookiePolicy={\"single_host_origin\"}\n          />\n          <Text>\n          아직 계정이 없으신가요?{\" \"}\n            <Link \n            color=\"purple\" \n            href=\"/signup\">\n            👉 회원가입하기\n            </Link>\n          </Text>\n      </Card>    \n    </Box>\n    </Box>\n  )\n};\n","/Users/seunghunhan/Desktop/project/noti-client/src/_Actions/UserActions.js",["157"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/Validation.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/FileUpload.js",["158"],"import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';  \n\naxios.defaults.withCredentials = true;\n\nexport default function FileUpload({ updateImages }) {\n\n  const [images, setImages] = useState([])\n \n  const dropHandler = (files) => {\n     \n    let formData = new FormData();\n    const config = {\n      header: {'Content-Type': 'multipart/form-data'}\n    }\n    formData.append(\"file\", files[0])\n \n    axios.post('https://localhost:4000/products/image', formData, config)\n      .then(response => {\n        if(response.data.success){\n           console.log(\"사진업로드\", response.data)\n           setImages([...images, response.data.filePath])\n           updateImages([...images, response.data.filePath])\n          }else {\n          alert('파일을 저장하는데 실패했습니다')\n        }\n      })\n  }\n\n\n\n  const deleteHandler = (image) => {\n    const currentIndex = images.indexOf(image)\n    let newImages = [...images]\n    newImages.splice(currentIndex, 1) \n    setImages(newImages)\n    updateImages(newImages)\n  }\n\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n      <Dropzone onDrop={dropHandler}>\n        {({getRootProps, getInputProps}) => (        \n            <div \n              style={{\n                width: 300, height: 240, border: '1px solid lightgray',\n                display: 'flex', alignItems:'center', justifyContent: 'center'\n              }}            \n              {...getRootProps()}>\n              <input {...getInputProps()} />\n              <i class=\"fas fa-plus\" style={{ fontSize: '3rem'}}></i>\n            </div>         \n        )}\n      </Dropzone>\n      \n      <div style={{display: 'flex', width: '350px', height:'240px', overflowX: 'scroll'}}>\n\n        {images.map((image, index) => (\n          <div onClick={()=> deleteHandler(image)} key={index}>\n            <img style={{ minWidth: '300px', width:'300px', height: '240px' }}\n                 src={`https://localhost:4000/${image}`} />\n          </div>\n        ))}\n\n      </div>\n    </div>\n  )\n}\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Comments.js",["159"],"import axios from 'axios';\nimport React, { useState, useContext } from 'react';\nimport SingleComment from './SingleComment';\n\naxios.defaults.withCredentials = true;\n\nexport default function Comments(props) {\n  const [comment, setComment] = useState(\"\")\n  const handleChange = (e) => {\n    setComment(e.target.value)\n  }\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if(comment === \"\") {\n      alert(\"내용을 입력해주세요\")\n      return\n    }\n  const body = {\n      comment: comment,\n      _id: props.productId\n    }\n   console.log(\"댓글 보내는값\", body)\n    axios\n      .post(\"https://projectb1.com:4000/products/writeComment\", \n      body,\n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}, \n      })\n      .then(response => {\n        console.log (\"포스트\", response.data)\n        if(response.data.success) {\n          console.log(response.data)\n          props.updateComment(response.data.data.comment)\n          setComment(\"\")        \n        } else {\n          alert('failed to save comment')\n        }\n       })\n      .catch((err) =>{\n        if(err.response.status === 401) {\n          alert(\"로그인이 필요합니다.\")\n      }\n    })\n  }\n  return (\n    <div>\n      <br />\n      <p> replies</p>\n      {/* root comment form */}\n      <form style={{ display: \"flex\" }} onSubmit={onSubmit}>\n        <textarea \n          style={{ width: \"100%\", borderRadius: \"5px\"}}\n          onChange={handleChange}\n          value={comment}\n          placeholder=\"코멘트를 작성해 주세요.\"  \n        />\n        <br />\n        <button style={{ width:\"20%\", height:\"52px\"}} onClick={onSubmit}>Submit</button>\n      </form>\n      {/* comment lists */}\n    \n      {props.commentLists && props.commentLists.map((comment, index) => (\n          <SingleComment \n            key={index}\n            comment={comment} \n            productId={props.productId} \n            accessToken={props.accessToken}\n            updateLikes={props.updateLikes}\n         />\n      ))}\n    </div>\n  )\n}","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/SingleComment.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/SearchBox.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Toast.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Likes.js",["160"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\nexport default function Likes(props) {\n\n  const [likeCount, setLikeCount] = useState(props.goodCount);\n  const [action, setAction] = useState(props.state);\n\n  const onLikeClick = () => {\n\n    const body = {\n      id: props.productId,\n      comment_id: props.commentId\n    }\n    axios.patch(`https://projectb1.com:4000/products/good`, body, \n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}\n      })\n      .then(response => {\n        const comments = response.data.data.comment\n        const filteredLike = comments.filter((comment) => {\n          return comment._id === props.commentId\n       })    \n        setAction(filteredLike[0].state)\n        props.updateLikes(filteredLike[0].state)\n        setLikeCount(filteredLike[0].goodUsers.length)  \n      })\n      .catch((err) =>{\n        if(err.response.status === 401) {\n          alert(\"로그인이 필요합니다.\")\n      }\n    })    \n  }\n\n\n  return (\n    <div className=\"like-icon\">\n      <div onClick={onLikeClick}>\n        <i className= {action=== 0 ? \"far fa-heart\" : \"fas fa-heart\"}></i>\n        <span className=\"like-count\">{likeCount}</span>\n      </div>\n    </div>\n  )\n}\n\n\n\n\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/Section/Card.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Modal.js",[],["161","162"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/ModalButton.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Product.js",["163","164","165"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/Sections/AlarmItem.js",["166","167"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/LandingCard.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/LandingCardDetail.js",["168","169"],{"ruleId":"170","severity":1,"message":"171","line":27,"column":10,"nodeType":"172","messageId":"173","endLine":27,"endColumn":24},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":55,"column":8,"nodeType":"180","endLine":55,"endColumn":10,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":8,"column":1,"nodeType":"184","endLine":34,"endColumn":2},{"ruleId":"174","replacedBy":"185"},{"ruleId":"176","replacedBy":"186"},{"ruleId":"170","severity":1,"message":"187","line":4,"column":15,"nodeType":"172","messageId":"173","endLine":4,"endColumn":24},{"ruleId":"170","severity":1,"message":"188","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":13},{"ruleId":"178","severity":1,"message":"189","line":24,"column":5,"nodeType":"180","endLine":24,"endColumn":7,"suggestions":"190"},{"ruleId":"170","severity":1,"message":"191","line":1,"column":26,"nodeType":"172","messageId":"173","endLine":1,"endColumn":35},{"ruleId":"170","severity":1,"message":"192","line":5,"column":16,"nodeType":"172","messageId":"173","endLine":5,"endColumn":23},{"ruleId":"170","severity":1,"message":"193","line":11,"column":10,"nodeType":"172","messageId":"173","endLine":11,"endColumn":20},{"ruleId":"170","severity":1,"message":"194","line":11,"column":22,"nodeType":"172","messageId":"173","endLine":11,"endColumn":35},{"ruleId":"170","severity":1,"message":"195","line":12,"column":11,"nodeType":"172","messageId":"173","endLine":12,"endColumn":25},{"ruleId":"170","severity":1,"message":"196","line":12,"column":27,"nodeType":"172","messageId":"173","endLine":12,"endColumn":35},{"ruleId":"170","severity":1,"message":"197","line":12,"column":37,"nodeType":"172","messageId":"173","endLine":12,"endColumn":52},{"ruleId":"170","severity":1,"message":"198","line":12,"column":3,"nodeType":"172","messageId":"173","endLine":12,"endColumn":7},{"ruleId":"170","severity":1,"message":"199","line":13,"column":3,"nodeType":"172","messageId":"173","endLine":13,"endColumn":7},{"ruleId":"170","severity":1,"message":"200","line":2,"column":16,"nodeType":"172","messageId":"173","endLine":2,"endColumn":26},{"ruleId":"201","severity":1,"message":"202","line":56,"column":19,"nodeType":"203","messageId":"204","endLine":59,"endColumn":21},{"ruleId":"170","severity":1,"message":"205","line":13,"column":8,"nodeType":"172","messageId":"173","endLine":13,"endColumn":13},{"ruleId":"178","severity":1,"message":"206","line":27,"column":6,"nodeType":"180","endLine":27,"endColumn":8,"suggestions":"207"},{"ruleId":"170","severity":1,"message":"188","line":8,"column":8,"nodeType":"172","messageId":"173","endLine":8,"endColumn":13},{"ruleId":"170","severity":1,"message":"208","line":27,"column":10,"nodeType":"172","messageId":"173","endLine":27,"endColumn":14},{"ruleId":"170","severity":1,"message":"209","line":6,"column":5,"nodeType":"172","messageId":"173","endLine":6,"endColumn":18},{"ruleId":"210","severity":1,"message":"211","line":62,"column":13,"nodeType":"212","endLine":63,"endColumn":60},{"ruleId":"170","severity":1,"message":"213","line":2,"column":27,"nodeType":"172","messageId":"173","endLine":2,"endColumn":37},{"ruleId":"170","severity":1,"message":"191","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"174","replacedBy":"214"},{"ruleId":"176","replacedBy":"215"},{"ruleId":"170","severity":1,"message":"216","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"217","line":18,"column":12,"nodeType":"172","messageId":"173","endLine":18,"endColumn":18},{"ruleId":"170","severity":1,"message":"218","line":18,"column":20,"nodeType":"172","messageId":"173","endLine":18,"endColumn":26},{"ruleId":"170","severity":1,"message":"219","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"210","severity":1,"message":"211","line":29,"column":10,"nodeType":"212","endLine":29,"endColumn":70},{"ruleId":"170","severity":1,"message":"220","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"170","severity":1,"message":"221","line":21,"column":7,"nodeType":"172","messageId":"173","endLine":21,"endColumn":16},"no-unused-vars","'ChakraProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["222"],"no-negated-in-lhs",["223"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userToken'. Either include it or remove the dependency array.","ArrayExpression",["224"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["222"],["223"],"'Container' is defined but never used.","'Toast' is defined but never used.","React Hook useEffect has a missing dependency: 'accessToken'. Either include it or remove the dependency array.",["225"],"'useEffect' is defined but never used.","'setForm' is assigned a value but never used.","'errMessage' is assigned a value but never used.","'setErrMessage' is assigned a value but never used.","'changeNickname' is assigned a value but never used.","'password' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'Link' is defined but never used.","'Text' is defined but never used.","'useHistory' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'likes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["226"],"'user' is assigned a value but never used.","'ALARM_SETTING' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.",["222"],["223"],"'styled' is defined but never used.","'isOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'useState' is defined but never used.","'Jordan' is defined but never used.","'SmallText' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [userToken]",{"range":"233","text":"234"},"Update the dependencies array to be: [accessToken]",{"range":"235","text":"236"},"Update the dependencies array to be: [productId]",{"range":"237","text":"238"},[1734,1736],"[userToken]",[780,782],"[accessToken]",[826,828],"[productId]"]