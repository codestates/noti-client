[{"/home/sungheeyun/Desktop/noti/noti-client/src/index.js":"1","/home/sungheeyun/Desktop/noti/noti-client/src/App.js":"2","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/index.js":"3","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/UserReducer.js":"4","/home/sungheeyun/Desktop/noti/noti-client/src/_Actions/Types.js":"5","/home/sungheeyun/Desktop/noti/noti-client/src/components/ModifiedPage/ModifiedPage.js":"6","/home/sungheeyun/Desktop/noti/noti-client/src/components/UploadProductPage/UploadProdctPage.js":"7","/home/sungheeyun/Desktop/noti/noti-client/src/components/SignupPage/SignupPage.js":"8","/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/AlarmPage.js":"9","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/LandingPage.js":"10","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/DetailProductPage.js":"11","/home/sungheeyun/Desktop/noti/noti-client/src/components/Navbar/Navbar.js":"12","/home/sungheeyun/Desktop/noti/noti-client/src/components/LoginPage/LoginPage.js":"13","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/Validation.js":"14","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/FileUpload.js":"15","/home/sungheeyun/Desktop/noti/noti-client/src/components/LoginPage/Section/Card.js":"16","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Toast.js":"17","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/SearchBox.js":"18","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/LandingCard.js":"19","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Product.js":"20","/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/Sections/AlarmItem.js":"21","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Comments.js":"22","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/LandingCardDetail.js":"23","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/SingleComment.js":"24","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Likes.js":"25"},{"size":1542,"mtime":1619150253514,"results":"26","hashOfConfig":"27"},{"size":3885,"mtime":1619327550826,"results":"28","hashOfConfig":"27"},{"size":256,"mtime":1619150253466,"results":"29","hashOfConfig":"27"},{"size":785,"mtime":1619150253466,"results":"30","hashOfConfig":"27"},{"size":187,"mtime":1619150253454,"results":"31","hashOfConfig":"27"},{"size":4662,"mtime":1619150253506,"results":"32","hashOfConfig":"27"},{"size":2690,"mtime":1619178622168,"results":"33","hashOfConfig":"27"},{"size":4622,"mtime":1619150253506,"results":"34","hashOfConfig":"27"},{"size":2646,"mtime":1619150857135,"results":"35","hashOfConfig":"27"},{"size":3295,"mtime":1619327405395,"results":"36","hashOfConfig":"27"},{"size":6796,"mtime":1619281779200,"results":"37","hashOfConfig":"27"},{"size":2971,"mtime":1619250902992,"results":"38","hashOfConfig":"27"},{"size":4533,"mtime":1619277816868,"results":"39","hashOfConfig":"27"},{"size":772,"mtime":1619150253510,"results":"40","hashOfConfig":"27"},{"size":2177,"mtime":1619178613402,"results":"41","hashOfConfig":"27"},{"size":312,"mtime":1619150253502,"results":"42","hashOfConfig":"27"},{"size":750,"mtime":1619150253502,"results":"43","hashOfConfig":"27"},{"size":517,"mtime":1619150253498,"results":"44","hashOfConfig":"27"},{"size":3724,"mtime":1619150253494,"results":"45","hashOfConfig":"27"},{"size":2954,"mtime":1619250435853,"results":"46","hashOfConfig":"27"},{"size":5778,"mtime":1619326275469,"results":"47","hashOfConfig":"27"},{"size":2705,"mtime":1619327362301,"results":"48","hashOfConfig":"27"},{"size":1500,"mtime":1619150253494,"results":"49","hashOfConfig":"27"},{"size":1318,"mtime":1619324045315,"results":"50","hashOfConfig":"27"},{"size":1643,"mtime":1619182719205,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"14os7a9",{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"55"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"55"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"55"},"/home/sungheeyun/Desktop/noti/noti-client/src/index.js",["119"],"// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Reducer from './_Reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        {/* <ChakraProvider> */}\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n        {/* </ChakraProvider> */}\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();",["120","121"],"/home/sungheeyun/Desktop/noti/noti-client/src/App.js",["122"],"import React, { useState, useEffect } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport {\n  BrowserRouter as Router, \n  Route, \n  Switch \n} from 'react-router-dom';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport SignupPage from './components/SignupPage/SignupPage';\nimport Navbar from './components/Navbar/Navbar';\nimport DetailProductPage from './components/DetailProductPage/DetailProductPage';\nimport ModifiedPage from './components/ModifiedPage/ModifiedPage';\nimport UploadProdctPage from './components/UploadProductPage/UploadProdctPage';\nimport LandingPage from \"./components/LandingPage/LandingPage\";\nimport AlarmPage from \"./components/AlarmPage/AlarmPage\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\n\n\naxios.defaults.withCredentials = true;\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(false);\n  const loginHandler = (data) => {\n    setIsLogin(true)\n  };\n\n  const handleLogout = () => {\n    setIsLogin(false);\n    window.localStorage.removeItem(\"userToken\")\n  }\n\n  const accessToken = window.localStorage.getItem(\"userToken\")\n  \n  const [productList, setProductList] = useState([])\n  \n  useEffect(() => {\n    axios\n      .get(\"https://projectb1.com:4000/products/filterProductList\")\n        .then(response => {\n         console.log(\"제품 정보\", response.data)\n          if(response.data.data) {\n            setProductList(response.data.data)\n          } else {\n            alert(\" 상품들을 가져오는데 실패 했습니다.\")\n          }\n        })\n      if(accessToken){\n        setIsLogin(true)\n      }\n    }, [])\n    const addToCart = (productId) => { \n    const goToList = productList.filter((el) => el._id === productId)[0]\n    console.log(\"고투\", goToList)\n    const body = goToList\n    axios\n      .post('https://projectb1.com:4000/products/addMyLIst',\n      body,\n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n      })\n        .then((response) => {\n          if(response.status === 201){\n            swal({\n              title: \"Good job!\",\n              text: \"알림 리스트로 저장되었습니다.\",\n              icon: \"success\",\n            });            \n          }\n      })\n      .catch((err) => {\n        if(err.response.status === 400){\n          swal(\"Oops\", \"이미 등록된 알람입니다.\", \"error\")\n        } else if(err.response.status === 404) {\n           swal({\n           title: \"로그인이 필요합니다.\",\n           icon: \"warning\",\n          })\n        }\n      })\n  }\n  const updateSearchTerm = (newSearchTerm) => {\n    axios\n      .get(`https://projectb1.com:4000/products/searchProduct?searchTerm=${newSearchTerm}`,\n        {\n        headers: {\"Content-Type\": \"application/json\"}\n        })\n        .then(response => {\n          console.log(\"서치\", response)\n          setProductList(response.data.data)\n    })  \n  }\nreturn (  \n    <Router>\n      <Navbar \n        loginHandler={loginHandler}\n        handleLogout={handleLogout}\n        isLogin={isLogin}      \n      />\n      <ChakraProvider>\n      <Switch>\n      <Route exact path=\"/\">\n      <LandingPage \n        productList={productList}\n        addToCart={addToCart}\n        updateSearchTerm={updateSearchTerm}\n        />\n      </Route>\n      <Route exact path=\"/user/alarmpage\">\n        <AlarmPage/>\n      </Route>\n        <Route exact path=\"/login\">\n          <LoginPage loginHandler={loginHandler} /> \n        </Route>\n        <Route exact path=\"/signup\" component={SignupPage} />\n        <Route exact path=\"/product/upload\" component={UploadProdctPage} />\n        <Route path=\"/modified\">\n          <ModifiedPage/>\n        </Route> \n        <Route \n          path=\"/product/:productId\" \n          render={(props) =>  <DetailProductPage {...props} />} />\n      </Switch>\n      </ChakraProvider>      \n    </Router>    \n  );\n}\nexport default App;\n\n\n\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/index.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/UserReducer.js",["123"],"import {\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM,\n} from '../_Actions/Types';\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case ADD_TO_CART:\n            return {\n                ...state,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload\n                }\n            }\n        case GET_CART_ITEMS:\n            return { ...state, cartDetail: action.payload }\n        case REMOVE_CART_ITEM:\n            return {\n                ...state, cartDetail: action.payload.productInfo,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart\n                }\n            }\n        default:\n            return state;\n    }\n}","/home/sungheeyun/Desktop/noti/noti-client/src/_Actions/Types.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/ModifiedPage/ModifiedPage.js",["124","125"],"import React, { useState } from \"react\";\nimport { Card } from '../LoginPage/Section/Card'\nimport {\n  Box,\n  Button,\n  Heading,\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  SimpleGrid,\n  Link,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react'\nimport validation from \"../utils/Validation\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\n\n// const accessToken = window.localStorage.getItem('userToken')\n\naxios.defaults.withCredentials = true;\n\nexport default function ModifiedPage({accessToken}) {\n  const [values, setValues] = useState({\n    nickName: \"\",\n    password: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n  const handleChange = (key) => (e) => {\n    setValues({\n      ...values,\n      [key]: e.target.value,\n    });\n    setErrors(validation(values));\n  };\n  const history = useHistory();\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n    const { nickName,  password } = values;\n    if (!password && !nickName ) {\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n   console.log(accessToken)\n    axios\n      .post(\n        \"https://projectb1.com:4000/users/changePrivacy\",\n        {\n          nickName,\n          password\n        },\n        {\n          headers: {\n              \"okCome\":accessToken,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        if (res.status === 200) {\n            console.log(res.data)\n           history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err.response.data.message);\n        swal(\"Oops\", 'duplicated nickName', \"error\")\n        history.push(\"/login\");\n      });\n  };\n  \n  return (\n    <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{ base: '4', lg: '8' }}\n  >\n    <Box maxW=\"md\" mx=\"auto\">\n    <Heading textAlign=\"center\" size=\"lg\" fontWeight=\"extrabold\">\n        🔔 개인 정보를 바꾸어 보세요!\n    </Heading>\n    <SimpleGrid mt=\"10\" columns={3} spacing=\"3\"/>\n    <Card>\n    <Stack spacing=\"6\">\n          <FormControl id=\"name\">\n            <FormLabel>💌 닉네임</FormLabel>\n              <Input onChange={handleChange(\"nickName\")}\n                // value={errors.nickName}\n                name=\"name\" \n                type=\"name\" \n                placeholder=\"닉네임을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.nickName && (\n              <p className=\"error-signup\">{errors.nickName}</p>\n            )}\n        </Stack>\n        {/* <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"email\">\n            <FormLabel>💌 이메일</FormLabel>\n              <Input onChange={handleChange(\"email\")}\n                name=\"email\" \n                type=\"email\" \n                placeholder=\"이메일을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.email && <p className=\"error-signup\">{errors.email}</p>}\n        </Stack> */}\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호</FormLabel>\n              <Input onChange={handleChange(\"password\")}\n                name=\"password\" \n                type=\"password\" \n                placeholder=\"비밀번호를 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.password && (<p className=\"error-signup\">{errors.password}</p> )}\n        </Stack>\n        {/* <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호 확인 </FormLabel>\n              <Input onChange={handleChange(\"confirmPassword\")}\n                name=\"confirmPassword\"\n                type=\"password\"\n                placeholder=\"비밀번호를 다시한번 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.confirmPassword && (\n              <p className=\"error-signup\">{errors.confirmPassword}</p>\n            )}\n        </Stack> */}\n           <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <Button\n              onClick={handleSignup}  \n              type=\"submit\" \n              colorScheme=\"purple\" \n              width=\"full\"\n              fontSize=\"md\">\n              개인정보변경\n          </Button>\n          <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n    </Card>\n    </Box>\n    </Box>\n  );\n}\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/UploadProductPage/UploadProdctPage.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/SignupPage/SignupPage.js",["126","127"],"import React, { useState } from \"react\";\nimport { Card } from '../LoginPage/Section/Card'\nimport {\n  Box,\n  Button,\n  Heading,\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  SimpleGrid,\n  Link,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react'\nimport validation from \"../utils/Validation\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\n\naxios.defaults.withCredentials = true;\n\nexport default function SingupPage() {\n\n  const [values, setValues] = useState({\n    nickName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  \n  const [errors, setErrors] = useState({});\n\n  const handleChange = (key) => (e) => {\n    setValues({\n      ...values,\n      [key]: e.target.value,\n    });\n    setErrors(validation(values));\n  };\n  \n  const history = useHistory();\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n\n    const { nickName, email, password, confirmPassword } = values;\n    if (!email || !password || !nickName || !confirmPassword) {\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n   \n    axios\n      .post(\n        \"https://projectb1.com:4000/users/signup\",\n        {\n          nickName,\n          email,\n          password,\n          confirmPassword,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        if (res.status === 200) {\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err.response.data.message);\n        swal(\"Oops\", err.response.data.message, \"error\")\n        history.push(\"/login\");\n      });\n  };\n  return (\n    <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{ base: '4', lg: '8' }}\n  >\n    <Box maxW=\"md\" mx=\"auto\">\n    <Heading textAlign=\"center\" size=\"lg\" fontWeight=\"extrabold\">\n        🔔 발매 정보를 미리 받아 보세요!\n    </Heading>\n    <SimpleGrid mt=\"10\" columns={3} spacing=\"3\"/>\n    <Card>\n    <Stack spacing=\"6\">\n          <FormControl id=\"name\">\n            <FormLabel>💌 닉네임</FormLabel>\n              <Input onChange={handleChange(\"nickName\")}\n                // value={errors.nickName}\n                name=\"name\" \n                type=\"name\" \n                placeholder=\"닉네임을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.nickName && (\n              <p className=\"error-signup\">{errors.nickName}</p>\n            )}\n        </Stack>\n\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"email\">\n            <FormLabel>💌 이메일</FormLabel>\n              <Input onChange={handleChange(\"email\")}\n                name=\"email\" \n                type=\"email\" \n                placeholder=\"이메일을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.email && <p className=\"error-signup\">{errors.email}</p>}\n        </Stack>\n\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호</FormLabel>\n              <Input onChange={handleChange(\"password\")}\n                name=\"password\" \n                type=\"password\" \n                placeholder=\"비밀번호를 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.password && (<p className=\"error-signup\">{errors.password}</p> )}\n        </Stack>\n\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호 확인 </FormLabel>\n              <Input onChange={handleChange(\"confirmPassword\")}\n                name=\"confirmPassword\"\n                type=\"password\"\n                placeholder=\"비밀번호를 다시한번 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.confirmPassword && (\n              <p className=\"error-signup\">{errors.confirmPassword}</p>\n            )}\n        </Stack>\n\n           <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <Button\n              onClick={handleSignup}  \n              type=\"submit\" \n              colorScheme=\"purple\" \n              width=\"full\"\n              fontSize=\"md\">\n              회원가입하기\n          </Button>\n          <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n    </Card>\n    </Box>\n    </Box>\n    \n  );\n}\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/AlarmPage.js",["128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"import React, { useEffect, useState } from 'react'\nimport axios from \"axios\";\nimport Toast from '../LandingPage/Sections/Toast'\nimport AlarmItem from './Sections/AlarmItem';\nimport { Switch, Button, HStack, Heading, Box, useColorModeValue,\n  VStack, Text, IconButton, StackDivider, Spacer, Badge, Avatar, Wrap, WrapItem\n} from \"@chakra-ui/react\"\n\nfunction AlarmPage() {\n \n  const [alarmList, setAlarmList] = useState([])\n  const [leftDay, setLeftDay] = useState(\"\")\n  const [productName, setProductName] = useState(\"\")\n\n  const accessToken = window.localStorage.getItem('userToken')\n\n  console.log(\"알림페이지토큰\", accessToken)\n\n  useEffect(() => {\n    axios\n      .get(\"https://projectb1.com:4000/products/myList\",{\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n      })\n      .then(response => {\n        if(response.status === 200){\n          setAlarmList(response.data.data)\n          setLeftDay(response.data.data[0].leftDay)\n          setProductName(response.data.data[0].productName)\n        }\n      })\n  },[])\n\n  const handleDelete = (productId) => {\n        \n  axios.delete(`https://projectb1.com:4000/products/removeAlarm?productId=${productId}`, {\n    headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n  })\n  .then(response => {\n    console.log(\"삭제버튼누른뒤\", response.data.data.myList);\n    setAlarmList(response.data.data.myList)\n  });\n}\n\nreturn (\n  <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{ base: '4', lg: '8' }}\n  >\n      <Box maxW=\"md\" mx=\"auto\">\n        <Heading\n          mb='8'\n          fontWeight='extrabold'\n          size='2xl'\n          bgGradient='linear(to-r, pink.500, pink.300, blue.500)'\n          color='purple'\n          bgClip='text'\n        >\n          {leftDay}일 뒤,\n          <br></br>\n          {productName}가 발매 됩니다.\n        </Heading>\n\n          <div className=\"alarmList-container\">\n             {!alarmList.length ? (\n                <div className=\"alarmList-text\">\n                  알림리스트에 아이템이 없습니다.\n                </div>\n                ) : (\n                  <div className=\"alarmList\">\n                    {alarmList.map((data, idx) => {\n                      return <AlarmItem \n                        key={idx}\n                        item={data}\n                        handleDelete={handleDelete}\n                        accessToken={accessToken}\n                      />\n                      })}\n                    </div>\n                    )}\n            </div>\n        </Box>\n    </Box>\n  )\n}\n\nexport default AlarmPage    \n","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/LandingPage.js",["142"],"import React from 'react'\nimport SearchBox from \"./Sections/SearchBox\";\nimport Product from './Sections/Product';\nimport { Box, Container, HStack,\n  Button,\n  Flex,\n  SimpleGrid,\n  Heading,\n  Stack,\n  Text,\n  Link, \n} from \"@chakra-ui/react\"\nimport LandingCard from \"./Sections/LandingCard\";\n\n\nexport default function LandingPage(props) {    \n  return (\n    <div style={{ width: '80%', margin: '2rem auto' }}>\n    <Flex\n      align=\"center\"\n      justify={{ base: \"center\", md: \"space-around\", xl: \"space-between\" }}\n      direction={{ base: \"column-reverse\", md: \"row\" }}\n      wrap=\"no-wrap\"\n      minH=\"100vh\"\n      px={6}\n      mb={10}\n      // {...rest}\n    >\n      <Stack\n          spacing={4}\n          w={{ base: \"80%\", md: \"40%\" }}\n          align={[\"center\", \"center\", \"flex-start\", \"flex-start\"]}\n      >\n        <Heading\n          as=\"h1\"\n          size=\"2xl\"\n          fontWeight=\"extrabold\"\n          color=\"primary.800\"\n          lineHeight={1.4}\n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\n        >\n          NOTI로 발매 정보를 미리 받아 보세요. 🔔\n        </Heading>\n\n        <Heading\n          as=\"h2\"\n          size=\"md\"\n          color=\"primary.800\"\n          opacity=\"0.8\"\n          fontWeight=\"normal\"\n          lineHeight={1.5}\n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\n        >\n          꼭 갖고 싶은 아이템 놓치지 않도록 NOTI로 미리 알림 설정 하시면 발매 하루 전 이메일로 발매 정보를 다시 알려 드립니다.\n        </Heading>\n\n        <Link href=\"/login\">\n          <Button\n            colorScheme=\"purple\"\n            borderRadius=\"8px\"\n            py=\"4\"\n            px=\"4\"\n            lineHeight=\"1\"\n            size=\"lg\"\n          >\n            발매 정보 미리 받기\n          </Button>\n        </Link>\n\n        <Text\n          fontSize=\"xs\"\n          mt={2}\n          textAlign=\"center\"\n          color=\"primary.800\"\n          opacity=\"0.6\"\n        >\n        </Text>\n      </Stack>\n\n      <Box w={{ base: \"100%\", sm: \"60%\", md: \"40%\" }} mb={{ base: 12, md: 0 }}>\n        <LandingCard>\n        {/* <Image src size=\"100%\" rounded=\"1rem\" shadow=\"2xl\" /> */}\n        \n        </LandingCard>\n      </Box>\n    </Flex>\n\n    {/* <div style={{ display: \"flex\", justifyContent:\"flex-end\", margin:\"1rem auto\"}}> */}\n    <SearchBox updateSearchTerm={props.updateSearchTerm} />\n    {/* </div> */}\n      <br />\n      <Text\n          fontSize=\"3xl\"\n          fontWeight=\"bold\"\n          mt={2}\n          textAlign=\"left\"\n          color=\"primary.800\"\n          opacity=\"0.8\"\n        >\n          🎉 최신 발매정보\n        </Text>\n      \n    <HStack>\n    <div style={{ width: '100%', margin: '2rem auto' }}>\n    <SimpleGrid columns={[2, null, 5]} spacing=\"36px\">\n        {props.productList.map((data, index) => \n    <Product \n        data={data} \n        key={index} \n        handleClick={() => {props.addToCart(data._id)}}\n        />)}\n    </SimpleGrid>\n        <Text\n          fontSize=\"lg\"\n          fontWeight=\"bold\"\n          mt={2}\n          textAlign=\"center\"\n          color=\"primary.800\"\n          opacity=\"1\"\n        >\n          🎉 최신 발매정보를 지속적으로 업데이트 하고 있어요!\n        </Text>\n    </div>\n    </HStack>        \n  </div>\n  )\n}","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/DetailProductPage.js",["143","144"],"// import React, { useEffect, useState, useRef } from 'react'\n// import axios from 'axios';\n// import Comments from './Setions/Comments';\n// import '../../DetailProductPage.css';\n// import { ExternalLinkIcon } from '@chakra-ui/icons';\n// import { Divider } from \"@chakra-ui/react\";\n\n// export default function DetailProductPage(props) {\n// const productId = props.match.params.productId\n\n// const [product, setProduct] = useState([])\n// const [commentLists, setCommentLists] = useState([])\n// const [likes, setLikes] = useState(0)\n\n// useEffect(() => {\n//     axios\n//       .get(`https://projectb1.com:4000/products/detailProduct?id=${productId}`)\n//         .then(response => {\n//           if(response.data.success){\n//             console.log('res.data', response.data.data)\n//             setProduct(response.data.data)\n//             setCommentLists(response.data.data[0].comment)\n//           } else {\n//             alert('상세 정보 가져오기를 실패했습니다')\n//           }\n//         })\n//   }, [])\n//   const [index, setIndex] = useState(0)\n//   const myRef = useRef(null)\n//   const updateLikes = (newLike) => {\n//     setLikes(newLike)\n//   }\n//   const updateComment = (newComment) => {\n//     setCommentLists(newComment)\n//   }\n//   const handleTab = (index) =>{\n//     setIndex(index)\n//     const images = myRef.current.children;\n//     for(let i=0; i<images.length; i++){\n//       images[i].className = images[i].className.replace(\"active\", \"\");\n//     }\n//     images[index].className = \"active\";\n//   }\n//   return (\n//   <>\n//     <div className=\"detail-wrapper\">\n//       {\n//         product.map(item => (\n//           <div className=\"details\" key={item.id}>\n//             <div className=\"big-img\">\n//               <img src={`https://projectb1.com:4000/${item.images[index]}`} alt=\"\" />\n//             </div>\n//             <div className=\"info\">\n//               <div className=\"row\">\n//                  <h2>{item.productName}</h2>\n//               </div>\n//               <br />\n//               <div className=\"row\">\n//                 <span className=\"info-text\">브랜드 사이트</span> \n//               <a href={item.brand}>\n//                 <ExternalLinkIcon w={6} h={6} />\n//               </a>\n//               </div>    \n//               <Divider orientation=\"horizontal\" />          \n//               <div className=\"row\">\n//                 <span className=\"info-text\">발매일</span> \n//                 <span style={{fontWeight:\"500\", fontSize:\"17px\"}}>{item.releaseString}</span> \n//               </div>\n//               <Divider orientation=\"horizontal\" />\n//               <div className=\"row\">\n//                 <span className=\"info-text\">발매가격</span>  \n//                 <span style={{fontWeight:\"500\", fontSize:\"17px\"}}>KRW {item.price}</span>\n//               </div>\n//               <div className=\"thumb\" ref={myRef}>\n//                 {\n//                   item.images.map((image, index) => (\n//                     <img src={`https://projectb1.com:4000/${image}`} alt=\"\" key={index} \n//                     onClick={()=> handleTab(index)}\n//                     />\n//                   ))\n//                 }\n//               </div>\n//             </div>\n//           </div>\n//         ))\n//       }\n//     </div> \n//     <Comments \n//       commentLists={commentLists} \n//       productId={productId} \n//       accessToken={props.accessToken}\n//       updateComment={updateComment} \n//       updateLikes={updateLikes}\n//     />\n//   </>   \n//   )\n// }\n\n\n\nimport React, { useEffect, useState, useRef } from 'react'\nimport axios from 'axios';\nimport Comments from './Setions/Comments';\nimport '../../DetailProductPage.css';\nimport { ExternalLinkIcon } from '@chakra-ui/icons';\nimport { Divider } from \"@chakra-ui/react\";\n\nexport default function DetailProductPage(props) {\nconst productId = props.match.params.productId\n\nconst [product, setProduct] = useState([])\nconst [commentLists, setCommentLists] = useState([])\nconst [likes, setLikes] = useState(0)\n\nuseEffect(() => {\n    axios\n      .get(`https://projectb1.com:4000/products/detailProduct?id=${productId}`)\n        .then(response => {\n          if(response.data.success){\n            console.log('res.data', response.data.data)\n            setProduct(response.data.data)\n            setCommentLists(response.data.data[0].comment)\n          } else {\n            alert('상세 정보 가져오기를 실패했습니다')\n          }\n        })\n  }, [])\n  const [index, setIndex] = useState(0)\n  const myRef = useRef(null)\n  const updateLikes = (newLike) => {\n    setLikes(newLike)\n  }\n  const updateComment = (newComment) => {\n    setCommentLists(newComment)\n  }\n  const handleTab = (index) =>{\n    setIndex(index)\n    const images = myRef.current.children;\n    for(let i=0; i<images.length; i++){\n      images[i].className = images[i].className.replace(\"active\", \"\");\n    }\n    images[index].className = \"active\";\n  }\n  return (\n  <>\n    <div className=\"detail-wrapper\">\n      {\n        product.map(item => (\n          <div className=\"details\" key={item.id}>\n            <div className=\"big-img\">\n              <img src={`https://projectb1.com:4000/${item.images[index]}`} alt=\"\" />\n            </div>\n            <div className=\"info\">\n              <div className=\"row\">\n                 <h2>{item.productName}</h2>\n              </div>\n              <br />\n              <div className=\"row\">\n                <span className=\"info-text\">브랜드 사이트</span> \n              <a href={item.brand}>\n                <ExternalLinkIcon w={6} h={6} />\n              </a>\n              </div>    \n              <Divider orientation=\"horizontal\" />          \n              <div className=\"row\">\n                <span className=\"info-text\">발매일</span> \n                <span style={{fontWeight:\"500\", fontSize:\"17px\"}}>{item.releaseString}</span> \n              </div>\n              <Divider orientation=\"horizontal\" />\n              <div className=\"row\">\n                <span className=\"info-text\">발매가격</span>  \n                <span style={{fontWeight:\"500\", fontSize:\"17px\"}}>KRW {item.price}</span>\n              </div>\n              <div className=\"thumb\" ref={myRef}>\n                {\n                  item.images.map((image, index) => (\n                    <img src={`https://projectb1.com:4000/${image}`} alt=\"\" key={index} \n                    onClick={()=> handleTab(index)}\n                    />\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </div> \n    <Comments \n      commentLists={commentLists} \n      productId={productId} \n      accessToken={props.accessToken}\n      updateComment={updateComment} \n      updateLikes={updateLikes}\n    />\n  </>   \n  )\n}","/home/sungheeyun/Desktop/noti/noti-client/src/components/Navbar/Navbar.js",["145"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../Navbar.css\";\n\n\nexport default function Navbar({ handleLogout, isLogin}){\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n\n  return(\n    <>\n      <nav className=\"navbar\">\n        <div className=\"nav-container\">\n          <Link \n            exact to=\"/\"\n            className=\"nav-logo\"\n            style={{textDecoration: \"none\", color: \"black\"}}>\n            NOTI\n          </Link>     \n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\n             {isLogin ? (\n            <>\n              <li className=\"nav-item\">\n                <Link \n                  exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link exact to=\"/user/alarmpage\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  알림리스트\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link exact to=\"/modified\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  회원정보수정\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link \n                  exact to=\"/\"\n                  onClick={handleLogout}\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={()=>{\n                    handleClick();\n                    handleLogout();\n                  }}\n                >\n                로그아웃\n                </Link>                  \n              </li> \n            </>\n             ) : (\n            <>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>              \n              <li className=\"nav-item\">\n                <Link exact to=\"/login\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  로그인\n                </Link>\n              </li>   \n            </>            \n            )}          \n          </ul>\n          <div className=\"nav-icon\" onClick={handleClick}>\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\n          </div> \n        </div>\n      </nav>\n    </>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/LoginPage/LoginPage.js",["146","147"],"import React, { useState } from 'react';\nimport { Card } from './Section/Card'\nimport { useHistory } from 'react-router-dom';\nimport GoogleLogin from \"react-google-login\";\nimport \"./LoginPage.css\";\nimport axios from 'axios';\nimport swal from \"sweetalert\";\nimport Toast from \"../LandingPage/Sections/Toast\"\nimport {\n  Box,\n  Button,\n  Heading,\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  SimpleGrid,\n  Link,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react'\naxios.defaults.withCredentials = true;\nexport default function LoginPage({ loginHandler }) {\n  const [details, setDetails] = useState({email: \"\", password: \"\"})\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n  const submitHandler = (e) =>{\n    e.preventDefault();\n    const { email, password } = details;\n    if(!email || !password){\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n    axios.post(\"https://projectb1.com:4000/users/login\", \n    {\n      email,\n      password\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n    .then(res => {\n      history.push(\"/\");\n      loginHandler(res.data)\n      window.localStorage.setItem(\"userToken\", res.data.data )\n    })\n    .catch(err => {\n      console.log(\"에러\", err);\n      swal(\"Oops\", err.message , \"error\");\n    })\n  }\n  const handleLoginSuccess = (response) => {\n    console.log(\"구글로그인\", response.accessToken)\n    if (response.profileObj) {\n      axios\n        .post(\n          \"https://projectb1.com:4000/users/socialLogin\",\n          {\n            email: response.profileObj.email,\n            nickName: response.profileObj.name,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res)\n          window.localStorage.setItem(\"userToken\", res.data.data )\n          loginHandler(res.data)\n          setUser(response.profileObj);\n          history.push(\"/\");\n        });\n    }\n  };\n   const handleLoginFailure = (error) => {\n    console.log(error);\n  };\n  return (\n    <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{ base: '4', lg: '8' }}\n  >\n    <Box maxW=\"md\" mx=\"auto\">\n    <SimpleGrid mt=\"16\" columns={3} spacing=\"3\"/>\n    <Heading textAlign=\"center\" size=\"lg\" fontWeight=\"extrabold\">\n        🔔 꼭 갖고 싶은 아이템 놓치지 마세요!\n      </Heading>\n      {/* simpleGrid mt===lineHeight 적용 */}\n      <SimpleGrid mt=\"10\" columns={3} spacing=\"3\"/>\n      <Card>\n        <Stack spacing=\"6\">\n          <FormControl id=\"email\">\n            <FormLabel>💌 이메일</FormLabel>\n              <Input onChange={(e) => setDetails({...details, email: e.target.value})}\n                value={details.email}\n                name=\"email\" \n                type=\"email\" \n                placeholder=\"이메일을 입력해주세요.\"\n                autoComplete=\"email\" required />\n            </FormControl>\n        </Stack>\n          <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <FormControl id=\"email\">\n           <FormLabel>🔐 비밀번호</FormLabel>\n              <Input onChange={(e) => setDetails({...details, password: e.target.value})}\n              value={details.password}\n              name=\"email\" \n              type=\"password\"\n              placeholder=\"비밀번호를 입력해주세요.\"\n              autoComplete=\"email\" required />\n           </FormControl>\n           <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <Button\n              onClick={submitHandler}  \n              type=\"submit\" \n              colorScheme=\"purple\" \n              // size=\"lg\"\n              width=\"full\"\n              fontSize=\"md\">\n              이메일로 시작하기\n          </Button>\n          <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <GoogleLogin\n            buttonSize=\"320px\"\n            className=\"btn-google\"\n            clientId=\"996092186048-291mg21lf890quda77fdgrqn11il9c0h.apps.googleusercontent.com\"\n            buttonText=\"구글 계정으로 시작하기\"\n            onSuccess={handleLoginSuccess}\n            onFailure={handleLoginFailure}\n            cookiePolicy={\"single_host_origin\"}\n          />\n          <Text>\n          아직 계정이 없으신가요?{\" \"}\n            <Link \n            color=\"purple\" \n            href=\"/signup\">\n            👉 회원가입하기\n            </Link>\n          </Text>\n      </Card>    \n    </Box>\n    </Box>\n  )\n};","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/Validation.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/FileUpload.js",["148"],"import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';  \n\naxios.defaults.withCredentials = true;\n\nexport default function FileUpload({ updateImages }) {\n\n  const accessToken = window.localStorage.getItem('userToken')\n\n  const [images, setImages] = useState([])\n \n  const dropHandler = (files) => {\n     \n    let formData = new FormData();\n    const config = {\n      header: {'Content-Type': 'multipart/form-data', \"okCome\": accessToken}\n    }\n    formData.append(\"file\", files[0])\n \n    axios.post('https://projectb1:4000.com/products/image', formData, config)\n      .then(response => {\n        if(response.data.success){\n           console.log(\"사진업로드\", response.data)\n           setImages([...images, response.data.filePath])\n           updateImages([...images, response.data.filePath])\n          }else {\n          alert('파일을 저장하는데 실패했습니다')\n        }\n      })\n  }\n\n  const deleteHandler = (image) => {\n    const currentIndex = images.indexOf(image)\n    let newImages = [...images]\n    newImages.splice(currentIndex, 1) \n    setImages(newImages)\n    updateImages(newImages)\n  }\n\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n      <Dropzone onDrop={dropHandler}>\n        {({getRootProps, getInputProps}) => (        \n            <div \n              style={{\n                width: 300, height: 240, border: '1px solid lightgray',\n                display: 'flex', alignItems:'center', justifyContent: 'center'\n              }}            \n              {...getRootProps()}>\n              <input {...getInputProps()} />\n              <i class=\"fas fa-plus\" style={{ fontSize: '3rem'}}></i>\n            </div>         \n        )}\n      </Dropzone>\n      \n      <div style={{display: 'flex', width: '350px', height:'240px', overflowX: 'scroll'}}>\n\n        {images.map((image, index) => (\n          <div onClick={()=> deleteHandler(image)} key={index}>\n            <img style={{ minWidth: '300px', width:'300px', height: '240px' }}\n                 src={`https://projectb1.com:4000/${image}`} />\n          </div>\n        ))}\n\n      </div>\n    </div>\n  )\n}\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/LoginPage/Section/Card.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Toast.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/SearchBox.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/LandingCard.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Product.js",["149","150","151","152"],"import React, { useState } from 'react'\n// import Modal from \"./Modal\"\n// import ModalButton from \"./ModalButton\";\nimport styled from \"styled-components\";\nimport { FaRegBookmark } from 'react-icons/fa';\nimport { Button, Box, Image, AspectRatio, Badge, Container, Link, HStack, IconButton } from \"@chakra-ui/react\"\n// const ModalContent = styled.div`\n//   height: 100%;\n//   width: 100%;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   h1 {\n//     color: #5c3aff;\n//   }\n// `;\nexport default function Product(props) {\n    const [isOpen, toggle] = useState(false);\n    const [click, setClick] = useState(false);\n    const handleClick = () => setClick(!click);\n    \n    // function handlOpenModal(open) {\n    //   console.log(\"close modal\");\n    //   toggle(open);\n    // }\n\n  return ( \n    <HStack>\n    <Container maxW=\"md\" id=\"product\">\n             <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n             <AspectRatio maxW=\"400px\" ratio={1}>\n             <Image\n            src={`https://projectb1.com:4000/${props.data.images[0]}`}/>\n            </AspectRatio>\n\n            <Badge \n            borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                New\n            </Badge>\n            \n            <Box\n                mt=\"2\"\n                fontSize=\"lg\"\n                fontWeight=\"semibold\"\n                as=\"h3\"\n                lineHeight=\"1.5\"\n                isTruncated\n                >\n                {props.data.releaseString}\n\n                <IconButton\n                    icon={<FaRegBookmark />}\n                    size=\"md\"\n                    variant=\"outline\"\n                    isRound='true' \n                    onClick={(e) => props.handleClick(e, props.data.ProductId)}\n                    >\n                    저장\n                </IconButton>\n            </Box>\n\n            <Box>\n                {props.data.productName}\n                <Box as=\"span\" color=\"gray.600\" fontSize=\"md\">\n                </Box>\n            </Box>\n\n\n            \n            <Link\n                href={`/product/${props.data._id}`}\n                onClick={handleClick}>\n                 상세정보 확인하기\n            </Link>\n\n\n\n                {/* <ModalButton \n                // handlClick={() => handlOpenModal(true)}\n                onClick={(e) => props.handleClick(e, props.data.ProductId)}\n                >\n                    저장\n                </ModalButton>\n                <Modal isOpen={isOpen} handleClose={() => handlOpenModal(false)}>\n                <ModalContent>\n                    <h1> 로그인이 필요합니다. </h1>\n                    <Link\n                    color=\"purple\" \n                    href=\"/login\">\n                    👉 로그인하기\n                    </Link>\n                </ModalContent>\n                </Modal> */}\n       \n        </Box>\n        </Container>\n    {/* </div> */}\n    </HStack>\n  )    \n}\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/Sections/AlarmItem.js",["153","154","155"],"// import React, { useState } from 'react'\n// import axios from \"axios\";\n// import { Switch, Button, HStack, Heading, Box,\n//          VStack, Text, IconButton, StackDivider, Spacer, Badge, Avatar, Wrap, WrapItem\n// } from \"@chakra-ui/react\"\n// import { FaTrash } from 'react-icons/fa';\n// import swal from \"sweetalert\"; \n\n\n// export default function AlarmItem({ item, handleDelete }) {\n\n//   const accessToken = window.localStorage.getItem('userToken')\n\n//       const alarmSetting = (productId) => {\n        \n//         console.log(\"알람설정\")\n//         let body = {\n//           productId: item.productId,\n//         }\n//         console.log(\"바디가뭐야\", body)\n//         axios.post(`https://projectb1.com:4000/products/changeAlarm`, body, \n//         {\n//         headers: {\"okCome\": accessToken}\n//       })\n//       .then(response => {\n//             console.log(response.data.data.myList);\n//         const myList = response.data.data.myList;\n//         const alarmProduct = myList.filter((el) => el.productId === item.productId)\n//         console.log(\"알람프로덕트\", alarmProduct)\n//           if(alarmProduct[0].alarm === true){\n//             swal({\n//               title: \"Good job!\",\n//               text: \"발매 하루 전에 메일로 발송됩니다.\",\n//               icon: \"success\",\n//             });     \n//           }else{\n//              swal(\"Oops\", \"알람 설정이 취소되었습니다.\", \"error\")\n//           }        \n//        });\n//     }\n  \n//   return (\n//       <VStack\n//                 divider={<StackDivider  mt=\"3\" />}\n//                 borderColor='gray.100'\n//                 borderWidth='2px'\n//                 spacing={8}\n//                 p={4}\n//                 borderRadius='lg'\n//                 w='100%'\n//                 maxW={{ base: '120vw', sm: '100vw', lg: '50vw', xl: '40vw' }}\n//                 alignItems='stretch'\n//                 >\n//                 <HStack >\n//                     <Wrap>\n//                         <WrapItem>\n//                         <Avatar size=\"xl\" name=\"shoes\" src={`https://projectb1.com:4000/${item.images[0]}`} />\n//                         </WrapItem>\n//                         <Box p={4} >\n//                             <Heading fontSize=\"xl\">{item.releaseString}</Heading>\n//                             <Text mt={4}>{item.productName}</Text>\n//                         </Box>\n//                         <Spacer />\n//                         <div style={{marginRight:\"10px\"}}></div>\n//                         <Switch defaultChecked=\"true\"\n//                          onChange={alarmSetting}\n//                          ></Switch>\n//                         <IconButton\n//                             icon={<FaTrash />}\n//                             isRound='true'\n//                             onClick={() => {handleDelete(item.productId)}}\n//                         />\n//                     </Wrap>\n//                 </HStack>\n//       </VStack>\n//   )\n// };\n \n\n\n\nimport React, { useState } from 'react'\nimport axios from \"axios\";\nimport { Switch, Button, HStack, Heading, Box,\n         VStack, Text, IconButton, StackDivider, Spacer, Badge, Avatar, Wrap, WrapItem\n} from \"@chakra-ui/react\"\nimport { FaTrash } from 'react-icons/fa';\nimport swal from \"sweetalert\"; \n\n\nexport default function AlarmItem({ item, handleDelete }) {\n\n  const accessToken = window.localStorage.getItem('userToken')\n\n      const alarmSetting = (productId) => {\n        \n        console.log(\"알람설정\")\n        let body = {\n          productId: item.productId,\n        }\n        console.log(\"바디가뭐야\", body)\n        axios.post(`https://projectb1.com:4000/products/changeAlarm`, body, \n        {\n        headers: {\"okCome\": accessToken}\n      })\n      .then(response => {\n            console.log(response.data.data.myList);\n        const myList = response.data.data.myList;\n        const alarmProduct = myList.filter((el) => el.productId === item.productId)\n        console.log(\"알람프로덕트\", alarmProduct)\n          if(alarmProduct[0].alarm === true){\n            swal({\n              title: \"Good job!\",\n              text: \"발매 하루 전에 메일로 발송됩니다.\",\n              icon: \"success\",\n            });     \n          }else{\n             swal(\"Oops\", \"알람 설정이 취소되었습니다.\", \"error\")\n          }        \n       });\n    }\n  \n  return (\n      <VStack\n                divider={<StackDivider  mt=\"3\" />}\n                borderColor='gray.100'\n                borderWidth='2px'\n                spacing={8}\n                p={4}\n                borderRadius='lg'\n                w='100%'\n                maxW={{ base: '120vw', sm: '100vw', lg: '50vw', xl: '40vw' }}\n                alignItems='stretch'\n                >\n                <HStack >\n                    <Wrap>\n                        <WrapItem>\n                        <Avatar size=\"xl\" name=\"shoes\" src={`https://projectb1.com:4000/${item.images[0]}`} />\n                        </WrapItem>\n                        <Box p={4} >\n                            <Heading fontSize=\"xl\">{item.releaseString}</Heading>\n                            <Text mt={4}>{item.productName}</Text>\n                        </Box>\n                        <Spacer />\n                        <div style={{marginRight:\"10px\"}}></div>\n                        <Switch defaultChecked=\"true\"\n                         onChange={alarmSetting}\n                         ></Switch>\n                        <IconButton\n                            icon={<FaTrash />}\n                            isRound='true'\n                            onClick={() => {handleDelete(item.productId)}}\n                        />\n                    </Wrap>\n                </HStack>\n      </VStack>\n  )\n};\n \n","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Comments.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/LandingCardDetail.js",["156","157"],"import styled from \"styled-components\";\nimport Jordan from \"../../../assets/Jordan.png\";\n\nconst DetailsContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 2.5em 6px 0 6px;\n  line-height: 1.4;\n  user-select: none;\n`;\n\nconst MediumText = styled.span`\n  font-size: 14px;\n  color: #000;\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst SmallText = styled.span`\n  font-size: 10px;\n  color: #000;\n  font-weight: 700;\n  text-transform: uppercase;\n`;\n\nconst SpacedHorizontalContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst BuyButton = styled.button`\n  padding: 10px 16px;\n  background-color: #805BD5;\n  color: #fff;\n  text-transform: uppercase;\n  font-size: 16px;\n  font-weight: 700;\n  border: 3px solid transparent;\n  outline: none;\n  cursor: pointer;\n  transition: all 290ms ease-in-out;\n  border-radius: 8px;\n  &:hover {\n    background-color: transparent;\n    color: #000;\n    border: 3px solid #805BD5;\n  }\n`;\n\nexport default function ShoeDetials() {\n  return (\n    <DetailsContainer>\n      {/* <SmallText>Nike</SmallText> */}\n      <SpacedHorizontalContainer>\n        <MediumText>Nike Jordan Mid SE-GC</MediumText>\n      </SpacedHorizontalContainer>\n      <br />\n      <SpacedHorizontalContainer>\n        <MediumText>알림 설정 해보세요!</MediumText>\n        <BuyButton>알림</BuyButton>\n      </SpacedHorizontalContainer>\n    </DetailsContainer>\n  );\n}\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/SingleComment.js",["158","159","160","161","162"],"import React from 'react'\nimport Likes from './Likes'\nimport { Divider, Text, Stack } from \"@chakra-ui/react\"\nimport { IoMdHeartEmpty, IoMdHeart } from \"react-icons/io5\";\n\nexport default function SingleComment(props) {\n  return (\n    <div className=\"comment-list\" \n         style={{ \n          boxShadow:\"0 0 3px #ccc\",\n          margin:\"30px 110px\", \n          display:\"block\",\n          borderRadius: \"30px\"\n        }}>  \n     <ul className=\"comment-wrapper\" > \n      <li className=\"comment\" \n          style={{\n            listStyle: \"none\", \n            display:\"flex\", \n            alignItems:\"center\",\n            height: \"30px\",\n            padding: \"50px 50px\",\n            fontSize: \"18px\"\n          }}>\n        <span className=\"nickName\" \n          style=\n            {{\n              padding:\"5px\",\n              fontWeight: \"700\", \n            }}\n            >{props.comment.nickName}</span> \n        <div className=\"content\" style={{flexGrow: \"1\"}}>{props.comment.content}</div> \n        <Likes \n          commentId={props.comment._id}\n          productId={props.productId}\n          updateLikes={props.updateLikes}\n          state={props.comment.state}\n          goodCount={props.comment.goodCount}\n          style={{ alignItem: \"center\"}}\n        />        \n      </li> \n      </ul>\n    </div>\n  )\n}\n\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Likes.js",["163"],"import React, { useEffect, useState } from 'react'\nimport { IoMdHeartEmpty, IoMdHeart } from \"react-icons/io\";\nimport axios from 'axios';\nimport swal from \"sweetalert\";\naxios.defaults.withCredentials = true;\nexport default function Likes(props) {\n  const [likeCount, setLikeCount] = useState(props.goodCount);\n  const [action, setAction] = useState(props.state);\n  const accessToken = window.localStorage.getItem('userToken')\n  const onLikeClick = () => {\n    const body = {\n      id: props.productId,\n      comment_id: props.commentId\n    }\n    axios.patch(`https://projectb1.com:4000/products/good`, body, \n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n      })\n      .then(response => {\n        const comments = response.data.data.comment\n        const filteredLike = comments.filter((comment) => {\n          return comment._id === props.commentId\n       })    \n        setAction(filteredLike[0].state)\n        props.updateLikes(filteredLike[0].state)\n        setLikeCount(filteredLike[0].goodUsers.length)  \n      })\n      .catch((err) =>{\n        if(err.response.status === 401) {\n          swal({\n           title: \"로그인이 필요합니다.\",\n           icon: \"warning\",\n        })     \n      }\n    })    \n  }\n  return (\n    <div>\n      <div className=\"like-icon\" style={{display: \"flex\"}} onClick={onLikeClick}>\n        {action=== 0 ? \n          <IoMdHeartEmpty  size=\"25\"/> :\n          <IoMdHeart size=\"25\" color=\"rgb(201, 89, 113)\" />}         \n        <span \n          className=\"like-count\"\n          style={{marginLeft: \"5px\"}}\n        >{likeCount}</span>\n      </div>\n    </div>\n  )\n}",{"ruleId":"164","severity":1,"message":"165","line":25,"column":10,"nodeType":"166","messageId":"167","endLine":25,"endColumn":24},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":51,"column":8,"nodeType":"174","endLine":51,"endColumn":10,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":6,"column":1,"nodeType":"178","endLine":29,"endColumn":2},{"ruleId":"164","severity":1,"message":"179","line":12,"column":3,"nodeType":"166","messageId":"167","endLine":12,"endColumn":7},{"ruleId":"164","severity":1,"message":"180","line":13,"column":3,"nodeType":"166","messageId":"167","endLine":13,"endColumn":7},{"ruleId":"164","severity":1,"message":"179","line":12,"column":3,"nodeType":"166","messageId":"167","endLine":12,"endColumn":7},{"ruleId":"164","severity":1,"message":"180","line":13,"column":3,"nodeType":"166","messageId":"167","endLine":13,"endColumn":7},{"ruleId":"164","severity":1,"message":"181","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":13},{"ruleId":"164","severity":1,"message":"182","line":5,"column":10,"nodeType":"166","messageId":"167","endLine":5,"endColumn":16},{"ruleId":"164","severity":1,"message":"183","line":5,"column":18,"nodeType":"166","messageId":"167","endLine":5,"endColumn":24},{"ruleId":"164","severity":1,"message":"184","line":5,"column":26,"nodeType":"166","messageId":"167","endLine":5,"endColumn":32},{"ruleId":"164","severity":1,"message":"185","line":6,"column":3,"nodeType":"166","messageId":"167","endLine":6,"endColumn":9},{"ruleId":"164","severity":1,"message":"180","line":6,"column":11,"nodeType":"166","messageId":"167","endLine":6,"endColumn":15},{"ruleId":"164","severity":1,"message":"186","line":6,"column":17,"nodeType":"166","messageId":"167","endLine":6,"endColumn":27},{"ruleId":"164","severity":1,"message":"187","line":6,"column":29,"nodeType":"166","messageId":"167","endLine":6,"endColumn":41},{"ruleId":"164","severity":1,"message":"188","line":6,"column":43,"nodeType":"166","messageId":"167","endLine":6,"endColumn":49},{"ruleId":"164","severity":1,"message":"189","line":6,"column":51,"nodeType":"166","messageId":"167","endLine":6,"endColumn":56},{"ruleId":"164","severity":1,"message":"190","line":6,"column":58,"nodeType":"166","messageId":"167","endLine":6,"endColumn":64},{"ruleId":"164","severity":1,"message":"191","line":6,"column":66,"nodeType":"166","messageId":"167","endLine":6,"endColumn":70},{"ruleId":"164","severity":1,"message":"192","line":6,"column":72,"nodeType":"166","messageId":"167","endLine":6,"endColumn":80},{"ruleId":"172","severity":1,"message":"173","line":31,"column":5,"nodeType":"174","endLine":31,"endColumn":7,"suggestions":"193"},{"ruleId":"164","severity":1,"message":"194","line":4,"column":15,"nodeType":"166","messageId":"167","endLine":4,"endColumn":24},{"ruleId":"164","severity":1,"message":"195","line":113,"column":8,"nodeType":"166","messageId":"167","endLine":113,"endColumn":13},{"ruleId":"172","severity":1,"message":"196","line":127,"column":6,"nodeType":"174","endLine":127,"endColumn":8,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":58,"column":19,"nodeType":"200","messageId":"201","endLine":61,"endColumn":21},{"ruleId":"164","severity":1,"message":"181","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":13},{"ruleId":"164","severity":1,"message":"202","line":25,"column":10,"nodeType":"166","messageId":"167","endLine":25,"endColumn":14},{"ruleId":"203","severity":1,"message":"204","line":62,"column":13,"nodeType":"205","endLine":63,"endColumn":64},{"ruleId":"164","severity":1,"message":"206","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":14},{"ruleId":"164","severity":1,"message":"183","line":6,"column":10,"nodeType":"166","messageId":"167","endLine":6,"endColumn":16},{"ruleId":"164","severity":1,"message":"207","line":18,"column":12,"nodeType":"166","messageId":"167","endLine":18,"endColumn":18},{"ruleId":"164","severity":1,"message":"208","line":18,"column":20,"nodeType":"166","messageId":"167","endLine":18,"endColumn":26},{"ruleId":"164","severity":1,"message":"209","line":82,"column":17,"nodeType":"166","messageId":"167","endLine":82,"endColumn":25},{"ruleId":"164","severity":1,"message":"183","line":84,"column":18,"nodeType":"166","messageId":"167","endLine":84,"endColumn":24},{"ruleId":"164","severity":1,"message":"189","line":85,"column":58,"nodeType":"166","messageId":"167","endLine":85,"endColumn":63},{"ruleId":"164","severity":1,"message":"210","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":14},{"ruleId":"164","severity":1,"message":"211","line":21,"column":7,"nodeType":"166","messageId":"167","endLine":21,"endColumn":16},{"ruleId":"164","severity":1,"message":"212","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":17},{"ruleId":"164","severity":1,"message":"180","line":3,"column":19,"nodeType":"166","messageId":"167","endLine":3,"endColumn":23},{"ruleId":"164","severity":1,"message":"213","line":3,"column":25,"nodeType":"166","messageId":"167","endLine":3,"endColumn":30},{"ruleId":"164","severity":1,"message":"214","line":4,"column":10,"nodeType":"166","messageId":"167","endLine":4,"endColumn":24},{"ruleId":"164","severity":1,"message":"215","line":4,"column":26,"nodeType":"166","messageId":"167","endLine":4,"endColumn":35},{"ruleId":"164","severity":1,"message":"216","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":26},"no-unused-vars","'ChakraProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["217"],"no-negated-in-lhs",["218"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'accessToken'. Either include it or remove the dependency array.","ArrayExpression",["219"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Link' is defined but never used.","'Text' is defined but never used.","'Toast' is defined but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'HStack' is defined but never used.","'VStack' is defined but never used.","'IconButton' is defined but never used.","'StackDivider' is defined but never used.","'Spacer' is defined but never used.","'Badge' is defined but never used.","'Avatar' is defined but never used.","'Wrap' is defined but never used.","'WrapItem' is defined but never used.",["220"],"'Container' is defined but never used.","'likes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["221"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'styled' is defined but never used.","'isOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'useState' is defined but never used.","'Jordan' is defined but never used.","'SmallText' is assigned a value but never used.","'Divider' is defined but never used.","'Stack' is defined but never used.","'IoMdHeartEmpty' is defined but never used.","'IoMdHeart' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"222","fix":"224"},{"desc":"225","fix":"226"},"Update the dependencies array to be: [accessToken]",{"range":"227","text":"228"},{"range":"229","text":"228"},"Update the dependencies array to be: [productId]",{"range":"230","text":"231"},[1562,1564],"[accessToken]",[1040,1042],[4402,4404],"[productId]"]