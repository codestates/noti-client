[{"/Users/seunghunhan/Desktop/project/noti-client/src/index.js":"1","/Users/seunghunhan/Desktop/project/noti-client/src/App.js":"2","/Users/seunghunhan/Desktop/project/noti-client/src/assets/state.js":"3","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/LandingPage.js":"4","/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/AlarmPage.js":"5","/Users/seunghunhan/Desktop/project/noti-client/src/components/UploadProductPage/UploadProdctPage.js":"6","/Users/seunghunhan/Desktop/project/noti-client/src/components/ModifiedPage/ModifiedPage.js":"7","/Users/seunghunhan/Desktop/project/noti-client/src/components/SignupPage/SignupPage.js":"8","/Users/seunghunhan/Desktop/project/noti-client/src/components/Navbar/Navbar.js":"9","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/DetailProductPage.js":"10","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/LoginPage.js":"11","/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/Validation.js":"12","/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/FileUpload.js":"13","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Comments.js":"14","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/SingleComment.js":"15","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/SearchBox.js":"16","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Toast.js":"17","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Likes.js":"18","/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/Sections/AlarmItem.js":"19","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Product.js":"20","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/Section/Card.js":"21","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/LandingCard.js":"22","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/LandingCardDetail.js":"23","/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/index.js":"24","/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/UserReducer.js":"25","/Users/seunghunhan/Desktop/project/noti-client/src/_Actions/Types.js":"26"},{"size":1542,"mtime":1619149086107,"results":"27","hashOfConfig":"28"},{"size":3826,"mtime":1619149712828,"results":"29","hashOfConfig":"28"},{"size":943,"mtime":1618817250092,"results":"30","hashOfConfig":"28"},{"size":3184,"mtime":1619143436258,"results":"31","hashOfConfig":"28"},{"size":2664,"mtime":1619143534387,"results":"32","hashOfConfig":"28"},{"size":2579,"mtime":1619143534293,"results":"33","hashOfConfig":"28"},{"size":4662,"mtime":1619143534293,"results":"34","hashOfConfig":"28"},{"size":4622,"mtime":1619136486229,"results":"35","hashOfConfig":"28"},{"size":5808,"mtime":1619143534382,"results":"36","hashOfConfig":"28"},{"size":3065,"mtime":1619148222793,"results":"37","hashOfConfig":"28"},{"size":4513,"mtime":1619149361701,"results":"38","hashOfConfig":"28"},{"size":772,"mtime":1618817250108,"results":"39","hashOfConfig":"28"},{"size":2088,"mtime":1619143534294,"results":"40","hashOfConfig":"28"},{"size":2771,"mtime":1619149493409,"results":"41","hashOfConfig":"28"},{"size":1130,"mtime":1619149586695,"results":"42","hashOfConfig":"28"},{"size":517,"mtime":1619140573545,"results":"43","hashOfConfig":"28"},{"size":750,"mtime":1619136486226,"results":"44","hashOfConfig":"28"},{"size":1563,"mtime":1619149566324,"results":"45","hashOfConfig":"28"},{"size":2706,"mtime":1619143740249,"results":"46","hashOfConfig":"28"},{"size":2941,"mtime":1619143190281,"results":"47","hashOfConfig":"28"},{"size":312,"mtime":1619136486228,"results":"48","hashOfConfig":"28"},{"size":3724,"mtime":1619136486224,"results":"49","hashOfConfig":"28"},{"size":1500,"mtime":1619136486224,"results":"50","hashOfConfig":"28"},{"size":256,"mtime":1619148860535,"results":"51","hashOfConfig":"28"},{"size":785,"mtime":1619149181488,"results":"52","hashOfConfig":"28"},{"size":187,"mtime":1619148740540,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"1yfoxc8",{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"57"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"57"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"/Users/seunghunhan/Desktop/project/noti-client/src/index.js",["121"],"// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Reducer from './_Reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        {/* <ChakraProvider> */}\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n        {/* </ChakraProvider> */}\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();",["122","123"],"/Users/seunghunhan/Desktop/project/noti-client/src/App.js",["124"],"/Users/seunghunhan/Desktop/project/noti-client/src/assets/state.js",[],["125","126"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/LandingPage.js",["127"],"import React from 'react'\nimport SearchBox from \"./Sections/SearchBox\";\nimport Product from './Sections/Product';\nimport { Box, Container, HStack,\n  Button,\n  Flex,\n  SimpleGrid,\n  Heading,\n  Stack,\n  Text,\n  Link, \n} from \"@chakra-ui/react\"\nimport LandingCard from \"./Sections/LandingCard\";\n\n\nexport default function LandingPage(props) {    \n  return (\n    <div style={{ width: '80%', margin: '2rem auto' }}>\n    <Flex\n      align=\"center\"\n      justify={{ base: \"center\", md: \"space-around\", xl: \"space-between\" }}\n      direction={{ base: \"column-reverse\", md: \"row\" }}\n      wrap=\"no-wrap\"\n      minH=\"100vh\"\n      px={6}\n      mb={10}\n      // {...rest}\n    >\n      <Stack\n          spacing={4}\n          w={{ base: \"80%\", md: \"40%\" }}\n          align={[\"center\", \"center\", \"flex-start\", \"flex-start\"]}\n      >\n        <Heading\n          as=\"h1\"\n          size=\"2xl\"\n          fontWeight=\"extrabold\"\n          color=\"primary.800\"\n          lineHeight={1.4}\n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\n        >\n          NOTI로 발매 정보를 미리 받아 보세요. 🔔\n        </Heading>\n\n        <Heading\n          as=\"h2\"\n          size=\"md\"\n          color=\"primary.800\"\n          opacity=\"0.8\"\n          fontWeight=\"normal\"\n          lineHeight={1.5}\n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\n        >\n          꼭 갖고 싶은 아이템 놓치지 않도록 NOTI로 미리 알림 설정 하시면 발매 하루 전 이메일로 발매 정보를 다시 알려 드립니다.\n        </Heading>\n\n        <Link href=\"/login\">\n          <Button\n            colorScheme=\"purple\"\n            borderRadius=\"8px\"\n            py=\"4\"\n            px=\"4\"\n            lineHeight=\"1\"\n            size=\"lg\"\n          >\n            발매 정보 미리 받기\n          </Button>\n        </Link>\n\n        <Text\n          fontSize=\"xs\"\n          mt={2}\n          textAlign=\"center\"\n          color=\"primary.800\"\n          opacity=\"0.6\"\n        >\n        </Text>\n      </Stack>\n\n      <Box w={{ base: \"100%\", sm: \"60%\", md: \"40%\" }} mb={{ base: 12, md: 0 }}>\n        <LandingCard>\n        {/* <Image src size=\"100%\" rounded=\"1rem\" shadow=\"2xl\" /> */}\n        \n        </LandingCard>\n      </Box>\n    </Flex>\n\n    <SearchBox updateSearchTerm={props.updateSearchTerm} />\n      <br />\n      <Text\n          fontSize=\"3xl\"\n          fontWeight=\"bold\"\n          mt={2}\n          textAlign=\"left\"\n          color=\"primary.800\"\n          opacity=\"0.8\"\n        >\n          🎉 최신 발매정보\n        </Text>\n      \n    <HStack>\n    <div style={{ width: '100%', margin: '2rem auto' }}>\n    <SimpleGrid columns={[2, null, 5]} spacing=\"36px\">\n        {props.productList.map((data, index) => \n    <Product \n        data={data} \n        key={index} \n        handleClick={() => {props.addToCart(data._id)}}\n        />)}\n    </SimpleGrid>\n        <Text\n          fontSize=\"lg\"\n          fontWeight=\"bold\"\n          mt={2}\n          textAlign=\"center\"\n          color=\"primary.800\"\n          opacity=\"1\"\n        >\n          🎉 최신 발매정보를 지속적으로 업데이트 하고 있어요!\n        </Text>\n    </div>\n    </HStack>        \n  </div>\n  )\n}","/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/AlarmPage.js",["128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"import React, { useEffect, useState } from 'react'\nimport axios from \"axios\";\nimport Toast from '../LandingPage/Sections/Toast'\nimport AlarmItem from './Sections/AlarmItem';\nimport { Switch, Button, HStack, Heading, Box, useColorModeValue,\n  VStack, Text, IconButton, StackDivider, Spacer, Badge, Avatar, Wrap, WrapItem\n} from \"@chakra-ui/react\"\n\nfunction AlarmPage({ accessToken }) {\n \n  const [alarmList, setAlarmList] = useState([])\n  const [leftDay, setLeftDay] = useState(\"\")\n  const [productName, setProductName] = useState(\"\")\n\n  // const accessToken = window.localStorage.getItem('userToken')\n\n  console.log(\"알림페이지토큰\", accessToken)\n\n  useEffect(() => {\n    axios\n      .get(\"https://projectb1.com:4000/products/myList\",{\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n      })\n      .then(response => {\n        if(response.status === 200){\n          setAlarmList(response.data.data)\n          setLeftDay(response.data.data[0].leftDay)\n          setProductName(response.data.data[0].productName)\n        }\n      })\n  },[])\n\n  const handleDelete = (productId) => {\n        \n  axios.delete(`https://projectb1.com:4000/products/removeAlarm?productId=${productId}`, {\n    headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n  })\n  .then(response => {\n    console.log(\"삭제버튼누른뒤\", response.data.data.myList);\n    setAlarmList(response.data.data.myList)\n  });\n}\n\nreturn (\n  <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{ base: '4', lg: '8' }}\n  >\n      <Box maxW=\"md\" mx=\"auto\">\n        <Heading\n          mb='8'\n          fontWeight='extrabold'\n          size='2xl'\n          bgGradient='linear(to-r, pink.500, pink.300, blue.500)'\n          color='purple'\n          bgClip='text'\n        >\n          {leftDay}일 뒤,\n          <br></br>\n          {productName}가 발매 됩니다.\n        </Heading>\n\n          <div className=\"alarmList-container\">\n             {!alarmList.length ? (\n                <div className=\"alarmList-text\">\n                  알림리스트에 아이템이 없습니다.\n                </div>\n                ) : (\n                  <div className=\"alarmList\">\n                    {alarmList.map((data, idx) => {\n                      return <AlarmItem \n                        key={idx}\n                        item={data}\n                        handleDelete={handleDelete}\n                        accessToken={accessToken}\n                      />\n                      })}\n                    </div>\n                    )}\n            </div>\n        </Box>\n    </Box>\n  )\n}\n\nexport default AlarmPage    \n","/Users/seunghunhan/Desktop/project/noti-client/src/components/UploadProductPage/UploadProdctPage.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/ModifiedPage/ModifiedPage.js",["142","143"],"import React, { useState } from \"react\";\nimport { Card } from '../LoginPage/Section/Card'\nimport {\n  Box,\n  Button,\n  Heading,\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  SimpleGrid,\n  Link,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react'\nimport validation from \"../utils/Validation\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\n\n// const accessToken = window.localStorage.getItem('userToken')\n\naxios.defaults.withCredentials = true;\n\nexport default function ModifiedPage({accessToken}) {\n  const [values, setValues] = useState({\n    nickName: \"\",\n    password: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n  const handleChange = (key) => (e) => {\n    setValues({\n      ...values,\n      [key]: e.target.value,\n    });\n    setErrors(validation(values));\n  };\n  const history = useHistory();\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n    const { nickName,  password } = values;\n    if (!password && !nickName ) {\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n   console.log(accessToken)\n    axios\n      .post(\n        \"https://projectb1.com:4000/users/changePrivacy\",\n        {\n          nickName,\n          password\n        },\n        {\n          headers: {\n              \"okCome\":accessToken,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        if (res.status === 200) {\n            console.log(res.data)\n           history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err.response.data.message);\n        swal(\"Oops\", 'duplicated nickName', \"error\")\n        history.push(\"/login\");\n      });\n  };\n  \n  return (\n    <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{ base: '4', lg: '8' }}\n  >\n    <Box maxW=\"md\" mx=\"auto\">\n    <Heading textAlign=\"center\" size=\"lg\" fontWeight=\"extrabold\">\n        🔔 개인 정보를 바꾸어 보세요!\n    </Heading>\n    <SimpleGrid mt=\"10\" columns={3} spacing=\"3\"/>\n    <Card>\n    <Stack spacing=\"6\">\n          <FormControl id=\"name\">\n            <FormLabel>💌 닉네임</FormLabel>\n              <Input onChange={handleChange(\"nickName\")}\n                // value={errors.nickName}\n                name=\"name\" \n                type=\"name\" \n                placeholder=\"닉네임을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.nickName && (\n              <p className=\"error-signup\">{errors.nickName}</p>\n            )}\n        </Stack>\n        {/* <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"email\">\n            <FormLabel>💌 이메일</FormLabel>\n              <Input onChange={handleChange(\"email\")}\n                name=\"email\" \n                type=\"email\" \n                placeholder=\"이메일을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.email && <p className=\"error-signup\">{errors.email}</p>}\n        </Stack> */}\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호</FormLabel>\n              <Input onChange={handleChange(\"password\")}\n                name=\"password\" \n                type=\"password\" \n                placeholder=\"비밀번호를 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.password && (<p className=\"error-signup\">{errors.password}</p> )}\n        </Stack>\n        {/* <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호 확인 </FormLabel>\n              <Input onChange={handleChange(\"confirmPassword\")}\n                name=\"confirmPassword\"\n                type=\"password\"\n                placeholder=\"비밀번호를 다시한번 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.confirmPassword && (\n              <p className=\"error-signup\">{errors.confirmPassword}</p>\n            )}\n        </Stack> */}\n           <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <Button\n              onClick={handleSignup}  \n              type=\"submit\" \n              colorScheme=\"purple\" \n              width=\"full\"\n              fontSize=\"md\">\n              개인정보변경\n          </Button>\n          <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n    </Card>\n    </Box>\n    </Box>\n  );\n}\n\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/SignupPage/SignupPage.js",["144","145"],"import React, { useState } from \"react\";\nimport { Card } from '../LoginPage/Section/Card'\nimport {\n  Box,\n  Button,\n  Heading,\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  SimpleGrid,\n  Link,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react'\nimport validation from \"../utils/Validation\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\n\naxios.defaults.withCredentials = true;\n\nexport default function SingupPage() {\n\n  const [values, setValues] = useState({\n    nickName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  \n  const [errors, setErrors] = useState({});\n\n  const handleChange = (key) => (e) => {\n    setValues({\n      ...values,\n      [key]: e.target.value,\n    });\n    setErrors(validation(values));\n  };\n  \n  const history = useHistory();\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n\n    const { nickName, email, password, confirmPassword } = values;\n    if (!email || !password || !nickName || !confirmPassword) {\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n   \n    axios\n      .post(\n        \"https://projectb1.com:4000/users/signup\",\n        {\n          nickName,\n          email,\n          password,\n          confirmPassword,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        if (res.status === 200) {\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err.response.data.message);\n        swal(\"Oops\", err.response.data.message, \"error\")\n        history.push(\"/login\");\n      });\n  };\n  return (\n    <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{ base: '4', lg: '8' }}\n  >\n    <Box maxW=\"md\" mx=\"auto\">\n    <Heading textAlign=\"center\" size=\"lg\" fontWeight=\"extrabold\">\n        🔔 발매 정보를 미리 받아 보세요!\n    </Heading>\n    <SimpleGrid mt=\"10\" columns={3} spacing=\"3\"/>\n    <Card>\n    <Stack spacing=\"6\">\n          <FormControl id=\"name\">\n            <FormLabel>💌 닉네임</FormLabel>\n              <Input onChange={handleChange(\"nickName\")}\n                // value={errors.nickName}\n                name=\"name\" \n                type=\"name\" \n                placeholder=\"닉네임을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.nickName && (\n              <p className=\"error-signup\">{errors.nickName}</p>\n            )}\n        </Stack>\n\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"email\">\n            <FormLabel>💌 이메일</FormLabel>\n              <Input onChange={handleChange(\"email\")}\n                name=\"email\" \n                type=\"email\" \n                placeholder=\"이메일을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.email && <p className=\"error-signup\">{errors.email}</p>}\n        </Stack>\n\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호</FormLabel>\n              <Input onChange={handleChange(\"password\")}\n                name=\"password\" \n                type=\"password\" \n                placeholder=\"비밀번호를 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.password && (<p className=\"error-signup\">{errors.password}</p> )}\n        </Stack>\n\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호 확인 </FormLabel>\n              <Input onChange={handleChange(\"confirmPassword\")}\n                name=\"confirmPassword\"\n                type=\"password\"\n                placeholder=\"비밀번호를 다시한번 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.confirmPassword && (\n              <p className=\"error-signup\">{errors.confirmPassword}</p>\n            )}\n        </Stack>\n\n           <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <Button\n              onClick={handleSignup}  \n              type=\"submit\" \n              colorScheme=\"purple\" \n              width=\"full\"\n              fontSize=\"md\">\n              회원가입하기\n          </Button>\n          <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n    </Card>\n    </Box>\n    </Box>\n    \n  );\n}\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/Navbar/Navbar.js",["146","147"],"import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../../Navbar.css\";\n\nexport default function Navbar({ loginHandler, handleLogout, isLogin, alarmList }){\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n\n  return(\n    <>\n      <nav className=\"navbar\">\n        <div className=\"nav-container\">\n          <Link \n            exact to=\"/\"\n            className=\"nav-logo\"\n            style={{textDecoration: \"none\", color: \"black\"}}>\n            NOTI\n          </Link>     \n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\n             {isLogin ? (\n            <>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link exact to=\"/user/alarmpage\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  알림리스트\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link exact to=\"/modified\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  회원정보수정\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link \n                  exact to=\"/\"\n                  onClick={handleLogout}\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={()=>{\n                    handleClick();\n                    handleLogout();\n                  }}\n                >\n                로그아웃\n                </Link>                  \n              </li> \n            </>\n             ) : (\n            <>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>              \n              <li className=\"nav-item\">\n                <Link exact to=\"/login\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  로그인\n                </Link>\n              </li>   \n            </>            \n            )}          \n          </ul>\n          <div className=\"nav-icon\" onClick={handleClick}>\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\n          </div> \n        </div>\n      </nav>\n    </>\n  );\n}\n\n\n\n// import React, {useState } from \"react\"\n// import { Link } from \"react-router-dom\"\n// import { Box, Flex, Text, Button, Stack, CloseIcon } from \"@chakra-ui/react\"\n// import { MdMenu } from \"react-icons/md\"\n\n// const MenuItems = (props) => {\n//   const { loginHandler, handleLogout, children, isLast, to = \"/\", ...rest } = props\n//   return (\n//     <Text\n//       mb={{ base: isLast ? 0 : 8, sm: 0 }}\n//       mr={{ base: 0, sm: isLast ? 0 : 8 }}\n//       display=\"block\"\n//       {...rest}\n//     >\n//       <Link to={to}>{children}</Link>\n//     </Text>\n//   )\n// }\n\n// const Navbar = (props) => {\n\n//   const [click, setClick] = useState(false);\n//   const handleClick = () => setClick(!click);\n//   const [show, setShow] = useState(false)\n//   const toggleMenu = () => setShow(!show)\n\n//   return (\n//     <Flex\n//       as=\"nav\"\n//       align=\"center\"\n//       justify=\"space-between\"\n//       wrap=\"wrap\"\n//       w=\"100%\"\n//       mb={8}\n//       p={8}\n//       bg={[\"primary.500\", \"primary.500\", \"transparent\", \"transparent\"]}\n//       color={[\"white\", \"white\", \"primary.700\", \"primary.700\"]}\n//       {...props}\n//     >\n//       <Flex align=\"center\">\n//         NOTI\n//       </Flex>\n\n//       <Box display={{ base: \"block\", md: \"none\" }} onClick={toggleMenu}>\n//         {show ? <CloseIcon /> : <MdMenu />}\n//       </Box>\n\n//       <Box\n//         display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\n//         flexBasis={{ base: \"100%\", md: \"auto\" }}\n//       >\n//         <Flex\n//           align={[\"center\", \"center\", \"center\", \"center\"]}\n//           justify={[\"center\", \"space-between\", \"flex-end\", \"flex-end\"]}\n//           direction={[\"column\", \"row\", \"row\", \"row\"]}\n//           pt={[4, 4, 0, 0]}\n//         >\n//           <MenuItems to=\"/\">발매정보리스트</MenuItems>\n//           <MenuItems to=\"/user/alarmpage\">알림 리스트 </MenuItems>\n//           <MenuItems to=\"/\">회원정보수정 </MenuItems>\n//           <MenuItems \n//           to=\"/\"\n//           onClick={()=>{\n//           handleClick();\n//           // handleLogout();\n//           }}\n//           >로그아웃 </MenuItems>\n//           <MenuItems to=\"/signup\" isLast>\n//             <Button\n//               size=\"sm\"\n//               rounded=\"md\"\n//               color={[\"primary.500\", \"primary.500\", \"white\", \"white\"]}\n//               bg={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}\n//               _hover={{\n//                 bg: [\n//                   \"primary.100\",\n//                   \"primary.100\",\n//                   \"primary.600\",\n//                   \"primary.600\",\n//                 ],\n//               }}\n//             >\n//               Create Account\n//             </Button>\n//           </MenuItems>\n//         </Flex>\n//       </Box>\n//     </Flex>\n//   )\n// }\n\n// export default Navbar\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/DetailProductPage.js",["148","149"],"import React, { useEffect, useState, useRef } from 'react'\nimport axios from 'axios';\nimport Comments from './Setions/Comments';\nimport '../../DetailProductPage.css';\nexport default function DetailProductPage(props) {\nconst productId = props.match.params.productId\nconst [product, setProduct] = useState([])\nconst [commentLists, setCommentLists] = useState([])\nconst [likes, setLikes] = useState(0)\n  useEffect(() => {\n    axios\n      .get(`https://projectb1.com:4000/products/detailProduct?id=${productId}`)\n        .then(response => {\n          if(response.data.success){\n            console.log('res.data', response.data.data)\n            setProduct(response.data.data)\n            setCommentLists(response.data.data[0].comment)\n          } else {\n            alert('상세 정보 가져오기를 실패했습니다')\n          }\n        })\n  }, [])\n  const [index, setIndex] = useState(0)\n  const myRef = useRef(null)\n  const updateLikes = (newLike) => {\n    setLikes(newLike)\n  }\n  const updateComment = (newComment) => {\n    setCommentLists(newComment)\n  }\n  const handleTab = (index) =>{\n    setIndex(index)\n    const images = myRef.current.children;\n    for(let i=0; i<images.length; i++){\n      images[i].className = images[i].className.replace(\"active\", \"\");\n    }\n    images[index].className = \"active\";\n  }\n  return (\n  <>\n    <div className=\"detail-wrapper\">\n      {\n        product.map(item => (\n          <div className=\"details\" key={item.id}>\n            <div className=\"big-img\">\n              <img src={`https://projectb1.com:4000/${item.images[index]}`} alt=\"\" />\n            </div>\n            <div className=\"info\">\n              <div className=\"row\">\n                 <h2>{item.productName}</h2>\n              </div>\n              <br />\n              <div className=\"row\">\n                <span>브랜드 사이트</span> \n              <a href={item.brand}><i class=\"fas fa-external-link-alt\"></i></a>\n              </div>              \n              <div className=\"row\">\n                <span>발매일</span> \n                <span style={{fontWeight:\"500\"}}>{item.releaseString}</span> \n              </div>\n              <div className=\"row\">\n                <span>발매가격</span>  \n                <span style={{fontWeight:\"500\"}}>KRW {item.price}</span>\n              </div>\n              <div className=\"thumb\" ref={myRef}>\n                {\n                  item.images.map((image, index) => (\n                    <img src={`https://projectb1.com:4000/${image}`} alt=\"\" key={index} \n                    onClick={()=> handleTab(index)}\n                    />\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </div> \n     {/* <div className=\"comments-wrapper\" \n      style={{ maxWidth:\"1200px\", width:\"100%\", border:\"bold\"}} >  */}\n    <Comments \n      commentLists={commentLists} \n      productId={productId} \n      accessToken={props.accessToken}\n      updateComment={updateComment} \n      updateLikes={updateLikes}\n    />\n    {/* </div> */}\n  </>   \n  )\n}","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/LoginPage.js",["150","151"],"import React, { useState } from 'react';\nimport { Card } from './Section/Card'\nimport { useHistory } from 'react-router-dom';\nimport GoogleLogin from \"react-google-login\";\nimport \"./LoginPage.css\";\nimport axios from 'axios';\nimport swal from \"sweetalert\";\nimport Toast from \"../LandingPage/Sections/Toast\"\nimport {\n  Box,\n  Button,\n  Heading,\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  SimpleGrid,\n  Link,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react'\naxios.defaults.withCredentials = true;\nexport default function LoginPage({ loginHandler }) {\n  const [details, setDetails] = useState({email: \"\", password: \"\"})\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n  const submitHandler = (e) =>{\n    e.preventDefault();\n    const { email, password } = details;\n    if(!email || !password){\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n    axios.post(\"https://projectb1.com:4000/users/login\", \n    {\n      email,\n      password\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n    .then(res => {\n      history.push(\"/\");\n      loginHandler(res.data)\n      window.localStorage.setItem(\"userToken\", res.data.data )\n    })\n    .catch(err => {\n      console.log(err.message);\n      alert(err.message)\n    })\n  }\n  const handleLoginSuccess = (response) => {\n    console.log(\"구글로그인\", response.accessToken)\n    if (response.profileObj) {\n      axios\n        .post(\n          \"https://projectb1.com:4000/users/socialLogin\",\n          {\n            email: response.profileObj.email,\n            nickName: response.profileObj.name,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res)\n          window.localStorage.setItem(\"userToken\", res.data.data )\n          loginHandler(res.data)\n          setUser(response.profileObj);\n          history.push(\"/\");\n        });\n    }\n  };\n   const handleLoginFailure = (error) => {\n    console.log(error);\n  };\n  return (\n    <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{ base: '4', lg: '8' }}\n  >\n    <Box maxW=\"md\" mx=\"auto\">\n    <SimpleGrid mt=\"16\" columns={3} spacing=\"3\"/>\n    <Heading textAlign=\"center\" size=\"lg\" fontWeight=\"extrabold\">\n        🔔 꼭 갖고 싶은 아이템 놓치지 마세요!\n      </Heading>\n      {/* simpleGrid mt===lineHeight 적용 */}\n      <SimpleGrid mt=\"10\" columns={3} spacing=\"3\"/>\n      <Card>\n        <Stack spacing=\"6\">\n          <FormControl id=\"email\">\n            <FormLabel>💌 이메일</FormLabel>\n              <Input onChange={(e) => setDetails({...details, email: e.target.value})}\n                value={details.email}\n                name=\"email\" \n                type=\"email\" \n                placeholder=\"이메일을 입력해주세요.\"\n                autoComplete=\"email\" required />\n            </FormControl>\n        </Stack>\n          <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <FormControl id=\"email\">\n           <FormLabel>🔐 비밀번호</FormLabel>\n              <Input onChange={(e) => setDetails({...details, password: e.target.value})}\n              value={details.password}\n              name=\"email\" \n              type=\"password\"\n              placeholder=\"비밀번호를 입력해주세요.\"\n              autoComplete=\"email\" required />\n           </FormControl>\n           <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <Button\n              onClick={submitHandler}  \n              type=\"submit\" \n              colorScheme=\"purple\" \n              // size=\"lg\"\n              width=\"full\"\n              fontSize=\"md\">\n              이메일로 시작하기\n          </Button>\n          <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <GoogleLogin\n            buttonSize=\"320px\"\n            className=\"btn-google\"\n            clientId=\"996092186048-291mg21lf890quda77fdgrqn11il9c0h.apps.googleusercontent.com\"\n            buttonText=\"구글 계정으로 시작하기\"\n            onSuccess={handleLoginSuccess}\n            onFailure={handleLoginFailure}\n            cookiePolicy={\"single_host_origin\"}\n          />\n          <Text>\n          아직 계정이 없으신가요?{\" \"}\n            <Link \n            color=\"purple\" \n            href=\"/signup\">\n            👉 회원가입하기\n            </Link>\n          </Text>\n      </Card>    \n    </Box>\n    </Box>\n  )\n};","/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/Validation.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/FileUpload.js",["152"],"import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';  \n\naxios.defaults.withCredentials = true;\n\nexport default function FileUpload({ updateImages }) {\n\n  const [images, setImages] = useState([])\n \n  const dropHandler = (files) => {\n     \n    let formData = new FormData();\n    const config = {\n      header: {'Content-Type': 'multipart/form-data'}\n    }\n    formData.append(\"file\", files[0])\n \n    axios.post('https://projectb1:4000/products/image', formData, config)\n      .then(response => {\n        if(response.data.success){\n           console.log(\"사진업로드\", response.data)\n           setImages([...images, response.data.filePath])\n           updateImages([...images, response.data.filePath])\n          }else {\n          alert('파일을 저장하는데 실패했습니다')\n        }\n      })\n  }\n\n\n\n  const deleteHandler = (image) => {\n    const currentIndex = images.indexOf(image)\n    let newImages = [...images]\n    newImages.splice(currentIndex, 1) \n    setImages(newImages)\n    updateImages(newImages)\n  }\n\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n      <Dropzone onDrop={dropHandler}>\n        {({getRootProps, getInputProps}) => (        \n            <div \n              style={{\n                width: 300, height: 240, border: '1px solid lightgray',\n                display: 'flex', alignItems:'center', justifyContent: 'center'\n              }}            \n              {...getRootProps()}>\n              <input {...getInputProps()} />\n              <i class=\"fas fa-plus\" style={{ fontSize: '3rem'}}></i>\n            </div>         \n        )}\n      </Dropzone>\n      \n      <div style={{display: 'flex', width: '350px', height:'240px', overflowX: 'scroll'}}>\n\n        {images.map((image, index) => (\n          <div onClick={()=> deleteHandler(image)} key={index}>\n            <img style={{ minWidth: '300px', width:'300px', height: '240px' }}\n                 src={`https://projectb1.com:4000/${image}`} />\n          </div>\n        ))}\n\n      </div>\n    </div>\n  )\n}\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Comments.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/SingleComment.js",["153","154","155","156","157"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/SearchBox.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Toast.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Likes.js",["158"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/Sections/AlarmItem.js",["159","160","161"],"import React, { useState } from 'react'\nimport axios from \"axios\";\nimport { Switch, Button, HStack, Heading, Box,\n         VStack, Text, IconButton, StackDivider, Spacer, Badge, Avatar, Wrap, WrapItem\n} from \"@chakra-ui/react\"\nimport { FaTrash } from 'react-icons/fa';\nimport swal from \"sweetalert\"; \n\n\nexport default function AlarmItem({ item, handleDelete, accessToken}) {\n\n\n  // const accessToken = window.localStorage.getItem('userToken')\n\n      const alarmSetting = (productId) => {\n        \n        console.log(\"알람설정\")\n        let body = {\n          productId: item.productId,\n        }\n        console.log(\"바디가뭐야\", body)\n        axios.post(`https://projectb1.com:4000/products/changeAlarm`, body, \n        {\n        headers: {\"okCome\": accessToken}\n      })\n      .then(response => {\n            console.log(response.data.data.myList);\n        const myList = response.data.data.myList;\n        const alarmProduct = myList.filter((el) => el.productId === item.productId)\n        console.log(\"알람프로덕트\", alarmProduct)\n          if(alarmProduct[0].alarm === true){\n            swal({\n              title: \"Good job!\",\n              text: \"발매 하루 전에 메일로 발송됩니다.\",\n              icon: \"success\",\n            });     \n          }else{\n             swal(\"Oops\", \"알람 설정이 취소되었습니다.\", \"error\")\n          }        \n       });\n    }\n  \n  return (\n      <VStack\n                divider={<StackDivider  mt=\"3\" />}\n                borderColor='gray.100'\n                borderWidth='2px'\n                spacing={8}\n                p={4}\n                borderRadius='lg'\n                w='100%'\n                maxW={{ base: '120vw', sm: '100vw', lg: '50vw', xl: '40vw' }}\n                alignItems='stretch'\n                >\n                <HStack >\n                    <Wrap>\n                        <WrapItem>\n                        <Avatar size=\"xl\" name=\"shoes\" src={`https://projectb1.com:4000/${item.images[0]}`} />\n                        </WrapItem>\n                        <Box p={4} >\n                            <Heading fontSize=\"xl\">{item.releaseString}</Heading>\n                            <Text mt={4}>{item.productName}</Text>\n                        </Box>\n                        <Spacer />\n                        <Switch defaultChecked=\"true\"\n                         onChange={alarmSetting}></Switch>\n                        <IconButton\n                            icon={<FaTrash />}\n                            isRound='true'\n                            onClick={() => {handleDelete(item.productId)}}\n                        />\n                    </Wrap>\n                </HStack>\n      </VStack>\n  )\n};\n \n","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Product.js",["162","163","164","165"],"import React, { useState } from 'react'\n// import Modal from \"./Modal\"\n// import ModalButton from \"./ModalButton\";\nimport styled from \"styled-components\";\nimport { FaRegBookmark } from 'react-icons/fa';\nimport { Button, Box, Image, AspectRatio, Badge, Container, Link, HStack, IconButton } from \"@chakra-ui/react\"\n// const ModalContent = styled.div`\n//   height: 100%;\n//   width: 100%;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   h1 {\n//     color: #5c3aff;\n//   }\n// `;\nexport default function Product(props) {\n    const [isOpen, toggle] = useState(false);\n    const [click, setClick] = useState(false);\n    const handleClick = () => setClick(!click);\n    \n    // function handlOpenModal(open) {\n    //   console.log(\"close modal\");\n    //   toggle(open);\n    // }\n\n  return ( \n    <HStack>\n    <Container maxW=\"md\">\n             <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n             <AspectRatio maxW=\"400px\" ratio={1}>\n             <Image\n            src={`https://projectb1.com:4000/${props.data.images[0]}`}/>\n            </AspectRatio>\n\n            <Badge \n            borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                New\n            </Badge>\n            \n            <Box\n                mt=\"2\"\n                fontSize=\"lg\"\n                fontWeight=\"semibold\"\n                as=\"h3\"\n                lineHeight=\"1.5\"\n                isTruncated\n                >\n                {props.data.releaseString}\n\n                <IconButton\n                    icon={<FaRegBookmark />}\n                    size=\"md\"\n                    variant=\"outline\"\n                    isRound='true' \n                    onClick={(e) => props.handleClick(e, props.data.ProductId)}\n                    >\n                    저장\n                </IconButton>\n            </Box>\n\n            <Box>\n                {props.data.productName}\n                <Box as=\"span\" color=\"gray.600\" fontSize=\"md\">\n                </Box>\n            </Box>\n\n\n            \n            <Link\n                href={`/product/${props.data._id}`}\n                onClick={handleClick}>\n                 상세정보 확인하기\n            </Link>\n\n\n\n                {/* <ModalButton \n                // handlClick={() => handlOpenModal(true)}\n                onClick={(e) => props.handleClick(e, props.data.ProductId)}\n                >\n                    저장\n                </ModalButton>\n                <Modal isOpen={isOpen} handleClose={() => handlOpenModal(false)}>\n                <ModalContent>\n                    <h1> 로그인이 필요합니다. </h1>\n                    <Link\n                    color=\"purple\" \n                    href=\"/login\">\n                    👉 로그인하기\n                    </Link>\n                </ModalContent>\n                </Modal> */}\n       \n        </Box>\n        </Container>\n    {/* </div> */}\n    </HStack>\n  )    \n}\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/Section/Card.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/LandingCard.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/LandingCardDetail.js",["166","167"],"import styled from \"styled-components\";\nimport Jordan from \"../../../assets/Jordan.png\";\n\nconst DetailsContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 2.5em 6px 0 6px;\n  line-height: 1.4;\n  user-select: none;\n`;\n\nconst MediumText = styled.span`\n  font-size: 14px;\n  color: #000;\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst SmallText = styled.span`\n  font-size: 10px;\n  color: #000;\n  font-weight: 700;\n  text-transform: uppercase;\n`;\n\nconst SpacedHorizontalContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst BuyButton = styled.button`\n  padding: 10px 16px;\n  background-color: #805BD5;\n  color: #fff;\n  text-transform: uppercase;\n  font-size: 16px;\n  font-weight: 700;\n  border: 3px solid transparent;\n  outline: none;\n  cursor: pointer;\n  transition: all 290ms ease-in-out;\n  border-radius: 8px;\n  &:hover {\n    background-color: transparent;\n    color: #000;\n    border: 3px solid #805BD5;\n  }\n`;\n\nexport default function ShoeDetials() {\n  return (\n    <DetailsContainer>\n      {/* <SmallText>Nike</SmallText> */}\n      <SpacedHorizontalContainer>\n        <MediumText>Nike Jordan Mid SE-GC</MediumText>\n      </SpacedHorizontalContainer>\n      <br />\n      <SpacedHorizontalContainer>\n        <MediumText>알림 설정 해보세요!</MediumText>\n        <BuyButton>알림</BuyButton>\n      </SpacedHorizontalContainer>\n    </DetailsContainer>\n  );\n}\n","/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/index.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/UserReducer.js",["168"],"import {\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM,\n} from '../_Actions/Types';\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case ADD_TO_CART:\n            return {\n                ...state,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload\n                }\n            }\n        case GET_CART_ITEMS:\n            return { ...state, cartDetail: action.payload }\n        case REMOVE_CART_ITEM:\n            return {\n                ...state, cartDetail: action.payload.productInfo,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart\n                }\n            }\n        default:\n            return state;\n    }\n}","/Users/seunghunhan/Desktop/project/noti-client/src/_Actions/Types.js",[],{"ruleId":"169","severity":1,"message":"170","line":25,"column":10,"nodeType":"171","messageId":"172","endLine":25,"endColumn":24},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":44,"column":8,"nodeType":"179","endLine":44,"endColumn":10,"suggestions":"180"},{"ruleId":"173","replacedBy":"181"},{"ruleId":"175","replacedBy":"182"},{"ruleId":"169","severity":1,"message":"183","line":4,"column":15,"nodeType":"171","messageId":"172","endLine":4,"endColumn":24},{"ruleId":"169","severity":1,"message":"184","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":13},{"ruleId":"169","severity":1,"message":"185","line":5,"column":10,"nodeType":"171","messageId":"172","endLine":5,"endColumn":16},{"ruleId":"169","severity":1,"message":"186","line":5,"column":18,"nodeType":"171","messageId":"172","endLine":5,"endColumn":24},{"ruleId":"169","severity":1,"message":"187","line":5,"column":26,"nodeType":"171","messageId":"172","endLine":5,"endColumn":32},{"ruleId":"169","severity":1,"message":"188","line":6,"column":3,"nodeType":"171","messageId":"172","endLine":6,"endColumn":9},{"ruleId":"169","severity":1,"message":"189","line":6,"column":11,"nodeType":"171","messageId":"172","endLine":6,"endColumn":15},{"ruleId":"169","severity":1,"message":"190","line":6,"column":17,"nodeType":"171","messageId":"172","endLine":6,"endColumn":27},{"ruleId":"169","severity":1,"message":"191","line":6,"column":29,"nodeType":"171","messageId":"172","endLine":6,"endColumn":41},{"ruleId":"169","severity":1,"message":"192","line":6,"column":43,"nodeType":"171","messageId":"172","endLine":6,"endColumn":49},{"ruleId":"169","severity":1,"message":"193","line":6,"column":51,"nodeType":"171","messageId":"172","endLine":6,"endColumn":56},{"ruleId":"169","severity":1,"message":"194","line":6,"column":58,"nodeType":"171","messageId":"172","endLine":6,"endColumn":64},{"ruleId":"169","severity":1,"message":"195","line":6,"column":66,"nodeType":"171","messageId":"172","endLine":6,"endColumn":70},{"ruleId":"169","severity":1,"message":"196","line":6,"column":72,"nodeType":"171","messageId":"172","endLine":6,"endColumn":80},{"ruleId":"177","severity":1,"message":"178","line":31,"column":5,"nodeType":"179","endLine":31,"endColumn":7,"suggestions":"197"},{"ruleId":"169","severity":1,"message":"198","line":12,"column":3,"nodeType":"171","messageId":"172","endLine":12,"endColumn":7},{"ruleId":"169","severity":1,"message":"189","line":13,"column":3,"nodeType":"171","messageId":"172","endLine":13,"endColumn":7},{"ruleId":"169","severity":1,"message":"198","line":12,"column":3,"nodeType":"171","messageId":"172","endLine":12,"endColumn":7},{"ruleId":"169","severity":1,"message":"189","line":13,"column":3,"nodeType":"171","messageId":"172","endLine":13,"endColumn":7},{"ruleId":"169","severity":1,"message":"199","line":2,"column":16,"nodeType":"171","messageId":"172","endLine":2,"endColumn":26},{"ruleId":"200","severity":1,"message":"201","line":56,"column":19,"nodeType":"202","messageId":"203","endLine":59,"endColumn":21},{"ruleId":"169","severity":1,"message":"204","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":13},{"ruleId":"177","severity":1,"message":"205","line":22,"column":6,"nodeType":"179","endLine":22,"endColumn":8,"suggestions":"206"},{"ruleId":"169","severity":1,"message":"184","line":8,"column":8,"nodeType":"171","messageId":"172","endLine":8,"endColumn":13},{"ruleId":"169","severity":1,"message":"207","line":25,"column":10,"nodeType":"171","messageId":"172","endLine":25,"endColumn":14},{"ruleId":"208","severity":1,"message":"209","line":62,"column":13,"nodeType":"210","endLine":63,"endColumn":64},{"ruleId":"169","severity":1,"message":"211","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":17},{"ruleId":"169","severity":1,"message":"189","line":3,"column":19,"nodeType":"171","messageId":"172","endLine":3,"endColumn":23},{"ruleId":"169","severity":1,"message":"212","line":3,"column":25,"nodeType":"171","messageId":"172","endLine":3,"endColumn":30},{"ruleId":"169","severity":1,"message":"213","line":4,"column":10,"nodeType":"171","messageId":"172","endLine":4,"endColumn":24},{"ruleId":"169","severity":1,"message":"214","line":4,"column":26,"nodeType":"171","messageId":"172","endLine":4,"endColumn":35},{"ruleId":"169","severity":1,"message":"215","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"216","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"186","line":3,"column":18,"nodeType":"171","messageId":"172","endLine":3,"endColumn":24},{"ruleId":"169","severity":1,"message":"193","line":4,"column":58,"nodeType":"171","messageId":"172","endLine":4,"endColumn":63},{"ruleId":"169","severity":1,"message":"217","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":14},{"ruleId":"169","severity":1,"message":"186","line":6,"column":10,"nodeType":"171","messageId":"172","endLine":6,"endColumn":16},{"ruleId":"169","severity":1,"message":"218","line":18,"column":12,"nodeType":"171","messageId":"172","endLine":18,"endColumn":18},{"ruleId":"169","severity":1,"message":"219","line":18,"column":20,"nodeType":"171","messageId":"172","endLine":18,"endColumn":26},{"ruleId":"169","severity":1,"message":"220","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":14},{"ruleId":"169","severity":1,"message":"221","line":21,"column":7,"nodeType":"171","messageId":"172","endLine":21,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":6,"column":1,"nodeType":"224","endLine":29,"endColumn":2},"no-unused-vars","'ChakraProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["225"],"no-negated-in-lhs",["226"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'accessToken'. Either include it or remove the dependency array.","ArrayExpression",["227"],["225"],["226"],"'Container' is defined but never used.","'Toast' is defined but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'HStack' is defined but never used.","'VStack' is defined but never used.","'Text' is defined but never used.","'IconButton' is defined but never used.","'StackDivider' is defined but never used.","'Spacer' is defined but never used.","'Badge' is defined but never used.","'Avatar' is defined but never used.","'Wrap' is defined but never used.","'WrapItem' is defined but never used.",["228"],"'Link' is defined but never used.","'useHistory' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'likes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["229"],"'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Divider' is defined but never used.","'Stack' is defined but never used.","'IoMdHeartEmpty' is defined but never used.","'IoMdHeart' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'styled' is defined but never used.","'isOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'Jordan' is defined but never used.","'SmallText' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"230","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [accessToken]",{"range":"235","text":"236"},{"range":"237","text":"236"},"Update the dependencies array to be: [productId]",{"range":"238","text":"239"},[1551,1553],"[accessToken]",[1058,1060],[819,821],"[productId]"]