[{"/home/sungheeyun/Desktop/noti/noti-client/src/index.js":"1","/home/sungheeyun/Desktop/noti/noti-client/src/App.js":"2","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/index.js":"3","/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/AlarmPage.js":"4","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/UserReducer.js":"5","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Toast.js":"6","/home/sungheeyun/Desktop/noti/noti-client/src/_Actions/Types.js":"7","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/LandingPage.js":"8","/home/sungheeyun/Desktop/noti/noti-client/src/components/UploadProductPage/UploadProdctPage.js":"9","/home/sungheeyun/Desktop/noti/noti-client/src/assets/state.js":"10","/home/sungheeyun/Desktop/noti/noti-client/src/components/Navbar/Navbar.js":"11","/home/sungheeyun/Desktop/noti/noti-client/src/components/ModifiedPage/ModifiedPage.js":"12","/home/sungheeyun/Desktop/noti/noti-client/src/components/SignupPage/SignupPage.js":"13","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/DetailProductPage.js":"14","/home/sungheeyun/Desktop/noti/noti-client/src/components/LoginPage/LoginPage.js":"15","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/SearchBox.js":"16","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Comments.js":"17","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/Validation.js":"18","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/FileUpload.js":"19","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Interaction.js":"20","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/SingleComment.js":"21","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Likes.js":"22","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Product.js":"23","/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/Sections/AlarmItem.js":"24"},{"size":1552,"mtime":1618905714821,"results":"25","hashOfConfig":"26"},{"size":3958,"mtime":1618992116629,"results":"27","hashOfConfig":"26"},{"size":259,"mtime":1618905714793,"results":"28","hashOfConfig":"26"},{"size":2113,"mtime":1618997976236,"results":"29","hashOfConfig":"26"},{"size":790,"mtime":1618905714793,"results":"30","hashOfConfig":"26"},{"size":842,"mtime":1618905714801,"results":"31","hashOfConfig":"26"},{"size":188,"mtime":1618905714785,"results":"32","hashOfConfig":"26"},{"size":5292,"mtime":1618970822158,"results":"33","hashOfConfig":"26"},{"size":2575,"mtime":1618905714817,"results":"34","hashOfConfig":"26"},{"size":943,"mtime":1618905714793,"results":"35","hashOfConfig":"26"},{"size":3413,"mtime":1618991154785,"results":"36","hashOfConfig":"26"},{"size":405,"mtime":1618905714813,"results":"37","hashOfConfig":"26"},{"size":3525,"mtime":1618985923642,"results":"38","hashOfConfig":"26"},{"size":3354,"mtime":1618992957345,"results":"39","hashOfConfig":"26"},{"size":3265,"mtime":1618989995795,"results":"40","hashOfConfig":"26"},{"size":514,"mtime":1618940663322,"results":"41","hashOfConfig":"26"},{"size":2067,"mtime":1618922558201,"results":"42","hashOfConfig":"26"},{"size":772,"mtime":1618905714821,"results":"43","hashOfConfig":"26"},{"size":2084,"mtime":1618905714821,"results":"44","hashOfConfig":"26"},{"size":1009,"mtime":1618905714801,"results":"45","hashOfConfig":"26"},{"size":645,"mtime":1618931322776,"results":"46","hashOfConfig":"26"},{"size":1297,"mtime":1618931309472,"results":"47","hashOfConfig":"26"},{"size":1501,"mtime":1618970910022,"results":"48","hashOfConfig":"26"},{"size":916,"mtime":1618997691558,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"14os7a9",{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"53"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"53"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"53"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sungheeyun/Desktop/noti/noti-client/src/index.js",["113"],"// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Reducer from './_Reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    \n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        {/* <ChakraProvider> */}\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n        {/* </ChakraProvider> */}\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n",["114","115"],"/home/sungheeyun/Desktop/noti/noti-client/src/App.js",["116","117","118"],"import React, { useState, useEffect } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport {\n  BrowserRouter as Router, \n  Route, \n  Switch \n} from 'react-router-dom';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport SignupPage from './components/SignupPage/SignupPage';\nimport Navbar from './components/Navbar/Navbar';\nimport DetailProductPage from './components/DetailProductPage/DetailProductPage';\nimport ModifiedPage from './components/ModifiedPage/ModifiedPage';\nimport UploadProdctPage from './components/UploadProductPage/UploadProdctPage';\nimport LandingPage from \"./components/LandingPage/LandingPage\";\nimport AlarmPage from \"./components/AlarmPage/AlarmPage\";\nimport axios from \"axios\";\n\naxios.defaults.withCredentials = true;\n\nfunction App() {\n\n  const [isLogin, setIsLogin] = useState(false);\n  const [accessToken, setAccessToken] = useState(\"\");\n  const loginHandler = (data) => {\n    setIsLogin(true)\n    issueAccessToken(data.data);\n  };\n  const issueAccessToken = (token) => {\n   setAccessToken(token);\n   console.log(\"토큰\", token)  \n  }\n  const handleLogout = () => {\n    setIsLogin(false);\n    setAccessToken(\"\");\n  }\n\n  const [productList, setProductList] = useState([])\n  const [alarmList, setAlarmList] = useState([])\n  const [leftDay, setLeftDay] = useState(\"\")\n\n  useEffect(() => {\n    axios\n      .get(\"https://projectb1.com:4000/products/filterProductList\")\n        .then(response => {\n         console.log(\"제품 정보\", response.data)\n          if(response.data.data) {\n            setProductList(response.data.data)\n          } else {\n            alert(\" 상품들을 가져오는데 실패 했습니다.\")\n          }\n        })\n    },[])\n\n  const addToCart = (productId) => {\n    console.log(\"리스트저장아이디\", productId)\n   \n    const goToList = productList.filter((el) => el._id === productId)[0]\n    console.log(\"고투\", goToList)\n    const body = goToList\n    axios\n      .post('https://projectb1.com:4000/products/addMyLIst',\n      body,\n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n      })\n        .then((response) => {\n          if(response.status === 201){\n            alert(\"저장되었습니다\")\n          }\n      })\n      .catch((err) => {\n        if(err.response.status === 400){\n          alert(\"이미 리스트에 저장된 상품입니다\")\n        } else if(err.response.status === 404) {\n          alert(\"로그인이 필요합니다.\")\n        }\n      })\n  }\n\n  const updateSearchTerm = (newSearchTerm) => {\n    axios\n      .get(`https://projectb1.com:4000/products/searchProduct?searchTerm=${newSearchTerm}`,\n        {\n        headers: {\"Content-Type\": \"application/json\"}\n        })\n        .then(response => {\n          setProductList(response.data.data)\n    })  \n  }\n\n  \nreturn (\n  \n    <Router>\n     <ChakraProvider>\n      <Navbar \n        loginHandler={loginHandler}\n        handleLogout={handleLogout}\n        isLogin={isLogin}\n        alarmList={alarmList}\n      />\n      <Switch>\n      <Route exact path=\"/\">\n      <LandingPage \n        productList={productList}\n        addToCart={addToCart}\n        updateSearchTerm={updateSearchTerm}\n        />\n      </Route>\n      <Route exact path=\"/user/alarmpage\">\n        <AlarmPage \n          accessToken={accessToken} \n        />\n      </Route>\n        <Route exact path=\"/login\">\n          <LoginPage loginHandler={loginHandler} /> \n        </Route>\n        <Route exact path=\"/signup\" component={SignupPage} />\n        <Route exact path=\"/product/upload\" component={UploadProdctPage} />\n        <Route path=\"/modified\">\n          <ModifiedPage accessToken={accessToken} issueAccessToken={issueAccessToken} />\n        </Route> \n        <Route \n          path=\"/product/:productId\" \n          render={(props) =>  <DetailProductPage accessToken={accessToken} {...props} />} />\n      </Switch>\n      </ChakraProvider>\n    </Router>\n    \n  );\n}\nexport default App;","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/index.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/AlarmPage.js",["119","120","121","122"],"import React, { useEffect, useState } from 'react'\nimport { Switch, Button } from \"antd\"\nimport axios from \"axios\";\nimport Toast from '../LandingPage/Sections/Toast'\nimport AlarmItem from './Sections/AlarmItem';\n\nfunction AlarmPage({ accessToken }) {\n \n  const [alarmList, setAlarmList] = useState([])\n  const [leftDay, setLeftDay] = useState(\"\")\n\n\n  useEffect(() => {\n    axios\n      .get(\"https://projectb1.com:4000/products/myList\",{\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n      })\n      .then(response => {\n        console.log(\"알림리스트뿌리는거\", response)\n        if(response.status === 200){\n          setAlarmList(response.data.data)\n          setLeftDay(response.data.leftDay)\n        }\n      })\n  },[])\n\n  const handleDelete = (productId) => {\n        \n  axios.delete(`https://projectb1.com:4000/products/removeAlarm?productId=${productId}`, {\n    headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n  })\n  .then(response => {\n    console.log(\"삭제버튼누른뒤\", response.data.data.myList);\n    setAlarmList(response.data.data.myList)\n  });\n}\n\nreturn (\n  <div style={{ width: '85%', margin: '3rem auto' }}>\n    <h1>알림 리스트 페이지</h1>\n        <h2>{leftDay}일 뒤,</h2>\n                <div className=\"alarmList-container\">\n                    {!alarmList.length ? (\n                      <div className=\"alarmList-text\">\n                        알림리스트에 아이템이 없습니다.\n                      </div>\n                    ) : (\n                      <div className=\"alarmList\">\n                        {alarmList.map((data, idx) => {\n                          return <AlarmItem \n                                    key={idx}\n                                    item={data}\n                                    handleDelete={handleDelete}\n                                    accessToken={accessToken}\n\n                          />\n                        })}\n                      </div>\n                    )}\n                </div>\n\n            </div>\n        )\n    }\n\nexport default AlarmPage    \n","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/UserReducer.js",["123"],"import {\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM,\n} from '../_Actions/Types';\n\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case ADD_TO_CART:\n            return {\n                ...state,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload\n                }\n            }\n        case GET_CART_ITEMS:\n            return { ...state, cartDetail: action.payload }\n\n\n\n        case REMOVE_CART_ITEM:\n            return {\n                ...state, cartDetail: action.payload.productInfo,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart\n                }\n            }\n        default:\n            return state;\n    }\n}","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Toast.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/_Actions/Types.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/LandingPage.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/UploadProductPage/UploadProdctPage.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/assets/state.js",[],["124","125"],"/home/sungheeyun/Desktop/noti/noti-client/src/components/Navbar/Navbar.js",["126","127","128","129"],"import React, { useState } from \"react\";\nimport { Icon, Badge } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../../Navbar.css\";\nimport axios from \"axios\";\n\nexport default function Navbar({ loginHandler, handleLogout, isLogin }){\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n\n  return(\n    <>\n      <nav className=\"navbar\">\n        <div className=\"nav-container\">\n          <Link \n            exact to=\"/\"\n            className=\"nav-logo\"\n            style={{textDecoration: \"none\", color: \"black\"}}>\n            NOTI\n          </Link>\n          {/* 테스트를 위한 알림 리스트 탭 입니다 */}\n          <Badge count={5}>\n          <Link exact to=\"/user/alarmpage\"\n            activeClassName=\"active\"\n            className=\"nav-links\"\n            onClick={handleClick}\n            >\n              알림\n          </Link>\n          </Badge>\n          {/* 테스트를 위한 알림 리스트 탭 입니다 */}         \n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\n             {isLogin ? (\n            <>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link exact to=\"/user/alarmpage\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  알림리스트\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  회원정보수정\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link \n                  exact to=\"/\"\n                  onClick={handleLogout}\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={()=>{\n                    handleClick();\n                    handleLogout();\n                  }}\n                >\n                로그아웃\n                </Link>                  \n              </li> \n            </>\n             ) : (\n            <>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>              \n              <li className=\"nav-item\">\n                <Link exact to=\"/login\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  로그인\n                </Link>\n              </li>   \n            </>            \n            )}          \n          </ul>\n          <div className=\"nav-icon\" onClick={handleClick}>\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\n          </div> \n        </div>\n      </nav>\n    </>\n  );\n}\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/ModifiedPage/ModifiedPage.js",["130","131","132","133","134","135","136"],"import React, {useState, useEffect} from 'react'\n\nexport default function ModifiedPage({ accessToken, issueAccessToken}) {\n  \n  const [form, setForm] = useState({\n    changeNickname: \"\",\n    password: \"\",\n    confirmPassword:\"\"\n  });\n\n  const [errMessage, setErrMessage] = useState(\"\");\n  const { changeNickname, password, confirmPassword} = form;\n  \n  \n  return (\n    <div>\n      MODI\n    </div>\n  )\n}\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/SignupPage/SignupPage.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/DetailProductPage.js",["137","138","139","140"],"import React, { useEffect, useState, useRef } from 'react'\nimport axios from 'axios';\nimport Comments from './Setions/Comments';\nimport '../../DetailProductPage.css';\n\nexport default function DetailProductPage(props) {\n\nconst productId = props.match.params.productId\n  \nconst [product, setProduct] = useState([])\nconst [commentLists, setCommentLists] = useState([])\n\nconst [likes, setLikes] = useState(0)\n\n  useEffect(() => {\n    axios\n      .get(`https://projectb1.com:4000/products/detailProduct?id=${productId}`)\n        .then(response => {\n          if(response.data.success){\n            console.log('res.data', response.data.data)\n            setProduct(response.data.data)\n            setCommentLists(response.data.data[0].comment)\n          } else {\n            alert('상세 정보 가져오기를 실패했습니다')\n          }\n        })\n  }, [])\n\n  const [index, setIndex] = useState(0)\n\n  const myRef = useRef(null)\n\n\n  const updateLikes = (newLike) => {\n    setLikes(newLike)\n  }\n\n  const updateComment = (newComment) => {\n    setCommentLists(newComment)\n  }\n  \n  const handleTab = (index) =>{\n    setIndex(index)\n    const images = myRef.current.children;\n    for(let i=0; i<images.length; i++){\n      images[i].className = images[i].className.replace(\"active\", \"\");\n    }\n    images[index].className = \"active\";\n  }\n    \n  return (\n  <>\n    {/* <div className=\"detail-wrapper\">\n      {\n        product.map(item => (\n          <div className=\"details\" key={item.id}>\n            <div className=\"big-img\">\n              <img src={item.images[index]} alt=\"\" />\n            </div>\n            <div className=\"info\">\n              <div className=\"row\">\n                 <h2>{item.productName}</h2>\n              </div>\n              <div className=\"row\">\n                <span>발매일</span> \n                <span style={{fontWeight:\"500\"}}>{item.releaseString}</span> \n              </div>\n              <div className=\"row\">\n                <span>발매가격</span>  \n                <span style={{fontWeight:\"500\"}}>KRW {item.price}</span>\n              </div>\n              <div className=\"thumb\" ref={myRef}>\n                {\n                  item.images.map((image, index) => (\n                    <img src={image} alt=\"\" key={index} \n                    onClick={()=> handleTab(index)}\n                    />\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </div> */}\n    <div className=\"detail-wrapper\">\n      {\n        product.map(item => (\n          <div className=\"details\" key={item.id}>\n            <div className=\"info\">\n              <div className=\"row\">\n                 <h2>{item.productName}</h2>\n              </div>\n              <div className=\"row\">\n                <span>발매일</span> \n                <span style={{fontWeight:\"500\"}}>{item.releaseString}</span> \n              </div>\n              <div className=\"row\">\n                <span>발매가격</span>  \n                <span style={{fontWeight:\"500\"}}>KRW {item.price}</span>\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </div>\n\n    <Comments \n      commentLists={commentLists} \n      productId={productId} \n      accessToken={props.accessToken}\n      updateComment={updateComment} \n      updateLikes={updateLikes}\n    />\n  </>   \n  )\n}\n\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/LoginPage/LoginPage.js",["141"],"import React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport GoogleLogin from \"react-google-login\";\nimport axios from 'axios';\nimport swal from \"sweetalert\";\n\naxios.defaults.withCredentials = true;\n \nexport default function LoginPage({ loginHandler }) {\n  \n  const [details, setDetails] = useState({email: \"\", password: \"\"})\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n\n  const submitHandler = (e) =>{\n    e.preventDefault();\n \n    const { email, password } = details;\n\n    if(!email || !password){\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n\n    axios.post(\"https://projectb1.com:4000/users/login\", \n    {\n      email,\n      password\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n    .then(res => {\n      history.push(\"/\");\n      loginHandler(res.data)\n    })\n    .catch(err => {\n      console.log(err.message);\n      alert(err.message)\n    })\n  }\n\n  const handleLoginSuccess = (response) => {\n    console.log(\"구글로그인\", response.profileObj)\n    if (response.profileObj) {\n      axios\n        .post(\n          \"https://projectb1.com:4000/users/socialLogin\",\n          {\n            email: response.profileObj.email,\n            nickName: response.profileObj.name,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n        .then((res) => {\n          setUser(response.profileObj);\n          history.push(\"/\");\n        });\n    }\n  };\n\n   const handleLoginFailure = (error) => {\n    console.log(error);\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Log in</h2>\n      <form onSubmit={submitHandler}>\n        <div className=\"email-form\">\n          📧 이메일\n          <input \n            className=\"input\"\n            type=\"text\"\n            placeholder=\"이메일을 입력해주세요.\"\n            value={details.email}\n            onChange={(e) => setDetails({...details, email: e.target.value})}\n          />\n        </div>\n        <div className=\"password-form\">\n          🔐 비밀번호\n          <input \n            className=\"input\"\n            type=\"password\"\n            placeholder=\"비밀번호를 입력해주세요.\"\n            value={details.password}\n            onChange={(e) => setDetails({...details, password: e.target.value})}\n          />\n        </div>\n        <div>\n          <button className=\"btn-signin\" onClick={submitHandler}>\n          이메일로 시작하기\n          </button>\n        </div>\n       </form>   \n       <div>\n          <GoogleLogin\n            className=\"btn-google\"\n            clientId=\"996092186048-291mg21lf890quda77fdgrqn11il9c0h.apps.googleusercontent.com\"\n            buttonText=\"구글 계정으로 시작하기\"\n            onSuccess={handleLoginSuccess}\n            onFailure={handleLoginFailure}\n            cookiePolicy={\"single_host_origin\"}\n          />\n        </div> \n        <div className=\"link-singup\">\n          <span>아직 계정이 없으신가요?</span>\n          <Link to=\"/signup\" style={{color:\"black\", textDecoration:\"none\"}}>\n          👉 회원가입하기\n          </Link>          \n        </div>    \n    </div>\n  )\n};\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/SearchBox.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Comments.js",["142"],"import axios from 'axios';\nimport React, { useState, useContext } from 'react';\nimport SingleComment from './SingleComment';\n\naxios.defaults.withCredentials = true;\n\n\nexport default function Comments(props) {\n  const [comment, setComment] = useState(\"\")\n   \n  const handleChange = (e) => {\n    setComment(e.target.value)\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if(comment === \"\") {\n      alert(\"내용을 입력해주세요\")\n      return\n    }\n\n  const body = {\n      comment: comment,\n      _id: props.productId\n    }\n\n   console.log(\"댓글 보내는값\", body)\n\n    axios\n      .post(\"https://localhost:4000/products/writeComment\", \n      body,\n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}, \n      })\n      .then(response => {\n        console.log (\"포스트\", response.data)\n        if(response.data.success) {\n          console.log(response.data)\n          props.updateComment(response.data.data.comment)\n          setComment(\"\")        \n        } else {\n          alert('failed to save comment')\n        }\n       })\n      .catch((err) =>{\n        if(err.response.status === 401) {\n          alert(\"로그인이 필요합니다.\")\n      }\n    })\n  }\n\n  return (\n    <div>\n      <br />\n      <p> replies</p>\n      {/* root comment form */}\n      <form style={{ display: \"flex\" }} onSubmit={onSubmit}>\n        <textarea \n          style={{ width: \"100%\", borderRadius: \"5px\"}}\n          onChange={handleChange}\n          value={comment}\n          placeholder=\"코멘트를 작성해 주세요.\"  \n        />\n        <br />\n        <button style={{ width:\"20%\", height:\"52px\"}} onClick={onSubmit}>Submit</button>\n\n      </form>\n      {/* comment lists */}\n      {props.commentLists && props.commentLists.map((comment, index) => (\n          <SingleComment \n            key={index}\n            comment={comment} \n            productId={props.productId} \n            accessToken={props.accessToken}\n            updateLikes={props.updateLikes}\n         />\n      ))}\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/Validation.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/FileUpload.js",["143"],"import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';  \n\naxios.defaults.withCredentials = true;\n\nexport default function FileUpload({ updateImages }) {\n\n  const [images, setImages] = useState([])\n \n  const dropHandler = (files) => {\n     \n    let formData = new FormData();\n    const config = {\n      header: {'Content-Type': 'multipart/form-data'}\n    }\n    formData.append(\"file\", files[0])\n \n    axios.post('https://localhost:4000/products/image', formData, config)\n      .then(response => {\n        if(response.data.success){\n           console.log(\"사진업로드\", response.data)\n           setImages([...images, response.data.filePath])\n           updateImages([...images, response.data.filePath])\n          }else {\n          alert('파일을 저장하는데 실패했습니다')\n        }\n      })\n  }\n\n\n\n  const deleteHandler = (image) => {\n    const currentIndex = images.indexOf(image)\n    let newImages = [...images]\n    newImages.splice(currentIndex, 1) \n    setImages(newImages)\n    updateImages(newImages)\n  }\n\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n      <Dropzone onDrop={dropHandler}>\n        {({getRootProps, getInputProps}) => (        \n            <div \n              style={{\n                width: 300, height: 240, border: '1px solid lightgray',\n                display: 'flex', alignItems:'center', justifyContent: 'center'\n              }}            \n              {...getRootProps()}>\n              <input {...getInputProps()} />\n              <i class=\"fas fa-plus\" style={{ fontSize: '3rem'}}></i>\n            </div>         \n        )}\n      </Dropzone>\n      \n      <div style={{display: 'flex', width: '350px', height:'240px', overflowX: 'scroll'}}>\n\n        {images.map((image, index) => (\n          <div onClick={()=> deleteHandler(image)} key={index}>\n            <img style={{ minWidth: '300px', width:'300px', height: '240px' }}\n                 src={`https://localhost:4000/${image}`} />\n          </div>\n        ))}\n\n      </div>\n    </div>\n  )\n}\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Interaction.js",[],["144","145"],"/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/SingleComment.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Likes.js",["146"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\n\naxios.defaults.withCredentials = true;\n\nexport default function Likes(props) {\n\n  const [likeCount, setLikeCount] = useState(props.goodCount);\n  const [action, setAction] = useState(props.state);\n\n  const onLikeClick = () => {\n\n    const body = {\n      id: props.productId,\n      comment_id: props.commentId\n    }\n\n    axios.patch(`https://localhost:4000/products/good`, body, \n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}\n      })\n      .then(response => {\n        const comments = response.data.data.comment\n        const filteredLike = comments.filter((comment) => {\n          return comment._id === props.commentId\n       })    \n        setAction(filteredLike[0].state)\n        props.updateLikes(filteredLike[0].state)\n        setLikeCount(filteredLike[0].goodUsers.length)  \n      })\n      .catch((err) =>{\n        if(err.response.status === 401) {\n          alert(\"로그인이 필요합니다.\")\n      }\n    })    \n  }\n\n\n  return (\n    <div className=\"like-icon\">\n      <div onClick={onLikeClick}>\n        <i className= {action=== 0 ? \"far fa-heart\" : \"fas fa-heart\"}></i>\n        <span className=\"like-count\">{likeCount}</span>\n      </div>\n    </div>\n  )\n}\n\n\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Product.js",["147","148"],"import React from 'react'\nimport { Col, Card, Row, } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport { Box, Image, AspectRatio, Badge } from \"@chakra-ui/react\"\n\nexport default function Product(props) {\n\n\n  return (\n    <div>\n         <Row gutter={[16, 16]} >                     \n                <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n                <AspectRatio maxW=\"600px\" ratio={1}>\n                <Image\n            src={`https://projectb1.com:4000/${props.data.images[0]}`}/>\n            </AspectRatio>\n\n            <Badge                 lineHeight=\"1.5\"\n\n            borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                New\n            </Badge>\n              <Box\n                mt=\"2\"\n                fontSize=\"lg\"\n                fontWeight=\"semibold\"\n                as=\"h3\"\n                isTruncated\n                >\n                {props.data.releaseString}\n            </Box>\n\n            <Box>\n                {props.data.productName}\n                <Box as=\"span\" color=\"gray.600\" fontSize=\"md\">\n                </Box>\n            </Box>\n            \n\n            <Link\n                exact\n                to={`/product/${props.data._id}`}\n                >\n                 상세정보 확인하기\n            </Link>\n                <button onClick={(e) => props.handleClick(e, props.data.ProductId)}>\n                저장\n                </button>\n        </Box>            \n      </Row>\n      \n    </div>\n  )\n}\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/Sections/AlarmItem.js",["149"],{"ruleId":"150","severity":1,"message":"151","line":27,"column":10,"nodeType":"152","messageId":"153","endLine":27,"endColumn":24},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"150","severity":1,"message":"158","line":38,"column":21,"nodeType":"152","messageId":"153","endLine":38,"endColumn":33},{"ruleId":"150","severity":1,"message":"159","line":39,"column":10,"nodeType":"152","messageId":"153","endLine":39,"endColumn":17},{"ruleId":"150","severity":1,"message":"160","line":39,"column":19,"nodeType":"152","messageId":"153","endLine":39,"endColumn":29},{"ruleId":"150","severity":1,"message":"161","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":16},{"ruleId":"150","severity":1,"message":"162","line":2,"column":18,"nodeType":"152","messageId":"153","endLine":2,"endColumn":24},{"ruleId":"150","severity":1,"message":"163","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":25,"column":5,"nodeType":"166","endLine":25,"endColumn":7,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":8,"column":1,"nodeType":"170","endLine":34,"endColumn":2},{"ruleId":"154","replacedBy":"171"},{"ruleId":"156","replacedBy":"172"},{"ruleId":"150","severity":1,"message":"173","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"174","line":3,"column":16,"nodeType":"152","messageId":"153","endLine":3,"endColumn":26},{"ruleId":"150","severity":1,"message":"175","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":13},{"ruleId":"176","severity":1,"message":"177","line":69,"column":19,"nodeType":"178","messageId":"179","endLine":72,"endColumn":21},{"ruleId":"150","severity":1,"message":"180","line":1,"column":26,"nodeType":"152","messageId":"153","endLine":1,"endColumn":35},{"ruleId":"150","severity":1,"message":"181","line":5,"column":16,"nodeType":"152","messageId":"153","endLine":5,"endColumn":23},{"ruleId":"150","severity":1,"message":"182","line":11,"column":10,"nodeType":"152","messageId":"153","endLine":11,"endColumn":20},{"ruleId":"150","severity":1,"message":"183","line":11,"column":22,"nodeType":"152","messageId":"153","endLine":11,"endColumn":35},{"ruleId":"150","severity":1,"message":"184","line":12,"column":11,"nodeType":"152","messageId":"153","endLine":12,"endColumn":25},{"ruleId":"150","severity":1,"message":"185","line":12,"column":27,"nodeType":"152","messageId":"153","endLine":12,"endColumn":35},{"ruleId":"150","severity":1,"message":"186","line":12,"column":37,"nodeType":"152","messageId":"153","endLine":12,"endColumn":52},{"ruleId":"150","severity":1,"message":"187","line":13,"column":8,"nodeType":"152","messageId":"153","endLine":13,"endColumn":13},{"ruleId":"164","severity":1,"message":"188","line":27,"column":6,"nodeType":"166","endLine":27,"endColumn":8,"suggestions":"189"},{"ruleId":"150","severity":1,"message":"190","line":29,"column":10,"nodeType":"152","messageId":"153","endLine":29,"endColumn":15},{"ruleId":"150","severity":1,"message":"191","line":42,"column":9,"nodeType":"152","messageId":"153","endLine":42,"endColumn":18},{"ruleId":"150","severity":1,"message":"192","line":12,"column":10,"nodeType":"152","messageId":"153","endLine":12,"endColumn":14},{"ruleId":"150","severity":1,"message":"193","line":2,"column":27,"nodeType":"152","messageId":"153","endLine":2,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":62,"column":13,"nodeType":"196","endLine":63,"endColumn":60},{"ruleId":"154","replacedBy":"197"},{"ruleId":"156","replacedBy":"198"},{"ruleId":"150","severity":1,"message":"180","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"199","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"200","line":2,"column":15,"nodeType":"152","messageId":"153","endLine":2,"endColumn":19},{"ruleId":"194","severity":1,"message":"195","line":27,"column":10,"nodeType":"196","endLine":27,"endColumn":67},"no-unused-vars","'ChakraProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["201"],"no-negated-in-lhs",["202"],"'setAlarmList' is assigned a value but never used.","'leftDay' is assigned a value but never used.","'setLeftDay' is assigned a value but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'Toast' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'accessToken'. Either include it or remove the dependency array.","ArrayExpression",["203"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["201"],["202"],"'Icon' is defined but never used.","'useHistory' is defined but never used.","'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useEffect' is defined but never used.","'setForm' is assigned a value but never used.","'errMessage' is assigned a value but never used.","'setErrMessage' is assigned a value but never used.","'changeNickname' is assigned a value but never used.","'password' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'likes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["204"],"'index' is assigned a value but never used.","'handleTab' is assigned a value but never used.","'user' is assigned a value but never used.","'useContext' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["201"],["202"],"'Col' is defined but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [accessToken]",{"range":"209","text":"210"},"Update the dependencies array to be: [productId]",{"range":"211","text":"212"},[741,743],"[accessToken]",[826,828],"[productId]"]