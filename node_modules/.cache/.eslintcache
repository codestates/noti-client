[{"/home/sungheeyun/Desktop/noti/noti-client/src/index.js":"1","/home/sungheeyun/Desktop/noti/noti-client/src/App.js":"2","/home/sungheeyun/Desktop/noti/noti-client/src/assets/state.js":"3","/home/sungheeyun/Desktop/noti/noti-client/src/components/SignupPage/SignupPage.js":"4","/home/sungheeyun/Desktop/noti/noti-client/src/components/LoginPage/LoginPage.js":"5","/home/sungheeyun/Desktop/noti/noti-client/src/components/ModifiedPage/ModifiedPage.js":"6","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/DetailProductPage.js":"7","/home/sungheeyun/Desktop/noti/noti-client/src/components/Context/GlobalState.js":"8","/home/sungheeyun/Desktop/noti/noti-client/src/components/UploadProductPage/UploadProdctPage.js":"9","/home/sungheeyun/Desktop/noti/noti-client/src/components/List/Cart.js":"10","/home/sungheeyun/Desktop/noti/noti-client/src/components/Navbar/Navbar.js":"11","/home/sungheeyun/Desktop/noti/noti-client/src/components/List/Products.js":"12","/home/sungheeyun/Desktop/noti/noti-client/src/components/Context/ProductContext.js":"13","/home/sungheeyun/Desktop/noti/noti-client/src/components/Context/Reducers.js":"14","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/Validation.js":"15","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/FileUpload.js":"16","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Comments.js":"17","/home/sungheeyun/Desktop/noti/noti-client/src/components/MainNavigation.js":"18","/home/sungheeyun/Desktop/noti/noti-client/src/components/Navbar/SearchBox.js":"19","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/SingleComment.js":"20","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/LikeDislikes.js":"21"},{"size":220,"mtime":1618563071586,"results":"22","hashOfConfig":"23"},{"size":2953,"mtime":1618734217711,"results":"24","hashOfConfig":"23"},{"size":943,"mtime":1618563071566,"results":"25","hashOfConfig":"23"},{"size":3521,"mtime":1618563071582,"results":"26","hashOfConfig":"23"},{"size":3257,"mtime":1618585999834,"results":"27","hashOfConfig":"23"},{"size":405,"mtime":1618563071582,"results":"28","hashOfConfig":"23"},{"size":3982,"mtime":1618682485678,"results":"29","hashOfConfig":"23"},{"size":1599,"mtime":1618728545767,"results":"30","hashOfConfig":"23"},{"size":2571,"mtime":1618563071582,"results":"31","hashOfConfig":"23"},{"size":1625,"mtime":1618563071574,"results":"32","hashOfConfig":"23"},{"size":3989,"mtime":1618734084014,"results":"33","hashOfConfig":"23"},{"size":5808,"mtime":1618734024824,"results":"34","hashOfConfig":"23"},{"size":68,"mtime":1618727273958,"results":"35","hashOfConfig":"23"},{"size":2027,"mtime":1618727096005,"results":"36","hashOfConfig":"23"},{"size":772,"mtime":1618563071582,"results":"37","hashOfConfig":"23"},{"size":2084,"mtime":1618563071582,"results":"38","hashOfConfig":"23"},{"size":1787,"mtime":1618672943515,"results":"39","hashOfConfig":"23"},{"size":460,"mtime":1618563071578,"results":"40","hashOfConfig":"23"},{"size":4047,"mtime":1618723010652,"results":"41","hashOfConfig":"23"},{"size":363,"mtime":1618676966142,"results":"42","hashOfConfig":"23"},{"size":320,"mtime":1618675561552,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"14os7a9",{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},"/home/sungheeyun/Desktop/noti/noti-client/src/index.js",[],["97","98"],"/home/sungheeyun/Desktop/noti/noti-client/src/App.js",["99","100","101","102","103","104","105"],"/home/sungheeyun/Desktop/noti/noti-client/src/assets/state.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/SignupPage/SignupPage.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/LoginPage/LoginPage.js",["106"],"import React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport GoogleLogin from \"react-google-login\";\nimport axios from 'axios';\nimport swal from \"sweetalert\";\n\naxios.defaults.withCredentials = true;\n \nexport default function LoginPage({ loginHandler }) {\n  \n  const [details, setDetails] = useState({email: \"\", password: \"\"})\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n\n  const submitHandler = (e) =>{\n    e.preventDefault();\n \n    const { email, password } = details;\n\n    if(!email || !password){\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n\n    axios.post(\"https://localhost:4000/users/login\", \n    {\n      email,\n      password\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n    .then(res => {\n      history.push(\"/\");\n      loginHandler(res.data)\n    })\n    .catch(err => {\n      console.log(err.message);\n      alert(err.message)\n    })\n  }\n\n  const handleLoginSuccess = (response) => {\n    console.log(\"구글로그인\", response.profileObj)\n    if (response.profileObj) {\n      axios\n        .post(\n          \"https://localhost:4000/users/socialLogin\",\n          {\n            email: response.profileObj.email,\n            nickName: response.profileObj.name,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n        .then((res) => {\n          setUser(response.profileObj);\n          history.push(\"/\");\n        });\n    }\n  };\n\n   const handleLoginFailure = (error) => {\n    console.log(error);\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Log in</h2>\n      <form onSubmit={submitHandler}>\n        <div className=\"email-form\">\n          📧 이메일\n          <input \n            className=\"input\"\n            type=\"text\"\n            placeholder=\"이메일을 입력해주세요.\"\n            value={details.email}\n            onChange={(e) => setDetails({...details, email: e.target.value})}\n          />\n        </div>\n        <div className=\"password-form\">\n          🔐 비밀번호\n          <input \n            className=\"input\"\n            type=\"password\"\n            placeholder=\"비밀번호를 입력해주세요.\"\n            value={details.password}\n            onChange={(e) => setDetails({...details, password: e.target.value})}\n          />\n        </div>\n        <div>\n          <button className=\"btn-signin\" onClick={submitHandler}>\n          이메일로 시작하기\n          </button>\n        </div>\n       </form>   \n       <div>\n          <GoogleLogin\n            className=\"btn-google\"\n            clientId=\"996092186048-291mg21lf890quda77fdgrqn11il9c0h.apps.googleusercontent.com\"\n            buttonText=\"구글 계정으로 시작하기\"\n            onSuccess={handleLoginSuccess}\n            onFailure={handleLoginFailure}\n            cookiePolicy={\"single_host_origin\"}\n          />\n        </div> \n        <div className=\"link-singup\">\n          <span>아직 계정이 없으신가요?</span>\n          <Link to=\"/signup\" style={{color:\"black\", textDecoration:\"none\"}}>\n          👉 회원가입하기\n          </Link>          \n        </div>    \n    </div>\n  )\n};\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/ModifiedPage/ModifiedPage.js",["107","108","109","110","111","112","113"],"import React, {useState, useEffect} from 'react'\n\nexport default function ModifiedPage({ accessToken, issueAccessToken}) {\n  \n  const [form, setForm] = useState({\n    changeNickname: \"\",\n    password: \"\",\n    confirmPassword:\"\"\n  });\n\n  const [errMessage, setErrMessage] = useState(\"\");\n  const { changeNickname, password, confirmPassword} = form;\n  \n  \n  return (\n    <div>\n      MODI\n    </div>\n  )\n}\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/DetailProductPage.js",["114","115","116","117"],"import React, { useEffect, useState, useRef } from 'react'\nimport axios from 'axios';\nimport { initialState } from '../../assets/state';\nimport Comments from './Setions/Comments';\nimport '../../DetailProductPage.css';\n\nexport default function DetailProductPage(props) {\n  \n  console.log('props가 뭐니', props)\nconst productId = props.match.params.productId\n  \nconst [product, setProduct] = useState([])\nconst [commentLists, setCommentLists] = useState([])\n\n\n\n  useEffect(() => {\n    \n    axios\n      .get(`/product/detailProduct?id=${productId}&type=single`)\n        .then(response => {\n          console.log(\"상세페이지\", response.data)\n          if(response.data.success){\n            console.log('res.data', response.data)\n            setProduct(response.data.product[0])\n          } else {\n            alert('상세 정보 가져오기를 실패했습니다')\n          }\n        })\n\n      }, [])\n\n  //   axios\n  //     .get(`/product/comment`)\n  //       .then(response => {\n  //         if(response.data.success){\n  //           console.log('res.data', response.data)\n  //           setCommentLists(response.data.comment)\n  //         } else {\n  //           alert('상세 정보 가져오기를 실패했습니다')\n  //         }\n  //       })\n  // }, [])\n\n\n  // const [product, setProducts] = useState(initialState.product);\n  // const [commentLists, setCommentLists] = useState([])\n  const [index, setIndex] = useState(0)\n\n  const myRef = useRef(null)\n\n  const updateComment = (newComment) => {\n    console.log(\"뉴코멘트\", newComment)\n    setCommentLists(commentLists.concat(newComment))\n   \n  }\n  \n  const handleTab = (index) =>{\n    setIndex(index)\n    const images = myRef.current.children;\n    for(let i=0; i<images.length; i++){\n      images[i].className = images[i].className.replace(\"active\", \"\");\n    }\n    images[index].className = \"active\";\n  }\n    \n  return (\n  <>\n  {console.log(product)}\n    {/* <div className=\"detail-wrapper\">\n      {\n        product.map(item => (\n          <div className=\"details\" key={item.id}>\n            <div className=\"big-img\">\n              <img src={item.images[index]} alt=\"\" />\n            </div>\n            <div className=\"info\">\n              <div className=\"row\">\n                 <h2>{item.productName}</h2>\n                  <i class=\"far fa-bell\"></i>\n              </div>\n              <div className=\"row\">\n                <span>발매일</span> \n                <span style={{fontWeight:\"500\"}}>{item.releaseDate}</span> \n              </div>\n              <div className=\"row\">\n                <span>발매가격</span>  \n                <span style={{fontWeight:\"500\"}}>KRW {item.price}</span>\n              </div>\n              <div className=\"thumb\" ref={myRef}>\n                {\n                  item.images.map((image, index) => (\n                    <img src={image} alt=\"\" key={index} \n                    onClick={()=> handleTab(index)}\n                    />\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </div> */}\n        <div className=\"detail-wrapper\">\n      {\n        product.map(item => (\n          <div className=\"details\" key={item.id}>\n            <div className=\"info\">\n              <div className=\"row\">\n                 <h2>{item.productName}</h2>\n                  <i class=\"far fa-bell\"></i>\n              </div>\n              <div className=\"row\">\n                <span>발매일</span> \n                <span style={{fontWeight:\"500\"}}>{item.releaseDate}</span> \n              </div>\n              <div className=\"row\">\n                <span>발매가격</span>  \n                <span style={{fontWeight:\"500\"}}>KRW {item.price}</span>\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </div>\n    <Comments \n      commentLists={commentLists} \n      // productId={product[0]._id} \n      accessToken={props.accessToken}\n      updateComment={updateComment} />\n  </>   \n  )\n}\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/Context/GlobalState.js",["118","119","120","121","122","123"],"import React, { useState, useReducer } from \"react\";\nimport ProductContext from \"./ProductContext\";\nimport { \n  // shopReducer, \n  ADD_PRODUCT, REMOVE_PRODUCT, ALARM_SETTING, FETCH_PRODUCTS } from \"./Reducers\";\n\n\n  function reducer(state, action) {\n    // switch (action.type) {\n    //   case 'FETCH_PRODUCTS':\n    //     return {\n    //       users: state.products.concat(action.products)\n    //     };\n      // default:\n      //   return state;\n      return state;\n  }\n\nconst GlobalState = props => {\n  \n  const [productsState, productsDispatch] = useState(reducer, { products: [] });\n  // const updateProducts = (products) => {\n  //   setTimeout(() => {\n  //     dispatch({ type: FETCH_PRODUCTS, products: products });\n  //   }, 0);\n  // }\n  // const [cart, setCart] = useState([]);\n  // const [cartState, dispatch] = useReducer(shopReducer, { cart: [] });\n  // const addProductToCart = product => {\n  //   setTimeout(() => {\n  //     // setCart(updatedCart);\n  //     dispatch({ type: ADD_PRODUCT, product: product });\n  //   }, 0);\n  // };\n  // const alarmSetting = productId => {\n  //   setTimeout(() => {\n  //     // setCart(updatedCart);\n  //     dispatch({ type: ALARM_SETTING, productId: productId });\n  //   }, 0);\n  // };\n  // const removeProductFromCart = productId => {\n  //   setTimeout(() => {\n  //     // setCart(updatedCart);\n  //     dispatch({ type: REMOVE_PRODUCT, productId: productId });\n  //   }, 0);\n  // };\n  return (\n    <ProductContext.Provider\n      value={productsDispatch}\n    >\n      {props.children}\n    </ProductContext.Provider>\n  );\n};\nexport default GlobalState;","/home/sungheeyun/Desktop/noti/noti-client/src/components/UploadProductPage/UploadProdctPage.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/List/Cart.js",["124","125","126","127","128","129","130"],"import React, { useState, useContext, useEffect } from \"react\";\n// import { connect } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport { ImBell, ImBin2 } from 'react-icons/im';\nimport { Button, Switch } from 'antd';\nimport ProductContext from \"../Context/ProductContext\";\nimport MainNavigation from \"../MainNavigation\";\n// import { removeProductFromCart } from '../store/actions';\nimport \"./Cart.css\";\n\nconst CartPage = props => {\n  const context = useContext(ProductContext);\n  useEffect(() => {\n    console.log(context);\n  }, []);\n  return (\n    <React.Fragment>\n      <MainNavigation\n        cartItemNumber={context.cart.reduce((count, curItem) => {\n          return count + curItem.quantity;\n        }, 0)}\n      />\n      {/* <Headline /> */}\n      <main className=\"cart\">\n        {context.cart.length <= 0 && <p>저장된 알림 리스트가 없어요!</p>}\n        <ul>\n          {context.cart.map(cartItem => (\n            <li key={cartItem.id}>\n              <div>\n                <strong>{cartItem.date}</strong> - {cartItem.productname} \n                {/* ({cartItem.quantity}) */}\n              </div>\n              <div>\n              <Button> \n                {/* done={done} onClick={onChange}>{done && <ImBell />} */}\n                알림 설정\n              </Button>\n                <Button\n                  onClick={context.removeProductFromCart.bind(this,cartItem.id)}\n                >\n                  삭제\n                </Button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </main>\n    </React.Fragment>\n  );\n};\nexport default CartPage;","/home/sungheeyun/Desktop/noti/noti-client/src/components/Navbar/Navbar.js",["131","132","133"],"/home/sungheeyun/Desktop/noti/noti-client/src/components/List/Products.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/Context/ProductContext.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/Context/Reducers.js",["134"],"export const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\nexport const ALARM_SETTING = \"ALARM_SETTING\";\nexport const FETCH_PRODUCTS = \"FATCH_PRODUCTS\";\n\nconst addProductToCart = (product, state) => {\n  const updatedCart = [...state.cart];\n  const updatedItemIndex = updatedCart.findIndex(\n    item => item.id === product.id\n  );\n  if (updatedItemIndex < 0) {\n    updatedCart.push({ ...product, quantity: 1 });\n  } else {\n    const updatedItem = {\n      ...updatedCart[updatedItemIndex]\n    };\n    updatedItem.quantity++;\n    updatedCart[updatedItemIndex] = updatedItem;\n  }\n  return { ...state, cart: updatedCart };\n};\nconst removeProductFromCart = (productId, state) => {\n  console.log(\"Removing product with id: \" + productId);\n  const updatedCart = [...state.cart];\n  const updatedItemIndex = updatedCart.findIndex(item => item.id === productId);\n  const updatedItem = {\n    ...updatedCart[updatedItemIndex]\n  };\n  updatedItem.quantity--;\n  if (updatedItem.quantity <= 0) {\n    updatedCart.splice(updatedItemIndex, 1);\n  } else {\n    updatedCart[updatedItemIndex] = updatedItem;\n  }\n  return { ...state, cart: updatedCart };\n};\nconst alarmSetting = (productId, state) => {\n  console.log(\"알람 세팅 with id: \" + productId);\n}\nconst fetchProducts = (products, state) => {\n  console.log(\"상품 불러오기\");\n  return { ...state, products }\n}\nexport const shopReducer = (state, action) => {\n  console.log(action)\n  switch (action.type) {\n    case ADD_PRODUCT:\n      return addProductToCart(action.product, state);\n    case ALARM_SETTING:\n      let idx = state.cartItems.findIndex(el => el.itemId === action.payload.itemId)\n      return Object.assign({}, state, {\n        cartItems: [...state.cartItems.slice(0, idx), action.payload, \n        ...state.cartItems.slice(idx + 1)]\n      });\n    case REMOVE_PRODUCT:\n      return removeProductFromCart(action.productId, state);\n    case FETCH_PRODUCTS:\n      return fetchProducts(action.products, state);\n    default:\n      return state;\n  }\n};","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/Validation.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/FileUpload.js",["135"],"import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';  \n\naxios.defaults.withCredentials = true;\n\nexport default function FileUpload({ updateImages }) {\n\n  const [images, setImages] = useState([])\n \n  const dropHandler = (files) => {\n     \n    let formData = new FormData();\n    const config = {\n      header: {'Content-Type': 'multipart/form-data'}\n    }\n    formData.append(\"file\", files[0])\n \n    axios.post('https://localhost:4000/products/image', formData, config)\n      .then(response => {\n        if(response.data.success){\n           console.log(\"사진업로드\", response.data)\n           setImages([...images, response.data.filePath])\n           updateImages([...images, response.data.filePath])\n          }else {\n          alert('파일을 저장하는데 실패했습니다')\n        }\n      })\n  }\n\n\n\n  const deleteHandler = (image) => {\n    const currentIndex = images.indexOf(image)\n    let newImages = [...images]\n    newImages.splice(currentIndex, 1) \n    setImages(newImages)\n    updateImages(newImages)\n  }\n\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n      <Dropzone onDrop={dropHandler}>\n        {({getRootProps, getInputProps}) => (        \n            <div \n              style={{\n                width: 300, height: 240, border: '1px solid lightgray',\n                display: 'flex', alignItems:'center', justifyContent: 'center'\n              }}            \n              {...getRootProps()}>\n              <input {...getInputProps()} />\n              <i class=\"fas fa-plus\" style={{ fontSize: '3rem'}}></i>\n            </div>         \n        )}\n      </Dropzone>\n      \n      <div style={{display: 'flex', width: '350px', height:'240px', overflowX: 'scroll'}}>\n\n        {images.map((image, index) => (\n          <div onClick={()=> deleteHandler(image)} key={index}>\n            <img style={{ minWidth: '300px', width:'300px', height: '240px' }}\n                 src={`https://localhost:4000/${image}`} />\n          </div>\n        ))}\n\n      </div>\n    </div>\n  )\n}\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Comments.js",["136","137"],"import axios from 'axios';\nimport React, { useState, useContext } from 'react';\nimport SingleComment from './SingleComment';\nimport {userContext} from '../../../App';\n\n\naxios.defaults.withCredentials = true;\n\n\nexport default function Comments(props) {\n\n  const [comment, setComment] = useState(\"\")\n   \n  const handleChange = (e) => {\n    setComment(e.target.value)\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n      const variables = {\n      content: comment,\n      productId: props.productId\n    }\n\n   console.log(variables)\n\n    axios\n      .post(\"https://localhost:4000/products/writeComment\", \n      variables,\n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}, \n      })\n      .then(response => {\n        console.log (\"포스트\", response)\n        if(response.data.success) {\n          setComment(\"\") \n          props.updateComment(response.data.data)\n        } else {\n          alert('failed to save comment')\n        }\n       })\n  }\n\n  return (\n    <div>\n      <br />\n      <p> replies</p>\n      \n      {/* root comment form */}\n      <form style={{ display: \"flex\" }} onSubmit={onSubmit}>\n        <textarea \n          style={{ width: \"100%\", borderRadius: \"5px\"}}\n          onChange={handleChange}\n          value={comment}\n          placeholder=\"코멘트를 작성해 주세요.\"  \n        />\n        <br />\n        <button style={{ width:\"20%\", height:\"52px\"}} onClick={onSubmit}>Submit</button>\n\n      </form>\n      {/* comment lists */}\n      {props.commentLists && props.commentLists.map((comment, index) => (\n        // <React.Fragment>\n          <SingleComment \n            comment={comment} \n            productId={props.poductId} \n           />\n        //</React.Fragment>\n      ))}\n\n\n\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/MainNavigation.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/Navbar/SearchBox.js",["138","139"],"import React, { useState } from \"react\";\nimport \"../../SearchBox.css\"\n\nexport default function SearchBox({ updateSearchTerm }){\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [click, setClick] = useState(false);\n\n  const searchHandler = (event) => {\n    // console.log(\"이벤트\", event.target.value)\n    setSearchTerm(event.target.value)\n    // updateSearchTerm(event.target.value)\n   // console.log(\"타겟\", event.currentTarget)\n  }\n  \n  const handleClick = () => setClick(!click);\n\n  return(\n    <div>\n        {/* <form> */}\n          <input \n            type=\"text\" \n            className=\"search-box\" \n            placeholder=\"Search\"\n            onChange={searchHandler}\n            value={searchTerm}\n            required\n            />\n          <input \n            type=\"button\" \n            className=\"fas fa-search\"\n            onClick={() => updateSearchTerm(searchTerm)}\n          />\n        {/* </form> */}\n        <div className=\"search-icon\" onClick={handleClick}>\n          <i className=\"fas fa-search\" style={{ fontSize:\"1.3rem\"}}></i>\n        </div>\n    </div>\n  )\n}\n// 온클릭되면 토글나오게 코드작성해야함\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import ReactDOM from \"react-dom\";\n// import axios from \"axios\";\n// import TextField from \"@material-ui/core/TextField\";\n// import { Input, Button } from 'antd';\n// import { SearchOutlined } from '@ant-design/icons';\n// import \"../../SearchBox.css\"\n\n// export default function SearchBox () {\n//   const [products, setProducts] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [search, setSearch] = useState(\"\");\n//   const [filteredProducts, setFilteredProducts] = useState([]);\n\n\n  // const ProductDetail = props => {\n  //   const { releaseString, productName } = props;\n  //   return (\n  //     <>\n        {/* <p>\n          <img src={img} alt={name} style={{ width: \"20px\", height: \"20px\" }} />\n        </p> */}\n        {/* <p>{productName}</p>\n        <p>{releaseString}</p>\n      </>\n    );\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(\"https://localhost:4000/products/searchProduct\")\n      .then(res => {\n        console.log(\"필터가 된 제품\", res.data)\n        setProducts(res.data);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n\n    useEffect(() => {\n      setFilteredProducts(\n        products.filter(product =>\n          product.brand.toLowerCase().includes(search.toLowerCase())\n        )\n      );\n    }, [search, products]);\n\n    if (loading) {\n      return <p>제품을 검색 중입니다...</p>;\n    } */}\n\n  //   return (\n  //     <div className=\"SearchBox\">\n  //       <Input\n  //         onChange={e => setSearch(e.target.value)}\n  //         placeholder=\"ex) 나이키\"\n  //       />\n  //       {filteredProducts.map((product, idx) => (\n  //         <ProductDetail key={idx} {...product} />\n  //       ))}\n  //       <Button \n  //         type=\"primary\" \n  //         shape=\"circle\" \n  //         icon={<SearchOutlined />} />\n  //     </div>\n  //   );\n  // }\n\n//   export default SearchBox;\n//   const searchHandler = (event) => {\n//     console.log(\"이벤트\", event.target.value)\n//     setSearchTerm(event.target.value)\n//     updateSearchTerm(event.target.value)\n//   }\n  \n//   const handleClick = () => setClick(!click);\n\n//   return(\n//     <div>\n//         <form>\n//           <input \n//             type=\"text\" \n//             className=\"search-box\" \n//             placeholder=\"Search\"\n//             onChange={searchHandler}\n//             value={searchTerm}\n//             required\n//             />\n//             <button \n//               type=\"submit\" \n//               className=\"fas fa-search\"\n//               onClick={searchHandler}\n//               ></button>\n//           </form>\n//           <div className=\"search-icon\" onClick={handleClick}>\n//             <i className=\"fas fa-search\" style={{ fontSize:\"1.6rem\"}}></i>\n//           </div>\n//     </div>\n//   )\n// }\n\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/SingleComment.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/LikeDislikes.js",["140"],"import React, { useEffect } from 'react'\n\nexport default function LikeDislikes() {\n\n\n  // useEffect(() => {\n    \n \n  //   const variable = {\n  //     commentId: ,\n  //     nickName\n  //   }\n\n\n\n  // })\n\n  return (\n    <div>\n      <i class=\"fas fa-thumbs-up\"></i>\n      <i class=\"far fa-thumbs-up\"></i>\n    </div>\n  )\n}\n\n\n",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":40},{"ruleId":"145","severity":1,"message":"149","line":1,"column":42,"nodeType":"147","messageId":"148","endLine":1,"endColumn":51},{"ruleId":"145","severity":1,"message":"150","line":1,"column":53,"nodeType":"147","messageId":"148","endLine":1,"endColumn":63},{"ruleId":"145","severity":1,"message":"151","line":12,"column":10,"nodeType":"147","messageId":"148","endLine":12,"endColumn":22},{"ruleId":"145","severity":1,"message":"152","line":17,"column":8,"nodeType":"147","messageId":"148","endLine":17,"endColumn":19},{"ruleId":"145","severity":1,"message":"153","line":18,"column":8,"nodeType":"147","messageId":"148","endLine":18,"endColumn":20},{"ruleId":"145","severity":1,"message":"154","line":19,"column":8,"nodeType":"147","messageId":"148","endLine":19,"endColumn":16},{"ruleId":"145","severity":1,"message":"155","line":12,"column":10,"nodeType":"147","messageId":"148","endLine":12,"endColumn":14},{"ruleId":"145","severity":1,"message":"149","line":1,"column":26,"nodeType":"147","messageId":"148","endLine":1,"endColumn":35},{"ruleId":"145","severity":1,"message":"156","line":5,"column":16,"nodeType":"147","messageId":"148","endLine":5,"endColumn":23},{"ruleId":"145","severity":1,"message":"157","line":11,"column":10,"nodeType":"147","messageId":"148","endLine":11,"endColumn":20},{"ruleId":"145","severity":1,"message":"158","line":11,"column":22,"nodeType":"147","messageId":"148","endLine":11,"endColumn":35},{"ruleId":"145","severity":1,"message":"159","line":12,"column":11,"nodeType":"147","messageId":"148","endLine":12,"endColumn":25},{"ruleId":"145","severity":1,"message":"160","line":12,"column":27,"nodeType":"147","messageId":"148","endLine":12,"endColumn":35},{"ruleId":"145","severity":1,"message":"161","line":12,"column":37,"nodeType":"147","messageId":"148","endLine":12,"endColumn":52},{"ruleId":"145","severity":1,"message":"151","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":31,"column":10,"nodeType":"164","endLine":31,"endColumn":12,"suggestions":"165"},{"ruleId":"145","severity":1,"message":"166","line":48,"column":10,"nodeType":"147","messageId":"148","endLine":48,"endColumn":15},{"ruleId":"145","severity":1,"message":"167","line":58,"column":9,"nodeType":"147","messageId":"148","endLine":58,"endColumn":18},{"ruleId":"145","severity":1,"message":"150","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":37},{"ruleId":"145","severity":1,"message":"168","line":5,"column":3,"nodeType":"147","messageId":"148","endLine":5,"endColumn":14},{"ruleId":"145","severity":1,"message":"169","line":5,"column":16,"nodeType":"147","messageId":"148","endLine":5,"endColumn":30},{"ruleId":"145","severity":1,"message":"170","line":5,"column":32,"nodeType":"147","messageId":"148","endLine":5,"endColumn":45},{"ruleId":"145","severity":1,"message":"171","line":5,"column":47,"nodeType":"147","messageId":"148","endLine":5,"endColumn":61},{"ruleId":"145","severity":1,"message":"172","line":21,"column":10,"nodeType":"147","messageId":"148","endLine":21,"endColumn":23},{"ruleId":"145","severity":1,"message":"173","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"174","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":14},{"ruleId":"145","severity":1,"message":"175","line":3,"column":18,"nodeType":"147","messageId":"148","endLine":3,"endColumn":21},{"ruleId":"145","severity":1,"message":"176","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":16},{"ruleId":"145","severity":1,"message":"177","line":4,"column":18,"nodeType":"147","messageId":"148","endLine":4,"endColumn":24},{"ruleId":"145","severity":1,"message":"178","line":5,"column":18,"nodeType":"147","messageId":"148","endLine":5,"endColumn":24},{"ruleId":"162","severity":1,"message":"179","line":15,"column":6,"nodeType":"164","endLine":15,"endColumn":8,"suggestions":"180"},{"ruleId":"145","severity":1,"message":"181","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":26},{"ruleId":"145","severity":1,"message":"182","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":10},{"ruleId":"183","severity":1,"message":"184","line":92,"column":19,"nodeType":"185","messageId":"186","endLine":95,"endColumn":21},{"ruleId":"145","severity":1,"message":"187","line":37,"column":7,"nodeType":"147","messageId":"148","endLine":37,"endColumn":19},{"ruleId":"188","severity":1,"message":"189","line":62,"column":13,"nodeType":"190","endLine":63,"endColumn":60},{"ruleId":"145","severity":1,"message":"191","line":2,"column":27,"nodeType":"147","messageId":"148","endLine":2,"endColumn":37},{"ruleId":"145","severity":1,"message":"192","line":4,"column":9,"nodeType":"147","messageId":"148","endLine":4,"endColumn":20},{"ruleId":"193","severity":1,"message":"194","line":64,"column":9,"nodeType":"195","messageId":"196","endLine":66,"endColumn":17},{"ruleId":"193","severity":1,"message":"194","line":67,"column":9,"nodeType":"195","messageId":"196","endLine":97,"endColumn":10},{"ruleId":"145","severity":1,"message":"149","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useReducer' is defined but never used.","'initialState' is defined but never used.","'GlobalState' is defined but never used.","'ProductsPage' is defined but never used.","'CartPage' is defined but never used.","'user' is assigned a value but never used.","'setForm' is assigned a value but never used.","'errMessage' is assigned a value but never used.","'setErrMessage' is assigned a value but never used.","'changeNickname' is assigned a value but never used.","'password' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.","ArrayExpression",["199"],"'index' is assigned a value but never used.","'handleTab' is assigned a value but never used.","'ADD_PRODUCT' is defined but never used.","'REMOVE_PRODUCT' is defined but never used.","'ALARM_SETTING' is defined but never used.","'FETCH_PRODUCTS' is defined but never used.","'productsState' is assigned a value but never used.","'useState' is defined but never used.","'styled' is defined but never used.","'css' is defined but never used.","'ImBell' is defined but never used.","'ImBin2' is defined but never used.","'Switch' is defined but never used.","React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.",["200"],"'useHistory' is defined but never used.","'qs' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'alarmSetting' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","'userContext' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [productId]",{"range":"205","text":"206"},"Update the dependencies array to be: [context]",{"range":"207","text":"208"},[859,861],"[productId]",[555,557],"[context]"]