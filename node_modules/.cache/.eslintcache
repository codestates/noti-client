[{"/home/sungheeyun/Desktop/noti/noti-client/src/index.js":"1","/home/sungheeyun/Desktop/noti/noti-client/src/App.js":"2","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/index.js":"3","/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/AlarmPage.js":"4","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/UserReducer.js":"5","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Toast.js":"6","/home/sungheeyun/Desktop/noti/noti-client/src/_Actions/Types.js":"7","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/LandingPage.js":"8","/home/sungheeyun/Desktop/noti/noti-client/src/components/UploadProductPage/UploadProdctPage.js":"9","/home/sungheeyun/Desktop/noti/noti-client/src/assets/state.js":"10","/home/sungheeyun/Desktop/noti/noti-client/src/components/Navbar/Navbar.js":"11","/home/sungheeyun/Desktop/noti/noti-client/src/components/ModifiedPage/ModifiedPage.js":"12","/home/sungheeyun/Desktop/noti/noti-client/src/components/SignupPage/SignupPage.js":"13","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/DetailProductPage.js":"14","/home/sungheeyun/Desktop/noti/noti-client/src/components/LoginPage/LoginPage.js":"15","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/SearchBox.js":"16","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Comments.js":"17","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/Validation.js":"18","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/FileUpload.js":"19","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Interaction.js":"20","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/SingleComment.js":"21","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Likes.js":"22"},{"size":1552,"mtime":1618905714821,"results":"23","hashOfConfig":"24"},{"size":2649,"mtime":1618922995151,"results":"25","hashOfConfig":"24"},{"size":259,"mtime":1618905714793,"results":"26","hashOfConfig":"24"},{"size":2392,"mtime":1618905714797,"results":"27","hashOfConfig":"24"},{"size":790,"mtime":1618905714793,"results":"28","hashOfConfig":"24"},{"size":842,"mtime":1618905714801,"results":"29","hashOfConfig":"24"},{"size":188,"mtime":1618905714785,"results":"30","hashOfConfig":"24"},{"size":4169,"mtime":1618912590745,"results":"31","hashOfConfig":"24"},{"size":2575,"mtime":1618905714817,"results":"32","hashOfConfig":"24"},{"size":943,"mtime":1618905714793,"results":"33","hashOfConfig":"24"},{"size":3399,"mtime":1618905714817,"results":"34","hashOfConfig":"24"},{"size":405,"mtime":1618905714813,"results":"35","hashOfConfig":"24"},{"size":3521,"mtime":1618905714817,"results":"36","hashOfConfig":"24"},{"size":3442,"mtime":1618931129438,"results":"37","hashOfConfig":"24"},{"size":3257,"mtime":1618905714813,"results":"38","hashOfConfig":"24"},{"size":1208,"mtime":1618905714801,"results":"39","hashOfConfig":"24"},{"size":2067,"mtime":1618922558201,"results":"40","hashOfConfig":"24"},{"size":772,"mtime":1618905714821,"results":"41","hashOfConfig":"24"},{"size":2084,"mtime":1618905714821,"results":"42","hashOfConfig":"24"},{"size":1009,"mtime":1618905714801,"results":"43","hashOfConfig":"24"},{"size":645,"mtime":1618931322776,"results":"44","hashOfConfig":"24"},{"size":1297,"mtime":1618931309472,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"14os7a9",{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sungheeyun/Desktop/noti/noti-client/src/index.js",["101"],"// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Reducer from './_Reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    \n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        {/* <ChakraProvider> */}\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n        {/* </ChakraProvider> */}\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n",["102","103"],"/home/sungheeyun/Desktop/noti/noti-client/src/App.js",["104","105","106"],"import React, { useState, createContext, useEffect, useReducer } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport {\n  BrowserRouter as Router, \n  Route, \n  Switch \n} from 'react-router-dom';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport SignupPage from './components/SignupPage/SignupPage';\nimport Navbar from './components/Navbar/Navbar';\nimport DetailProductPage from './components/DetailProductPage/DetailProductPage';\nimport ModifiedPage from './components/ModifiedPage/ModifiedPage';\nimport { initialState } from './assets/state';\nimport axios from \"axios\";\nimport UploadProdctPage from './components/UploadProductPage/UploadProdctPage';\nimport LandingPage from \"./components/LandingPage/LandingPage\";\nimport AlarmPage from \"./components/AlarmPage/AlarmPage\";\n\nexport const ProductsContext = createContext();\naxios.defaults.withCredentials = true;\n\nfunction App() {\n\n  const [isLogin, setIsLogin] = useState(false);\n  const [accessToken, setAccessToken] = useState(\"\");\n  const loginHandler = (data) => {\n    setIsLogin(true)\n    issueAccessToken(data.data);\n  };\n  const issueAccessToken = (token) => {\n   setAccessToken(token);\n   console.log(\"토큰\", token)  \n  }\n  const handleLogout = () => {\n    setIsLogin(false);\n    setAccessToken(\"\");\n  }\n\n  return (\n    <Router>\n     <ChakraProvider>\n      <Navbar \n        loginHandler={loginHandler}\n        handleLogout={handleLogout}\n        isLogin={isLogin}\n        // setProducts={setProducts}\n      />\n      <Switch>\n      {/* <Route exact path=\"/\" component={LandingPage} /> */}\n      <Route exact path=\"/\">\n      <LandingPage accessToken={accessToken} issueAccessToken={issueAccessToken} />\n      </Route>\n      {/* <Route exact path=\"/user/alarmpage\" component={AlarmPage} /> */}\n      <Route exact path=\"/user/alarmpage\">\n        <AlarmPage accessToken={accessToken} issueAccessToken={issueAccessToken} />\n      </Route>\n        <Route exact path=\"/login\">\n          <LoginPage loginHandler={loginHandler} /> \n        </Route>\n        <Route exact path=\"/signup\" component={SignupPage} />\n        <Route exact path=\"/product/upload\" component={UploadProdctPage} />\n        {/* <Route path=\"/\" exact={true} component={LandingPage} /> */}\n        <Route path=\"/modified\">\n          <ModifiedPage accessToken={accessToken} issueAccessToken={issueAccessToken} />\n        </Route> \n        <Route \n          path=\"/product/:productId\" \n          render={(props) =>  <DetailProductPage accessToken={accessToken} issueAccessToken={issueAccessToken} {...props} />} />\n      </Switch>\n      </ChakraProvider>\n    </Router>\n    \n  );\n}\nexport default App;","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/index.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/AlarmPage.js",["107","108","109","110"],"import React, { useEffect, useState } from 'react'\nimport { Switch, Button } from \"antd\"\nimport axios from \"axios\";\nimport Toast from '../LandingPage/Sections/Toast'\n\nfunction AlarmPage(props) {\n    console.log(\"상품 잘 겟하는지\", props)\n    \n    const [AlarmList, setAlarmList] = useState([])\n    const [LeftDay, setLeftDay] = useState(\"\")\n\n    useEffect(() => {\n        axios.get(\"https://localhost:4000/products/myList\",{\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}\n      })\n        .then(response => {\n            console.log(\"알림리스트\",response.status)\n            if (response.status === 200) {\n                setAlarmList(response.data.data)\n                setLeftDay(response.data.leftDay)\n            }\n        })\n    },[])\n\n    const alarmSetting = (productId) => {\n        console.log(\"알람설정\")\n        let body = {\n        productId: productId\n        }\n        axios.patch(`https://localhost:4000/products/changeAlarm`, body, {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}\n      })\n          .then(response => {\n            console.log(response.data);\n          });\n    }\n\n\n    const handleDelete = (productId) => {\n        console.log(\"삭제버튼\")\n        axios.delete(`https://localhost:4000/products/removeAlarm?productId=${productId}`, {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}\n      })\n          .then(response => {\n            console.log(response.data);\n          });\n    }\n\n    const renderCards = AlarmList.map((data, index) => {\n        console.log(\"저장된 각 제품 불러오는지\", data)\n        const key={index}\n        return <div>\n            <div>\n                {<img src ={`https://projectb1.com:4000/${data.images}`}/>}\n\n                <h2>{data.releaseString}</h2>\n                <h2>{data.productName}</h2>\n                <Switch onChange={alarmSetting}></Switch>\n                <Button onClick={handleDelete}> 삭제 </Button>\n             </div>\n            </div>\n    })\n    \n        return (\n            <div style={{ width: '85%', margin: '3rem auto' }}>\n                <h1>알림 리스트 페이지</h1>\n                <h2>{LeftDay}일 뒤,</h2>\n                <div>\n                    {renderCards}\n                </div>\n\n            </div>\n        )\n    }\n\nexport default AlarmPage\n","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/UserReducer.js",["111"],"import {\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM,\n} from '../_Actions/Types';\n\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case ADD_TO_CART:\n            return {\n                ...state,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload\n                }\n            }\n        case GET_CART_ITEMS:\n            return { ...state, cartDetail: action.payload }\n\n\n\n        case REMOVE_CART_ITEM:\n            return {\n                ...state, cartDetail: action.payload.productInfo,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart\n                }\n            }\n        default:\n            return state;\n    }\n}","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Toast.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/_Actions/Types.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/LandingPage.js",["112","113","114","115","116","117","118","119","120","121"],"import React, { useEffect, useState } from 'react'\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\nimport Interaction from \"./Sections/Interaction\";\n// import Button from \"./Sections/Button\"\nimport { useDispatch } from 'react-redux'\nimport Toast from './Sections/Toast'\nimport axios from \"axios\";\nimport { Col, Card, Row, } from 'antd';\nimport SearchBox from \"./Sections/SearchBox\";\nimport { Box, Image, AspectRatio, Badge } from \"@chakra-ui/react\"\n\nexport default function LandingPage(props) {\n    console.log(\"랜딩 프롭스\", props)\n\n    const [ProductList, setProductList] = useState([])\n    const history = useHistory();\n    const [click, setClick] = useState(false);\n    const handleClick = () => setClick(!click);\n    \n     const [searchTerm, setSearchTerm] = useState(\"\")\n\n\n    useEffect(() => {\n        axios.get(\"https://localhost:4000/products/filterProductList\")\n        // axios.get(\"https://projectb1.com:4000/products/filterProductList\")\n            .then(response => {\n                console.log(\"제품 정보\", response.data)\n                if (response.data.data) {\n                    setProductList(response.data.data)\n                } else {\n                    alert(\" 상품들을 가져오는데 실패 했습니다.\")\n                }\n            })\n\n    },[])\n\n    const updateSearchTerm = (newSearchTerm) => {\n    \n      axios.get(`https://localhost:4000/products/searchProduct?searchTerm=${newSearchTerm}`,\n        {headers: {\n          \"Content-Type\": \"application/json\"\n        }})\n        .then(response => {\n          console.log(\"검색결과\", response.data.data)\n          setProductList(response.data.data)\n      })  \n  }\n\n    // const dispatch = useDispatch()\n\n    const addCart = (productId) => {\n      const goToList = ProductList.filter(product => {\n          return productId === productId\n      })\n      console.log(\"클릭된제품\", goToList)\n      \n    //  const body = goToList[0]\n      \n      axios.post(`https://localhost:4000/products/addMyLIst?productId=${productId}`,\n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}\n      })\n        .then(response => \n            console.log(\"장바구니\",response.data))\n        }\n\n    \n    const renderCards = ProductList.map((data, index) => {    \n\n        console.log(\"저장된 각 제품 불러오는지\", data.releaseString)\n        return <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n            <AspectRatio maxW=\"600px\" ratio={1}>\n            <Image\n            src={`https://projectb1.com:4000/${data.images[0]}`}/>\n            </AspectRatio>\n\n            <Badge \n            borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                New\n            </Badge>\n            \n            \n            <Box\n                mt=\"2\"\n                fontSize=\"lg\"\n                fontWeight=\"semibold\"\n                as=\"h3\"\n                lineHeight=\"1.5\"\n                isTruncated\n                >\n                {data.releaseString}\n            </Box>\n\n            <Box>\n                {data.productName}\n                <Box as=\"span\" color=\"gray.600\" fontSize=\"md\">\n                </Box>\n            </Box>\n            \n\n            <Link\n                exact\n                to={`/product/${data._id}`}\n                onClick={handleClick}>\n                 상세정보 확인하기\n            </Link>\n                <button onClick={addCart(data.ProductId)}>\n                저장\n                </button>\n        </Box>\n    })\n\n    return (\n        <div style={{ width: '75%', margin: '3rem auto' }}>\n\n             <div style={{ textAlign: 'center' }}>\n                <h1>서비스 소개 콘텐츠 {addCart}</h1>\n            </div>\n            <Box bg=\"tomato\" w=\"100%\" p={4} color=\"white\">\n                This is the Box\n            </Box>\n            {/* <Interaction>\n            </Interaction> */}\n\n            \n            <SearchBox updateSearchTerm={updateSearchTerm} />\n            <br />\n            <h1>최신발매정보</h1>\n            <Row gutter={[16, 16]} >\n                {renderCards}\n            </Row>\n\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/UploadProductPage/UploadProdctPage.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/assets/state.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/Navbar/Navbar.js",["122","123","124","125"],"import React, { useState } from \"react\";\nimport { Icon, Badge } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../../Navbar.css\";\nimport axios from \"axios\";\n\nexport default function Navbar({ loginHandler, handleLogout, isLogin }){\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n\n  return(\n    <>\n      <nav className=\"navbar\">\n        <div className=\"nav-container\">\n          <Link \n            exact to=\"/\"\n            className=\"nav-logo\"\n            style={{textDecoration: \"none\", color: \"black\"}}>\n            NOTI\n          </Link>\n          {/* 테스트를 위한 알림 리스트 탭 입니다 */}\n          <Badge count={5}>\n          <Link exact to=\"/user/alarmpage\"\n            activeClassName=\"active\"\n            className=\"nav-links\"\n            onClick={handleClick}\n            >\n              알림\n          </Link>\n          </Badge>\n          {/* 테스트를 위한 알림 리스트 탭 입니다 */}         \n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\n             {isLogin ? (\n            <>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  알림리스트\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  회원정보수정\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link \n                  exact to=\"/\"\n                  onClick={handleLogout}\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={()=>{\n                    handleClick();\n                    handleLogout();\n                  }}\n                >\n                로그아웃\n                </Link>                  \n              </li> \n            </>\n             ) : (\n            <>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>              \n              <li className=\"nav-item\">\n                <Link exact to=\"/login\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  로그인\n                </Link>\n              </li>   \n            </>            \n            )}          \n          </ul>\n          <div className=\"nav-icon\" onClick={handleClick}>\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\n          </div> \n        </div>\n      </nav>\n    </>\n  );\n}\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/ModifiedPage/ModifiedPage.js",["126","127","128","129","130","131","132"],"import React, {useState, useEffect} from 'react'\n\nexport default function ModifiedPage({ accessToken, issueAccessToken}) {\n  \n  const [form, setForm] = useState({\n    changeNickname: \"\",\n    password: \"\",\n    confirmPassword:\"\"\n  });\n\n  const [errMessage, setErrMessage] = useState(\"\");\n  const { changeNickname, password, confirmPassword} = form;\n  \n  \n  return (\n    <div>\n      MODI\n    </div>\n  )\n}\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/SignupPage/SignupPage.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/DetailProductPage.js",["133","134","135","136"],"/home/sungheeyun/Desktop/noti/noti-client/src/components/LoginPage/LoginPage.js",["137"],"import React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport GoogleLogin from \"react-google-login\";\nimport axios from 'axios';\nimport swal from \"sweetalert\";\n\naxios.defaults.withCredentials = true;\n \nexport default function LoginPage({ loginHandler }) {\n  \n  const [details, setDetails] = useState({email: \"\", password: \"\"})\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n\n  const submitHandler = (e) =>{\n    e.preventDefault();\n \n    const { email, password } = details;\n\n    if(!email || !password){\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n\n    axios.post(\"https://localhost:4000/users/login\", \n    {\n      email,\n      password\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n    .then(res => {\n      history.push(\"/\");\n      loginHandler(res.data)\n    })\n    .catch(err => {\n      console.log(err.message);\n      alert(err.message)\n    })\n  }\n\n  const handleLoginSuccess = (response) => {\n    console.log(\"구글로그인\", response.profileObj)\n    if (response.profileObj) {\n      axios\n        .post(\n          \"https://localhost:4000/users/socialLogin\",\n          {\n            email: response.profileObj.email,\n            nickName: response.profileObj.name,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n        .then((res) => {\n          setUser(response.profileObj);\n          history.push(\"/\");\n        });\n    }\n  };\n\n   const handleLoginFailure = (error) => {\n    console.log(error);\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Log in</h2>\n      <form onSubmit={submitHandler}>\n        <div className=\"email-form\">\n          📧 이메일\n          <input \n            className=\"input\"\n            type=\"text\"\n            placeholder=\"이메일을 입력해주세요.\"\n            value={details.email}\n            onChange={(e) => setDetails({...details, email: e.target.value})}\n          />\n        </div>\n        <div className=\"password-form\">\n          🔐 비밀번호\n          <input \n            className=\"input\"\n            type=\"password\"\n            placeholder=\"비밀번호를 입력해주세요.\"\n            value={details.password}\n            onChange={(e) => setDetails({...details, password: e.target.value})}\n          />\n        </div>\n        <div>\n          <button className=\"btn-signin\" onClick={submitHandler}>\n          이메일로 시작하기\n          </button>\n        </div>\n       </form>   \n       <div>\n          <GoogleLogin\n            className=\"btn-google\"\n            clientId=\"996092186048-291mg21lf890quda77fdgrqn11il9c0h.apps.googleusercontent.com\"\n            buttonText=\"구글 계정으로 시작하기\"\n            onSuccess={handleLoginSuccess}\n            onFailure={handleLoginFailure}\n            cookiePolicy={\"single_host_origin\"}\n          />\n        </div> \n        <div className=\"link-singup\">\n          <span>아직 계정이 없으신가요?</span>\n          <Link to=\"/signup\" style={{color:\"black\", textDecoration:\"none\"}}>\n          👉 회원가입하기\n          </Link>          \n        </div>    \n    </div>\n  )\n};\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/SearchBox.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Comments.js",["138"],"import axios from 'axios';\nimport React, { useState, useContext } from 'react';\nimport SingleComment from './SingleComment';\n\naxios.defaults.withCredentials = true;\n\n\nexport default function Comments(props) {\n  const [comment, setComment] = useState(\"\")\n   \n  const handleChange = (e) => {\n    setComment(e.target.value)\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if(comment === \"\") {\n      alert(\"내용을 입력해주세요\")\n      return\n    }\n\n  const body = {\n      comment: comment,\n      _id: props.productId\n    }\n\n   console.log(\"댓글 보내는값\", body)\n\n    axios\n      .post(\"https://localhost:4000/products/writeComment\", \n      body,\n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}, \n      })\n      .then(response => {\n        console.log (\"포스트\", response.data)\n        if(response.data.success) {\n          console.log(response.data)\n          props.updateComment(response.data.data.comment)\n          setComment(\"\")        \n        } else {\n          alert('failed to save comment')\n        }\n       })\n      .catch((err) =>{\n        if(err.response.status === 401) {\n          alert(\"로그인이 필요합니다.\")\n      }\n    })\n  }\n\n  return (\n    <div>\n      <br />\n      <p> replies</p>\n      {/* root comment form */}\n      <form style={{ display: \"flex\" }} onSubmit={onSubmit}>\n        <textarea \n          style={{ width: \"100%\", borderRadius: \"5px\"}}\n          onChange={handleChange}\n          value={comment}\n          placeholder=\"코멘트를 작성해 주세요.\"  \n        />\n        <br />\n        <button style={{ width:\"20%\", height:\"52px\"}} onClick={onSubmit}>Submit</button>\n\n      </form>\n      {/* comment lists */}\n      {props.commentLists && props.commentLists.map((comment, index) => (\n          <SingleComment \n            key={index}\n            comment={comment} \n            productId={props.productId} \n            accessToken={props.accessToken}\n            updateLikes={props.updateLikes}\n         />\n      ))}\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/Validation.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/FileUpload.js",["139"],"import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';  \n\naxios.defaults.withCredentials = true;\n\nexport default function FileUpload({ updateImages }) {\n\n  const [images, setImages] = useState([])\n \n  const dropHandler = (files) => {\n     \n    let formData = new FormData();\n    const config = {\n      header: {'Content-Type': 'multipart/form-data'}\n    }\n    formData.append(\"file\", files[0])\n \n    axios.post('https://localhost:4000/products/image', formData, config)\n      .then(response => {\n        if(response.data.success){\n           console.log(\"사진업로드\", response.data)\n           setImages([...images, response.data.filePath])\n           updateImages([...images, response.data.filePath])\n          }else {\n          alert('파일을 저장하는데 실패했습니다')\n        }\n      })\n  }\n\n\n\n  const deleteHandler = (image) => {\n    const currentIndex = images.indexOf(image)\n    let newImages = [...images]\n    newImages.splice(currentIndex, 1) \n    setImages(newImages)\n    updateImages(newImages)\n  }\n\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n      <Dropzone onDrop={dropHandler}>\n        {({getRootProps, getInputProps}) => (        \n            <div \n              style={{\n                width: 300, height: 240, border: '1px solid lightgray',\n                display: 'flex', alignItems:'center', justifyContent: 'center'\n              }}            \n              {...getRootProps()}>\n              <input {...getInputProps()} />\n              <i class=\"fas fa-plus\" style={{ fontSize: '3rem'}}></i>\n            </div>         \n        )}\n      </Dropzone>\n      \n      <div style={{display: 'flex', width: '350px', height:'240px', overflowX: 'scroll'}}>\n\n        {images.map((image, index) => (\n          <div onClick={()=> deleteHandler(image)} key={index}>\n            <img style={{ minWidth: '300px', width:'300px', height: '240px' }}\n                 src={`https://localhost:4000/${image}`} />\n          </div>\n        ))}\n\n      </div>\n    </div>\n  )\n}\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Interaction.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/SingleComment.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Likes.js",["140"],{"ruleId":"141","severity":1,"message":"142","line":27,"column":10,"nodeType":"143","messageId":"144","endLine":27,"endColumn":24},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"141","severity":1,"message":"149","line":1,"column":42,"nodeType":"143","messageId":"144","endLine":1,"endColumn":51},{"ruleId":"141","severity":1,"message":"150","line":1,"column":53,"nodeType":"143","messageId":"144","endLine":1,"endColumn":63},{"ruleId":"141","severity":1,"message":"151","line":13,"column":10,"nodeType":"143","messageId":"144","endLine":13,"endColumn":22},{"ruleId":"141","severity":1,"message":"152","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":23,"column":7,"nodeType":"155","endLine":23,"endColumn":9,"suggestions":"156"},{"ruleId":"141","severity":1,"message":"157","line":51,"column":15,"nodeType":"143","messageId":"144","endLine":51,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":54,"column":18,"nodeType":"160","endLine":54,"endColumn":75},{"ruleId":"161","severity":1,"message":"162","line":8,"column":1,"nodeType":"163","endLine":34,"endColumn":2},{"ruleId":"141","severity":1,"message":"164","line":2,"column":28,"nodeType":"143","messageId":"144","endLine":2,"endColumn":38},{"ruleId":"141","severity":1,"message":"165","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":19},{"ruleId":"141","severity":1,"message":"166","line":5,"column":10,"nodeType":"143","messageId":"144","endLine":5,"endColumn":21},{"ruleId":"141","severity":1,"message":"152","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":13},{"ruleId":"141","severity":1,"message":"167","line":8,"column":10,"nodeType":"143","messageId":"144","endLine":8,"endColumn":13},{"ruleId":"141","severity":1,"message":"168","line":8,"column":15,"nodeType":"143","messageId":"144","endLine":8,"endColumn":19},{"ruleId":"141","severity":1,"message":"169","line":16,"column":11,"nodeType":"143","messageId":"144","endLine":16,"endColumn":18},{"ruleId":"141","severity":1,"message":"170","line":20,"column":13,"nodeType":"143","messageId":"144","endLine":20,"endColumn":23},{"ruleId":"141","severity":1,"message":"171","line":20,"column":25,"nodeType":"143","messageId":"144","endLine":20,"endColumn":38},{"ruleId":"172","severity":1,"message":"173","line":53,"column":18,"nodeType":"174","messageId":"175","endLine":53,"endColumn":41},{"ruleId":"141","severity":1,"message":"176","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":14},{"ruleId":"141","severity":1,"message":"177","line":3,"column":16,"nodeType":"143","messageId":"144","endLine":3,"endColumn":26},{"ruleId":"141","severity":1,"message":"178","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":13},{"ruleId":"179","severity":1,"message":"180","line":69,"column":19,"nodeType":"181","messageId":"182","endLine":72,"endColumn":21},{"ruleId":"141","severity":1,"message":"149","line":1,"column":26,"nodeType":"143","messageId":"144","endLine":1,"endColumn":35},{"ruleId":"141","severity":1,"message":"183","line":5,"column":16,"nodeType":"143","messageId":"144","endLine":5,"endColumn":23},{"ruleId":"141","severity":1,"message":"184","line":11,"column":10,"nodeType":"143","messageId":"144","endLine":11,"endColumn":20},{"ruleId":"141","severity":1,"message":"185","line":11,"column":22,"nodeType":"143","messageId":"144","endLine":11,"endColumn":35},{"ruleId":"141","severity":1,"message":"186","line":12,"column":11,"nodeType":"143","messageId":"144","endLine":12,"endColumn":25},{"ruleId":"141","severity":1,"message":"187","line":12,"column":27,"nodeType":"143","messageId":"144","endLine":12,"endColumn":35},{"ruleId":"141","severity":1,"message":"188","line":12,"column":37,"nodeType":"143","messageId":"144","endLine":12,"endColumn":52},{"ruleId":"141","severity":1,"message":"189","line":13,"column":8,"nodeType":"143","messageId":"144","endLine":13,"endColumn":13},{"ruleId":"153","severity":1,"message":"190","line":27,"column":6,"nodeType":"155","endLine":27,"endColumn":8,"suggestions":"191"},{"ruleId":"141","severity":1,"message":"192","line":29,"column":10,"nodeType":"143","messageId":"144","endLine":29,"endColumn":15},{"ruleId":"141","severity":1,"message":"193","line":42,"column":9,"nodeType":"143","messageId":"144","endLine":42,"endColumn":18},{"ruleId":"141","severity":1,"message":"194","line":12,"column":10,"nodeType":"143","messageId":"144","endLine":12,"endColumn":14},{"ruleId":"141","severity":1,"message":"195","line":2,"column":27,"nodeType":"143","messageId":"144","endLine":2,"endColumn":37},{"ruleId":"158","severity":1,"message":"159","line":62,"column":13,"nodeType":"160","endLine":63,"endColumn":60},{"ruleId":"141","severity":1,"message":"149","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},"no-unused-vars","'ChakraProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["196"],"no-negated-in-lhs",["197"],"'useEffect' is defined but never used.","'useReducer' is defined but never used.","'initialState' is defined but never used.","'Toast' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.accessToken'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'key' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'withRouter' is defined but never used.","'Interaction' is defined but never used.","'useDispatch' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'history' is assigned a value but never used.","'searchTerm' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'Icon' is defined but never used.","'useHistory' is defined but never used.","'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'setForm' is assigned a value but never used.","'errMessage' is assigned a value but never used.","'setErrMessage' is assigned a value but never used.","'changeNickname' is assigned a value but never used.","'password' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'likes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["199"],"'index' is assigned a value but never used.","'handleTab' is assigned a value but never used.","'user' is assigned a value but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [props.accessToken]",{"range":"204","text":"205"},"Update the dependencies array to be: [productId]",{"range":"206","text":"207"},[762,764],"[props.accessToken]",[822,824],"[productId]"]