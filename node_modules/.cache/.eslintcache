[{"/Users/seunghunhan/Desktop/project/noti-client/src/index.js":"1","/Users/seunghunhan/Desktop/project/noti-client/src/App.js":"2","/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/index.js":"3","/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/UserReducer.js":"4","/Users/seunghunhan/Desktop/project/noti-client/src/_Actions/Types.js":"5","/Users/seunghunhan/Desktop/project/noti-client/src/assets/state.js":"6","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/LandingPage.js":"7","/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/AlarmPage.js":"8","/Users/seunghunhan/Desktop/project/noti-client/src/components/UploadProductPage/UploadProdctPage.js":"9","/Users/seunghunhan/Desktop/project/noti-client/src/components/ModifiedPage/ModifiedPage.js":"10","/Users/seunghunhan/Desktop/project/noti-client/src/components/SignupPage/SignupPage.js":"11","/Users/seunghunhan/Desktop/project/noti-client/src/components/Navbar/Navbar.js":"12","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/DetailProductPage.js":"13","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/LoginPage.js":"14","/Users/seunghunhan/Desktop/project/noti-client/src/_Actions/UserActions.js":"15","/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/Validation.js":"16","/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/FileUpload.js":"17","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Comments.js":"18","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/SingleComment.js":"19","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/SearchBox.js":"20","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Toast.js":"21","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Likes.js":"22","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/Section/Card.js":"23","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Modal.js":"24","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/ModalButton.js":"25","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Product.js":"26","/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/Sections/AlarmItem.js":"27"},{"size":1552,"mtime":1618899506274,"results":"28","hashOfConfig":"29"},{"size":6806,"mtime":1618998543697,"results":"30","hashOfConfig":"29"},{"size":259,"mtime":1618817250092,"results":"31","hashOfConfig":"29"},{"size":790,"mtime":1618904889663,"results":"32","hashOfConfig":"29"},{"size":188,"mtime":1618817250091,"results":"33","hashOfConfig":"29"},{"size":943,"mtime":1618817250092,"results":"34","hashOfConfig":"29"},{"size":6481,"mtime":1619065873566,"results":"35","hashOfConfig":"29"},{"size":1998,"mtime":1619061812238,"results":"36","hashOfConfig":"29"},{"size":2575,"mtime":1618817250106,"results":"37","hashOfConfig":"29"},{"size":405,"mtime":1618817250104,"results":"38","hashOfConfig":"29"},{"size":4622,"mtime":1619054024541,"results":"39","hashOfConfig":"29"},{"size":3399,"mtime":1618817250105,"results":"40","hashOfConfig":"29"},{"size":3640,"mtime":1618992964304,"results":"41","hashOfConfig":"29"},{"size":4405,"mtime":1619060529381,"results":"42","hashOfConfig":"29"},{"size":2958,"mtime":1618817250091,"results":"43","hashOfConfig":"29"},{"size":772,"mtime":1618817250108,"results":"44","hashOfConfig":"29"},{"size":2084,"mtime":1618817250108,"results":"45","hashOfConfig":"29"},{"size":2041,"mtime":1618992948567,"results":"46","hashOfConfig":"29"},{"size":642,"mtime":1618992780304,"results":"47","hashOfConfig":"29"},{"size":1252,"mtime":1618994820120,"results":"48","hashOfConfig":"29"},{"size":750,"mtime":1618982403714,"results":"49","hashOfConfig":"29"},{"size":1288,"mtime":1618992954557,"results":"50","hashOfConfig":"29"},{"size":312,"mtime":1618916000307,"results":"51","hashOfConfig":"29"},{"size":2132,"mtime":1618977956789,"results":"52","hashOfConfig":"29"},{"size":552,"mtime":1618979070950,"results":"53","hashOfConfig":"29"},{"size":2732,"mtime":1619065968442,"results":"54","hashOfConfig":"29"},{"size":1140,"mtime":1619065702082,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"1yfoxc8",{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"59"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/seunghunhan/Desktop/project/noti-client/src/index.js",["121"],"// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Reducer from './_Reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    \n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        {/* <ChakraProvider> */}\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n        {/* </ChakraProvider> */}\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n",["122","123"],"/Users/seunghunhan/Desktop/project/noti-client/src/App.js",["124","125","126"],"// import React, { useState, createContext, useEffect, useReducer } from \"react\";\n// import { ChakraProvider } from \"@chakra-ui/react\"\n// import {\n//   BrowserRouter as Router, \n//   Route, \n//   Switch \n// } from 'react-router-dom';\n// import LoginPage from './components/LoginPage/LoginPage';\n// import SignupPage from './components/SignupPage/SignupPage';\n// import Navbar from './components/Navbar/Navbar';\n// import DetailProductPage from './components/DetailProductPage/DetailProductPage';\n// import ModifiedPage from './components/ModifiedPage/ModifiedPage';\n// import { initialState } from './assets/state';\n// import axios from \"axios\";\n// import UploadProdctPage from './components/UploadProductPage/UploadProdctPage';\n// import LandingPage from \"./components/LandingPage/LandingPage\";\n// import AlarmPage from \"./components/AlarmPage/AlarmPage\";\n\n// export const ProductsContext = createContext();\n// axios.defaults.withCredentials = true;\n\n// function App() {\n\n//   const [isLogin, setIsLogin] = useState(false);\n//   const [accessToken, setAccessToken] = useState(\"\");\n//   const loginHandler = (data) => {\n//     setIsLogin(true)\n//     issueAccessToken(data.data);\n//   };\n//   const issueAccessToken = (token) => {\n//    setAccessToken(token);\n//    console.log(\"토큰\", token)  \n//   }\n//   const handleLogout = () => {\n//     setIsLogin(false);\n//     setAccessToken(\"\");\n//   }\n\n//   return (\n    \n//     <Router>\n//      <ChakraProvider>\n//       <Navbar \n//         loginHandler={loginHandler}\n//         handleLogout={handleLogout}\n//         isLogin={isLogin}\n//         // setProducts={setProducts}\n//       />\n//       <Switch>\n//       {/* <Route exact path=\"/\" component={LandingPage} /> */}\n//       <Route exact path=\"/\">\n//       <LandingPage accessToken={accessToken} issueAccessToken={issueAccessToken} />\n//       </Route>\n//       {/* <Route exact path=\"/user/alarmpage\" component={AlarmPage} /> */}\n//       <Route exact path=\"/user/alarmpage\">\n//         <AlarmPage accessToken={accessToken} issueAccessToken={issueAccessToken} />\n//       </Route>\n//         <Route exact path=\"/login\">\n//           <LoginPage loginHandler={loginHandler} /> \n//         </Route>\n//         <Route exact path=\"/signup\" component={SignupPage} />\n//         <Route exact path=\"/product/upload\" component={UploadProdctPage} />\n//         {/* <Route path=\"/\" exact={true} component={LandingPage} /> */}\n//         <Route path=\"/modified\">\n//           <ModifiedPage accessToken={accessToken} issueAccessToken={issueAccessToken} />\n//         </Route> \n//         <Route \n//           path=\"/product/:productId\" \n//           render={(props) =>  <DetailProductPage accessToken={accessToken} issueAccessToken={issueAccessToken} {...props} />} />\n//       </Switch>\n//       </ChakraProvider>\n//     </Router>\n    \n//   );\n// }\n// export default App;\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport {\n  BrowserRouter as Router, \n  Route, \n  Switch \n} from 'react-router-dom';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport SignupPage from './components/SignupPage/SignupPage';\nimport Navbar from './components/Navbar/Navbar';\nimport DetailProductPage from './components/DetailProductPage/DetailProductPage';\nimport ModifiedPage from './components/ModifiedPage/ModifiedPage';\nimport UploadProdctPage from './components/UploadProductPage/UploadProdctPage';\nimport LandingPage from \"./components/LandingPage/LandingPage\";\nimport AlarmPage from \"./components/AlarmPage/AlarmPage\";\nimport axios from \"axios\";\n\n\naxios.defaults.withCredentials = true;\nfunction App() {\n  const [isLogin, setIsLogin] = useState(false);\n  const [accessToken, setAccessToken] = useState(\"\");\n  const loginHandler = (data) => {\n    setIsLogin(true)\n    issueAccessToken(data.data);\n  };\n  const issueAccessToken = (token) => {\n   setAccessToken(token);\n   console.log(\"토큰\", token)  \n  }\n  const handleLogout = () => {\n    setIsLogin(false);\n    setAccessToken(\"\");\n  }\n  const [productList, setProductList] = useState([])\n  const [alarmList, setAlarmList] = useState([])\n  const [leftDay, setLeftDay] = useState(\"\")\n  useEffect(() => {\n    axios\n      .get(\"https://projectb1.com:4000/products/filterProductList\")\n        .then(response => {\n         console.log(\"제품 정보\", response.data)\n          if(response.data.data) {\n            setProductList(response.data.data)\n          } else {\n            alert(\" 상품들을 가져오는데 실패 했습니다.\")\n          }\n        })\n    },[])\n  const addToCart = (productId) => {\n    console.log(\"리스트저장아이디\", productId)\n    const goToList = productList.filter((el) => el._id === productId)[0]\n    console.log(\"고투\", goToList)\n    const body = goToList\n    axios\n      .post('https://projectb1.com:4000/products/addMyLIst',\n      body,\n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n      })\n        .then((response) => {\n          if(response.status === 201){\n            alert(\"저장되었습니다\")\n          }\n      })\n      .catch((err) => {\n        if(err.response.status === 400){\n          alert(\"이미 리스트에 저장된 상품입니다\")\n        } else if(err.response.status === 404) {\n          alert(\"로그인이 필요합니다.\")\n        }\n      })\n  }\n  const updateSearchTerm = (newSearchTerm) => {\n    axios\n      .get(`https://projectb1.com:4000/products/searchProduct?searchTerm=${newSearchTerm}`,\n        {\n        headers: {\"Content-Type\": \"application/json\"}\n        })\n        .then(response => {\n          setProductList(response.data.data)\n    })  \n  }\nreturn (\n    <Router>\n     <ChakraProvider>\n      <Navbar \n        loginHandler={loginHandler}\n        handleLogout={handleLogout}\n        isLogin={isLogin}\n        alarmList={alarmList}\n      />\n      <Switch>\n      <Route exact path=\"/\">\n      <LandingPage \n        productList={productList}\n        addToCart={addToCart}\n        updateSearchTerm={updateSearchTerm}\n        />\n      </Route>\n      <Route exact path=\"/user/alarmpage\">\n        <AlarmPage \n          accessToken={accessToken} \n        />\n      </Route>\n        <Route exact path=\"/login\">\n          <LoginPage loginHandler={loginHandler} /> \n        </Route>\n        <Route exact path=\"/signup\" component={SignupPage} />\n        <Route exact path=\"/product/upload\" component={UploadProdctPage} />\n        <Route path=\"/modified\">\n          <ModifiedPage accessToken={accessToken} issueAccessToken={issueAccessToken} />\n        </Route> \n        <Route \n          path=\"/product/:productId\" \n          render={(props) =>  <DetailProductPage accessToken={accessToken} {...props} />} />\n      </Switch>\n      </ChakraProvider>\n    </Router>\n  );\n}\nexport default App;","/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/index.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/UserReducer.js",["127"],"import {\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM,\n} from '../_Actions/Types';\n\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case ADD_TO_CART:\n            return {\n                ...state,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload\n                }\n            }\n        case GET_CART_ITEMS:\n            return { ...state, cartDetail: action.payload }\n\n\n\n        case REMOVE_CART_ITEM:\n            return {\n                ...state, cartDetail: action.payload.productInfo,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart\n                }\n            }\n        default:\n            return state;\n    }\n}","/Users/seunghunhan/Desktop/project/noti-client/src/_Actions/Types.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/assets/state.js",[],["128","129"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/LandingPage.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/AlarmPage.js",["130","131"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/UploadProductPage/UploadProdctPage.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/ModifiedPage/ModifiedPage.js",["132","133","134","135","136","137","138"],"import React, {useState, useEffect} from 'react'\n\nexport default function ModifiedPage({ accessToken, issueAccessToken}) {\n  \n  const [form, setForm] = useState({\n    changeNickname: \"\",\n    password: \"\",\n    confirmPassword:\"\"\n  });\n\n  const [errMessage, setErrMessage] = useState(\"\");\n  const { changeNickname, password, confirmPassword} = form;\n  \n  \n  return (\n    <div>\n      MODI\n    </div>\n  )\n}\n\n\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/SignupPage/SignupPage.js",["139","140"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/Navbar/Navbar.js",["141","142","143","144"],"import React, { useState } from \"react\";\nimport { Icon, Badge } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../../Navbar.css\";\nimport axios from \"axios\";\n\nexport default function Navbar({ loginHandler, handleLogout, isLogin }){\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n\n  return(\n    <>\n      <nav className=\"navbar\">\n        <div className=\"nav-container\">\n          <Link \n            exact to=\"/\"\n            className=\"nav-logo\"\n            style={{textDecoration: \"none\", color: \"black\"}}>\n            NOTI\n          </Link>\n          {/* 테스트를 위한 알림 리스트 탭 입니다 */}\n          <Badge count={5}>\n          <Link exact to=\"/user/alarmpage\"\n            activeClassName=\"active\"\n            className=\"nav-links\"\n            onClick={handleClick}\n            >\n              알림\n          </Link>\n          </Badge>\n          {/* 테스트를 위한 알림 리스트 탭 입니다 */}         \n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\n             {isLogin ? (\n            <>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  알림리스트\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  회원정보수정\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link \n                  exact to=\"/\"\n                  onClick={handleLogout}\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={()=>{\n                    handleClick();\n                    handleLogout();\n                  }}\n                >\n                로그아웃\n                </Link>                  \n              </li> \n            </>\n             ) : (\n            <>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>              \n              <li className=\"nav-item\">\n                <Link exact to=\"/login\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  로그인\n                </Link>\n              </li>   \n            </>            \n            )}          \n          </ul>\n          <div className=\"nav-icon\" onClick={handleClick}>\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\n          </div> \n        </div>\n      </nav>\n    </>\n  );\n}\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/DetailProductPage.js",["145","146"],"import React, { useEffect, useState, useRef } from 'react'\nimport axios from 'axios';\nimport Comments from './Setions/Comments';\nimport '../../DetailProductPage.css';\n\nexport default function DetailProductPage(props) {\n  \nconsole.log('props가 뭐니', props)\nconst productId = props.match.params.productId\n  \nconst [product, setProduct] = useState([])\nconst [commentLists, setCommentLists] = useState([])\n\n\nconst [likes, setLikes] = useState(0)\n\n  useEffect(() => {\n    \n    axios\n      .get(`https://projectb1.com:4000/products/detailProduct?id=${productId}`)\n        .then(response => {\n          console.log(\"상세페이지\", response.data)\n          if(response.data.success){\n            console.log('res.data', response.data.data)\n            setProduct(response.data.data)\n            setCommentLists(response.data.data[0].comment)\n          } else {\n            alert('상세 정보 가져오기를 실패했습니다')\n          }\n        })\n\n      }, [])\n\n  const [index, setIndex] = useState(0)\n\n  const myRef = useRef(null)\n\n\n  const updateLikes = (newLike) => {\n    console.log(\"뉴라이크\", newLike)\n    setLikes(newLike)\n  }\n\n  const updateComment = (newComment) => {\n    setCommentLists(newComment)\n  }\n  \n  const handleTab = (index) =>{\n    setIndex(index)\n    const images = myRef.current.children;\n    for(let i=0; i<images.length; i++){\n      images[i].className = images[i].className.replace(\"active\", \"\");\n    }\n    images[index].className = \"active\";\n  }\n    \n  return (\n  <>\n  {console.log(\"상세제품\",product)}\n    <div className=\"detail-wrapper\">\n      {\n        product.map(item => (\n          <div className=\"details\" key={item.id}>\n            <div className=\"big-img\">\n              <img src={item.images[index]} alt=\"\" />\n            </div>\n            <div className=\"info\">\n              <div className=\"row\">\n                 <h2>{item.productName}</h2>\n                  <i class=\"far fa-bell\"></i>\n              </div>\n              <div className=\"row\">\n                <span>발매일</span> \n                <span style={{fontWeight:\"500\"}}>{item.releaseString}</span> \n              </div>\n              <div className=\"row\">\n                <span>발매가격</span>  \n                <span style={{fontWeight:\"500\"}}>KRW {item.price}</span>\n              </div>\n              <div className=\"thumb\" ref={myRef}>\n                {\n                  item.images.map((image, index) => (\n                    <img src={image} alt=\"\" key={index} \n                    onClick={()=> handleTab(index)}\n                    />\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </div>\n        {/* <div className=\"detail-wrapper\">\n      {\n        product.map(item => (\n          <div className=\"details\" key={item.id}>\n            <div className=\"info\">\n              <div className=\"row\">\n                 <h2>{item.productName}</h2>\n                  <i class=\"far fa-bell\"></i>\n              </div>\n              <div className=\"row\">\n                <span>발매일</span> \n                <span style={{fontWeight:\"500\"}}>{item.releaseString}</span> \n              </div>\n              <div className=\"row\">\n                <span>발매가격</span>  \n                <span style={{fontWeight:\"500\"}}>KRW {item.price}</span>\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </div> */}\n\n    <Comments \n      commentLists={commentLists} \n      productId={productId} \n      accessToken={props.accessToken}\n      updateComment={updateComment} \n      updateLikes={updateLikes}\n      />\n  </>   \n  )\n}\n\n\n\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/LoginPage.js",["147","148"],"/Users/seunghunhan/Desktop/project/noti-client/src/_Actions/UserActions.js",["149"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/Validation.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/FileUpload.js",["150"],"import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';  \n\naxios.defaults.withCredentials = true;\n\nexport default function FileUpload({ updateImages }) {\n\n  const [images, setImages] = useState([])\n \n  const dropHandler = (files) => {\n     \n    let formData = new FormData();\n    const config = {\n      header: {'Content-Type': 'multipart/form-data'}\n    }\n    formData.append(\"file\", files[0])\n \n    axios.post('https://localhost:4000/products/image', formData, config)\n      .then(response => {\n        if(response.data.success){\n           console.log(\"사진업로드\", response.data)\n           setImages([...images, response.data.filePath])\n           updateImages([...images, response.data.filePath])\n          }else {\n          alert('파일을 저장하는데 실패했습니다')\n        }\n      })\n  }\n\n\n\n  const deleteHandler = (image) => {\n    const currentIndex = images.indexOf(image)\n    let newImages = [...images]\n    newImages.splice(currentIndex, 1) \n    setImages(newImages)\n    updateImages(newImages)\n  }\n\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n      <Dropzone onDrop={dropHandler}>\n        {({getRootProps, getInputProps}) => (        \n            <div \n              style={{\n                width: 300, height: 240, border: '1px solid lightgray',\n                display: 'flex', alignItems:'center', justifyContent: 'center'\n              }}            \n              {...getRootProps()}>\n              <input {...getInputProps()} />\n              <i class=\"fas fa-plus\" style={{ fontSize: '3rem'}}></i>\n            </div>         \n        )}\n      </Dropzone>\n      \n      <div style={{display: 'flex', width: '350px', height:'240px', overflowX: 'scroll'}}>\n\n        {images.map((image, index) => (\n          <div onClick={()=> deleteHandler(image)} key={index}>\n            <img style={{ minWidth: '300px', width:'300px', height: '240px' }}\n                 src={`https://localhost:4000/${image}`} />\n          </div>\n        ))}\n\n      </div>\n    </div>\n  )\n}\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Comments.js",["151"],"import axios from 'axios';\nimport React, { useState, useContext } from 'react';\nimport SingleComment from './SingleComment';\naxios.defaults.withCredentials = true;\nexport default function Comments(props) {\n  const [comment, setComment] = useState(\"\")\n  const handleChange = (e) => {\n    setComment(e.target.value)\n  }\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if(comment === \"\") {\n      alert(\"내용을 입력해주세요\")\n      return\n    }\n  const body = {\n      comment: comment,\n      _id: props.productId\n    }\n   console.log(\"댓글 보내는값\", body)\n    axios\n      .post(\"https://projectb1.com:4000/products/writeComment\", \n      body,\n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}, \n      })\n      .then(response => {\n        console.log (\"포스트\", response.data)\n        if(response.data.success) {\n          console.log(response.data)\n          props.updateComment(response.data.data.comment)\n          setComment(\"\")        \n        } else {\n          alert('failed to save comment')\n        }\n       })\n      .catch((err) =>{\n        if(err.response.status === 401) {\n          alert(\"로그인이 필요합니다.\")\n      }\n    })\n  }\n  return (\n    <div>\n      <br />\n      <p> replies</p>\n      {/* root comment form */}\n      <form style={{ display: \"flex\" }} onSubmit={onSubmit}>\n        <textarea \n          style={{ width: \"100%\", borderRadius: \"5px\"}}\n          onChange={handleChange}\n          value={comment}\n          placeholder=\"코멘트를 작성해 주세요.\"  \n        />\n        <br />\n        <button style={{ width:\"20%\", height:\"52px\"}} onClick={onSubmit}>Submit</button>\n      </form>\n      {/* comment lists */}\n      {props.commentLists && props.commentLists.map((comment, index) => (\n          <SingleComment \n            key={index}\n            comment={comment} \n            productId={props.productId} \n            accessToken={props.accessToken}\n            updateLikes={props.updateLikes}\n         />\n      ))}\n    </div>\n  )\n}","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/SingleComment.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/SearchBox.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Toast.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Likes.js",["152"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\nexport default function Likes(props) {\n  const [likeCount, setLikeCount] = useState(props.goodCount);\n  const [action, setAction] = useState(props.state);\n  const onLikeClick = () => {\n    const body = {\n      id: props.productId,\n      comment_id: props.commentId\n    }\n    axios.patch(`https://projectb1.com:4000/products/good`, body, \n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}\n      })\n      .then(response => {\n        const comments = response.data.data.comment\n        const filteredLike = comments.filter((comment) => {\n          return comment._id === props.commentId\n       })    \n        setAction(filteredLike[0].state)\n        props.updateLikes(filteredLike[0].state)\n        setLikeCount(filteredLike[0].goodUsers.length)  \n      })\n      .catch((err) =>{\n        if(err.response.status === 401) {\n          alert(\"로그인이 필요합니다.\")\n      }\n    })    \n  }\n  return (\n    <div className=\"like-icon\">\n      <div onClick={onLikeClick}>\n        <i className= {action=== 0 ? \"far fa-heart\" : \"fas fa-heart\"}></i>\n        <span className=\"like-count\">{likeCount}</span>\n      </div>\n    </div>\n  )\n}","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/Section/Card.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Modal.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/ModalButton.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Product.js",["153","154","155"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/Sections/AlarmItem.js",["156","157","158"],{"ruleId":"159","severity":1,"message":"160","line":27,"column":10,"nodeType":"161","messageId":"162","endLine":27,"endColumn":24},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"159","severity":1,"message":"167","line":116,"column":21,"nodeType":"161","messageId":"162","endLine":116,"endColumn":33},{"ruleId":"159","severity":1,"message":"168","line":117,"column":10,"nodeType":"161","messageId":"162","endLine":117,"endColumn":17},{"ruleId":"159","severity":1,"message":"169","line":117,"column":19,"nodeType":"161","messageId":"162","endLine":117,"endColumn":29},{"ruleId":"170","severity":1,"message":"171","line":8,"column":1,"nodeType":"172","endLine":34,"endColumn":2},{"ruleId":"163","replacedBy":"173"},{"ruleId":"165","replacedBy":"174"},{"ruleId":"159","severity":1,"message":"175","line":3,"column":8,"nodeType":"161","messageId":"162","endLine":3,"endColumn":13},{"ruleId":"176","severity":1,"message":"177","line":20,"column":5,"nodeType":"178","endLine":20,"endColumn":7,"suggestions":"179"},{"ruleId":"159","severity":1,"message":"180","line":1,"column":26,"nodeType":"161","messageId":"162","endLine":1,"endColumn":35},{"ruleId":"159","severity":1,"message":"181","line":5,"column":16,"nodeType":"161","messageId":"162","endLine":5,"endColumn":23},{"ruleId":"159","severity":1,"message":"182","line":11,"column":10,"nodeType":"161","messageId":"162","endLine":11,"endColumn":20},{"ruleId":"159","severity":1,"message":"183","line":11,"column":22,"nodeType":"161","messageId":"162","endLine":11,"endColumn":35},{"ruleId":"159","severity":1,"message":"184","line":12,"column":11,"nodeType":"161","messageId":"162","endLine":12,"endColumn":25},{"ruleId":"159","severity":1,"message":"185","line":12,"column":27,"nodeType":"161","messageId":"162","endLine":12,"endColumn":35},{"ruleId":"159","severity":1,"message":"186","line":12,"column":37,"nodeType":"161","messageId":"162","endLine":12,"endColumn":52},{"ruleId":"159","severity":1,"message":"187","line":12,"column":3,"nodeType":"161","messageId":"162","endLine":12,"endColumn":7},{"ruleId":"159","severity":1,"message":"188","line":13,"column":3,"nodeType":"161","messageId":"162","endLine":13,"endColumn":7},{"ruleId":"159","severity":1,"message":"189","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":14},{"ruleId":"159","severity":1,"message":"190","line":3,"column":16,"nodeType":"161","messageId":"162","endLine":3,"endColumn":26},{"ruleId":"159","severity":1,"message":"191","line":5,"column":8,"nodeType":"161","messageId":"162","endLine":5,"endColumn":13},{"ruleId":"192","severity":1,"message":"193","line":69,"column":19,"nodeType":"194","messageId":"195","endLine":72,"endColumn":21},{"ruleId":"159","severity":1,"message":"196","line":15,"column":8,"nodeType":"161","messageId":"162","endLine":15,"endColumn":13},{"ruleId":"176","severity":1,"message":"197","line":32,"column":10,"nodeType":"178","endLine":32,"endColumn":12,"suggestions":"198"},{"ruleId":"159","severity":1,"message":"175","line":9,"column":8,"nodeType":"161","messageId":"162","endLine":9,"endColumn":13},{"ruleId":"159","severity":1,"message":"199","line":28,"column":10,"nodeType":"161","messageId":"162","endLine":28,"endColumn":14},{"ruleId":"159","severity":1,"message":"200","line":6,"column":5,"nodeType":"161","messageId":"162","endLine":6,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":62,"column":13,"nodeType":"203","endLine":63,"endColumn":60},{"ruleId":"159","severity":1,"message":"204","line":2,"column":27,"nodeType":"161","messageId":"162","endLine":2,"endColumn":37},{"ruleId":"159","severity":1,"message":"180","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"205","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":14},{"ruleId":"159","severity":1,"message":"206","line":18,"column":12,"nodeType":"161","messageId":"162","endLine":18,"endColumn":18},{"ruleId":"159","severity":1,"message":"207","line":18,"column":20,"nodeType":"161","messageId":"162","endLine":18,"endColumn":26},{"ruleId":"159","severity":1,"message":"180","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"208","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":27,"column":10,"nodeType":"203","endLine":27,"endColumn":67},"no-unused-vars","'ChakraProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["209"],"no-negated-in-lhs",["210"],"'setAlarmList' is assigned a value but never used.","'leftDay' is assigned a value but never used.","'setLeftDay' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["209"],["210"],"'Toast' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'accessToken'. Either include it or remove the dependency array.","ArrayExpression",["211"],"'useEffect' is defined but never used.","'setForm' is assigned a value but never used.","'errMessage' is assigned a value but never used.","'setErrMessage' is assigned a value but never used.","'changeNickname' is assigned a value but never used.","'password' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'Link' is defined but never used.","'Text' is defined but never used.","'Icon' is defined but never used.","'useHistory' is defined but never used.","'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'likes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["212"],"'user' is assigned a value but never used.","'ALARM_SETTING' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","'styled' is defined but never used.","'isOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'alarmList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [accessToken]",{"range":"217","text":"218"},"Update the dependencies array to be: [productId]",{"range":"219","text":"220"},[658,660],"[accessToken]",[917,919],"[productId]"]