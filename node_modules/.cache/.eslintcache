[{"/home/sungheeyun/Desktop/noti/noti-client/src/index.js":"1","/home/sungheeyun/Desktop/noti/noti-client/src/App.js":"2","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/index.js":"3","/home/sungheeyun/Desktop/noti/noti-client/src/components/UploadProductPage/UploadProdctPage.js":"4","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/LandingPage.js":"5","/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/AlarmPage.js":"6","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/UserReducer.js":"7","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Interaction.js":"8","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/FileUpload.js":"9","/home/sungheeyun/Desktop/noti/noti-client/src/_Actions/UserActions.js":"10","/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/Sections/UserCardBlock.js":"11","/home/sungheeyun/Desktop/noti/noti-client/src/_Actions/Types.js":"12","/home/sungheeyun/Desktop/noti/noti-client/src/assets/state.js":"13","/home/sungheeyun/Desktop/noti/noti-client/src/components/ModifiedPage/ModifiedPage.js":"14","/home/sungheeyun/Desktop/noti/noti-client/src/components/SignupPage/SignupPage.js":"15","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/DetailProductPage.js":"16","/home/sungheeyun/Desktop/noti/noti-client/src/components/Navbar/Navbar.js":"17","/home/sungheeyun/Desktop/noti/noti-client/src/components/LoginPage/LoginPage.js":"18","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Comments.js":"19","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/Validation.js":"20","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/SingleComment.js":"21","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/SearchBox.js":"22","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Datas.js":"23","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Button.js":"24","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Likes.js":"25"},{"size":1431,"mtime":1618806703801,"results":"26","hashOfConfig":"27"},{"size":2603,"mtime":1618841119589,"results":"28","hashOfConfig":"27"},{"size":259,"mtime":1618806703797,"results":"29","hashOfConfig":"27"},{"size":2575,"mtime":1618797845057,"results":"30","hashOfConfig":"27"},{"size":8559,"mtime":1618904327264,"results":"31","hashOfConfig":"27"},{"size":2875,"mtime":1618816874690,"results":"32","hashOfConfig":"27"},{"size":1560,"mtime":1618806703797,"results":"33","hashOfConfig":"27"},{"size":1047,"mtime":1618735927944,"results":"34","hashOfConfig":"27"},{"size":2084,"mtime":1618735927952,"results":"35","hashOfConfig":"27"},{"size":2958,"mtime":1618816415626,"results":"36","hashOfConfig":"27"},{"size":1528,"mtime":1618806703797,"results":"37","hashOfConfig":"27"},{"size":188,"mtime":1618735927808,"results":"38","hashOfConfig":"27"},{"size":943,"mtime":1618735927816,"results":"39","hashOfConfig":"27"},{"size":405,"mtime":1618735927944,"results":"40","hashOfConfig":"27"},{"size":3521,"mtime":1618735927948,"results":"41","hashOfConfig":"27"},{"size":3701,"mtime":1618899615016,"results":"42","hashOfConfig":"27"},{"size":3399,"mtime":1618810880728,"results":"43","hashOfConfig":"27"},{"size":3257,"mtime":1618735927944,"results":"44","hashOfConfig":"27"},{"size":2029,"mtime":1618899719509,"results":"45","hashOfConfig":"27"},{"size":772,"mtime":1618735927952,"results":"46","hashOfConfig":"27"},{"size":598,"mtime":1618899833233,"results":"47","hashOfConfig":"27"},{"size":1208,"mtime":1618755405501,"results":"48","hashOfConfig":"27"},{"size":1024,"mtime":1618735927944,"results":"49","hashOfConfig":"27"},{"size":1021,"mtime":1618806703801,"results":"50","hashOfConfig":"27"},{"size":5565,"mtime":1618898911620,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"14os7a9",{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},"/home/sungheeyun/Desktop/noti/noti-client/src/index.js",[],["116","117"],"/home/sungheeyun/Desktop/noti/noti-client/src/App.js",["118","119","120"],"import React, { useState, createContext, useEffect, useReducer } from \"react\";\nimport {\n  BrowserRouter as Router, \n  Route, \n  Switch \n} from 'react-router-dom';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport SignupPage from './components/SignupPage/SignupPage';\nimport Navbar from './components/Navbar/Navbar';\nimport DetailProductPage from './components/DetailProductPage/DetailProductPage';\nimport ModifiedPage from './components/ModifiedPage/ModifiedPage';\nimport { initialState } from './assets/state';\nimport axios from \"axios\";\nimport UploadProdctPage from './components/UploadProductPage/UploadProdctPage';\nimport LandingPage from \"./components/LandingPage/LandingPage\";\nimport AlarmPage from \"./components/AlarmPage/AlarmPage\";\n\nexport const ProductsContext = createContext();\naxios.defaults.withCredentials = true;\n\nfunction App() {\n    const [isLogin, setIsLogin] = useState(false);\n    const [accessToken, setAccessToken] = useState(\"\");\n   // const [products, setProducts] = useState([]);\n  const loginHandler = (data) => {\n    setIsLogin(true)\n    issueAccessToken(data.data);\n  };\n  const issueAccessToken = (token) => {\n   setAccessToken(token);\n   console.log(\"토큰\", token)  \n  }\n  const handleLogout = () => {\n    setIsLogin(false);\n    setAccessToken(\"\");\n  }\n\n  return (\n    <Router>\n      <Navbar \n        loginHandler={loginHandler}\n        handleLogout={handleLogout}\n        isLogin={isLogin}\n        // setProducts={setProducts}\n      />\n      <Switch>\n      {/* <Route exact path=\"/\" component={LandingPage} /> */}\n      <Route exact path=\"/\">\n      <LandingPage accessToken={accessToken} issueAccessToken={issueAccessToken} />\n      </Route>\n      {/* <Route exact path=\"/user/alarmpage\" component={AlarmPage} /> */}\n      <Route exact path=\"/user/alarmpage\">\n        <AlarmPage accessToken={accessToken} issueAccessToken={issueAccessToken} />\n      </Route>\n        <Route exact path=\"/login\">\n          <LoginPage loginHandler={loginHandler} /> \n        </Route>\n        <Route exact path=\"/signup\" component={SignupPage} />\n        <Route exact path=\"/product/upload\" component={UploadProdctPage} />\n        {/* <Route path=\"/\" exact={true} component={LandingPage} /> */}\n        <Route path=\"/modified\">\n          <ModifiedPage accessToken={accessToken} issueAccessToken={issueAccessToken} />\n        </Route> \n        <Route \n          path=\"/product/:productId\" \n          render={(props) =>  <DetailProductPage accessToken={accessToken} issueAccessToken={issueAccessToken} {...props} />} />\n      </Switch>\n    </Router>\n  );\n}\nexport default App;","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/index.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/UploadProductPage/UploadProdctPage.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/LandingPage.js",["121","122","123","124","125","126","127","128","129","130","131","132","133"],"/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/AlarmPage.js",["134","135","136","137","138"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\n// import { getCartItems, removeCartItem } from '../../_Actions/UserActions';\nimport UserCardBlock from './Sections/UserCardBlock';\nimport { Result } from 'antd';\nimport axios from \"axios\";\nimport Interaction from \"../LandingPage/Sections/Interaction\";\n\n\n// 프롭스로 받을게 없음\nfunction AlarmPage(props) {\n    console.log(\"상품 잘 겟하는지\", props)\n    // const dispatch = useDispatch(getCartItems);\n    \n\n    const [Total, setTotal] = useState(0)\n    const [ShowTotal, setShowTotal] = useState(false)\n    const [ShowSuccess, setShowSuccess] = useState(false)\n\n    // useEffect(() => {\n\n    // useEffect(() => {\n    //     let myList = []\n    //     //리덕스 User state안에 cart 안에 상품이 들어있는지 확인 \n    //     if (userData && user.userData.myList) {\n    //         if (userData.cart.length > 0) {\n    //             user.userData.cart.forEach(item => {\n    //                 cartItems.push(item.id)\n    //             })\n    //             dispatch(getCartItems(cartItems, user.userData.cart))\n    //                 .then(response => { calculateTotal(response.payload) })\n    //         }\n    //     }\n    // }, [user.userData])\n\n\n    useEffect(() => {\n        axios.get(\"https://localhost:4000/products/myList\",{\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}\n      })\n        .then(response => console.log(\"알림리스트\",response.data))\n    })\n\n    let calculateTotal = (cartDetail) => {\n        let total = 0;\n\n        cartDetail.map(item => {\n            total += parseInt(item.price, 10) * item.quantity\n        })\n\n        setTotal(total)\n        setShowTotal(true)\n\n    }\n\n\n    // let removeFromCart = (productId) => {\n\n    //     dispatch(removeCartItem(productId))\n    //         .then(response => {\n\n    //             if (response.payload.productInfo.length <= 0) {\n    //                 setShowTotal(false)\n    //             }\n\n    //         })\n\n    // }\n\n    return (\n        <div style={{ width: '85%', margin: '3rem auto' }}>\n            <h1>알림 리스트 페이지</h1>\n\n            <div>\n                {/* <UserCardBlock products={props.user.cartDetail} removeItem={removeFromCart} /> */}\n            </div>\n\n            {ShowTotal ?\n                <div style={{ marginTop: '3rem' }}>\n                    <h2>Total Amount: ${Total}</h2>\n                </div>\n                : ShowSuccess ?\n                    <Result\n                        status=\"success\"\n                        title=\"Successfully Purchased Items\"\n                    />\n                    :\n                    <>\n                        <br />\n                        <Interaction description={false} />\n                    </>\n            }\n\n        </div>\n    )\n}\n\nexport default AlarmPage\n","/home/sungheeyun/Desktop/noti/noti-client/src/_Reducers/UserReducer.js",["139","140"],"import {\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM,\n    ALARM_SETTING\n} from '../_Actions/Types';\n\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case ADD_TO_CART:\n            return {\n                ...state,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload\n                }\n            }\n        case GET_CART_ITEMS:\n            return { ...state, cartDetail: action.payload }\n\n\n\n        case REMOVE_CART_ITEM:\n            return {\n                ...state, cartDetail: action.payload.productInfo,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart\n                }\n            }\n        default:\n            return state;\n    }\n}\n\n\n// const initialState = {\n//     products: []\n//   };\n\n\n// export const cart = (state = initialState, action) => {\n//     switch (action.type) {\n//       case ADD_TO_CART:\n//         if (state.products.find(p => p.id === action.product.id)) {\n//           return state;\n//         }\n  \n//         return {\n//           ...state,\n//           products: state.products.concat(action.product)\n//         };\n//       case REMOVE_CART_ITEM:\n//         if (state.products.find(p => p.id === action.product.id)) {\n//           return {\n//             ...state,\n//             products: state.products.filter(p => p.id !== action.product.id)\n//           };\n//         }\n  \n//         return state\n//       default:\n//         return state;\n//     }\n//   };","/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Interaction.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/FileUpload.js",["141"],"import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';  \n\naxios.defaults.withCredentials = true;\n\nexport default function FileUpload({ updateImages }) {\n\n  const [images, setImages] = useState([])\n \n  const dropHandler = (files) => {\n     \n    let formData = new FormData();\n    const config = {\n      header: {'Content-Type': 'multipart/form-data'}\n    }\n    formData.append(\"file\", files[0])\n \n    axios.post('https://localhost:4000/products/image', formData, config)\n      .then(response => {\n        if(response.data.success){\n           console.log(\"사진업로드\", response.data)\n           setImages([...images, response.data.filePath])\n           updateImages([...images, response.data.filePath])\n          }else {\n          alert('파일을 저장하는데 실패했습니다')\n        }\n      })\n  }\n\n\n\n  const deleteHandler = (image) => {\n    const currentIndex = images.indexOf(image)\n    let newImages = [...images]\n    newImages.splice(currentIndex, 1) \n    setImages(newImages)\n    updateImages(newImages)\n  }\n\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n      <Dropzone onDrop={dropHandler}>\n        {({getRootProps, getInputProps}) => (        \n            <div \n              style={{\n                width: 300, height: 240, border: '1px solid lightgray',\n                display: 'flex', alignItems:'center', justifyContent: 'center'\n              }}            \n              {...getRootProps()}>\n              <input {...getInputProps()} />\n              <i class=\"fas fa-plus\" style={{ fontSize: '3rem'}}></i>\n            </div>         \n        )}\n      </Dropzone>\n      \n      <div style={{display: 'flex', width: '350px', height:'240px', overflowX: 'scroll'}}>\n\n        {images.map((image, index) => (\n          <div onClick={()=> deleteHandler(image)} key={index}>\n            <img style={{ minWidth: '300px', width:'300px', height: '240px' }}\n                 src={`https://localhost:4000/${image}`} />\n          </div>\n        ))}\n\n      </div>\n    </div>\n  )\n}\n","/home/sungheeyun/Desktop/noti/noti-client/src/_Actions/UserActions.js",["142","143","144","145"],"/home/sungheeyun/Desktop/noti/noti-client/src/components/AlarmPage/Sections/UserCardBlock.js",["146"],"import React from 'react'\nimport \"./UserCardBlock.css\"\n\n\nfunction UserCardBlock(props) {\n\n    const renderCartImage = (images) => {\n        if (images.length > 0) {\n            let image = images[0]\n            // return `https://localhost:4000/${image}`\n            return `https://projectb1.com:4000/${images}`\n            \n        }\n    }\n\n    const renderItems = () => (\n        props.products && props.products.map((product, index) => (\n            <tr key={index}>\n                <td>\n                    <img style={{ width: '70px' }} alt=\"product\"\n                        src={renderCartImage(product.images)} />\n                </td>\n                <td>\n                    {product.quantity} EA\n                </td>\n                <td>\n                    $ {product.price}\n                </td>\n                <td>\n                    <button onClick={() => props.removeItem(product._id)}>\n                        Remove \n                    </button>\n                </td>\n            </tr>\n        ))\n    )\n\n\n    return (\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Product Image</th>\n                        <th>Product Quantity</th>\n                        <th>Product Price</th>\n                        <th>Remove from Cart</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {renderItems()}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default UserCardBlock\n","/home/sungheeyun/Desktop/noti/noti-client/src/_Actions/Types.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/assets/state.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/ModifiedPage/ModifiedPage.js",["147","148","149","150","151","152","153"],"import React, {useState, useEffect} from 'react'\n\nexport default function ModifiedPage({ accessToken, issueAccessToken}) {\n  \n  const [form, setForm] = useState({\n    changeNickname: \"\",\n    password: \"\",\n    confirmPassword:\"\"\n  });\n\n  const [errMessage, setErrMessage] = useState(\"\");\n  const { changeNickname, password, confirmPassword} = form;\n  \n  \n  return (\n    <div>\n      MODI\n    </div>\n  )\n}\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/SignupPage/SignupPage.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/DetailProductPage.js",["154","155","156","157"],"import React, { useEffect, useState, useRef } from 'react'\nimport axios from 'axios';\nimport Comments from './Setions/Comments';\nimport '../../DetailProductPage.css';\n\nexport default function DetailProductPage(props) {\n  \nconsole.log('props가 뭐니', props)\nconst productId = props.match.params.productId\n  \nconst [product, setProduct] = useState([])\nconst [commentLists, setCommentLists] = useState([])\n\n\nconst [likes, setLikes] = useState(0)\n\n  useEffect(() => {\n    \n    axios\n      .get(`https://localhost:4000/products/detailProduct?id=${productId}`)\n        .then(response => {\n          console.log(\"상세페이지\", response.data)\n          if(response.data.success){\n            console.log('res.data', response.data.data)\n            setProduct(response.data.data)\n            setCommentLists(response.data.data[0].comment)\n          } else {\n            alert('상세 정보 가져오기를 실패했습니다')\n          }\n        })\n\n      }, [])\n\n  const [index, setIndex] = useState(0)\n\n  const myRef = useRef(null)\n\n\n  const updateLikes = (newLike) => {\n    console.log(\"뉴라이크\", newLike)\n    setLikes(newLike)\n  }\n\n  const updateComment = (newComment) => {\n    console.log(\"뉴코멘트\", newComment)\n    setCommentLists(commentLists.concat(newComment))\n  }\n  \n  const handleTab = (index) =>{\n    setIndex(index)\n    const images = myRef.current.children;\n    for(let i=0; i<images.length; i++){\n      images[i].className = images[i].className.replace(\"active\", \"\");\n    }\n    images[index].className = \"active\";\n  }\n    \n  return (\n  <>\n  {console.log(\"상세제품\",product)}\n    {/* <div className=\"detail-wrapper\">\n      {\n        product.map(item => (\n          <div className=\"details\" key={item.id}>\n            <div className=\"big-img\">\n              <img src={item.images[index]} alt=\"\" />\n            </div>\n            <div className=\"info\">\n              <div className=\"row\">\n                 <h2>{item.productName}</h2>\n                  <i class=\"far fa-bell\"></i>\n              </div>\n              <div className=\"row\">\n                <span>발매일</span> \n                <span style={{fontWeight:\"500\"}}>{item.releaseString}</span> \n              </div>\n              <div className=\"row\">\n                <span>발매가격</span>  \n                <span style={{fontWeight:\"500\"}}>KRW {item.price}</span>\n              </div>\n              <div className=\"thumb\" ref={myRef}>\n                {\n                  item.images.map((image, index) => (\n                    <img src={image} alt=\"\" key={index} \n                    onClick={()=> handleTab(index)}\n                    />\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </div> */}\n        <div className=\"detail-wrapper\">\n      {\n        product.map(item => (\n          <div className=\"details\" key={item.id}>\n            <div className=\"info\">\n              <div className=\"row\">\n                 <h2>{item.productName}</h2>\n                  <i class=\"far fa-bell\"></i>\n              </div>\n              <div className=\"row\">\n                <span>발매일</span> \n                <span style={{fontWeight:\"500\"}}>{item.releaseString}</span> \n              </div>\n              <div className=\"row\">\n                <span>발매가격</span>  \n                <span style={{fontWeight:\"500\"}}>KRW {item.price}</span>\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </div>\n\n    <Comments \n      commentLists={commentLists} \n      productId={productId} \n      accessToken={props.accessToken}\n      updateComment={updateComment} \n      updateLikes={updateLikes}\n      />\n  </>   \n  )\n}\n\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/Navbar/Navbar.js",["158","159","160","161"],"import React, { useState } from \"react\";\nimport { Icon, Badge } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../../Navbar.css\";\nimport axios from \"axios\";\n\nexport default function Navbar({ loginHandler, handleLogout, isLogin }){\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n\n  return(\n    <>\n      <nav className=\"navbar\">\n        <div className=\"nav-container\">\n          <Link \n            exact to=\"/\"\n            className=\"nav-logo\"\n            style={{textDecoration: \"none\", color: \"black\"}}>\n            NOTI\n          </Link>\n          {/* 테스트를 위한 알림 리스트 탭 입니다 */}\n          <Badge count={5}>\n          <Link exact to=\"/user/alarmpage\"\n            activeClassName=\"active\"\n            className=\"nav-links\"\n            onClick={handleClick}\n            >\n              알림\n          </Link>\n          </Badge>\n          {/* 테스트를 위한 알림 리스트 탭 입니다 */}         \n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\n             {isLogin ? (\n            <>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  알림리스트\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  회원정보수정\n                </Link>\n              </li>           \n              <li className=\"nav-item\">\n                <Link \n                  exact to=\"/\"\n                  onClick={handleLogout}\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={()=>{\n                    handleClick();\n                    handleLogout();\n                  }}\n                >\n                로그아웃\n                </Link>                  \n              </li> \n            </>\n             ) : (\n            <>\n              <li className=\"nav-item\">\n                <Link exact to=\"/\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  발매정보리스트\n                </Link>\n              </li>              \n              <li className=\"nav-item\">\n                <Link exact to=\"/login\"\n                  activeClassName=\"active\"\n                  className=\"nav-links\"\n                  onClick={handleClick}\n                >\n                  로그인\n                </Link>\n              </li>   \n            </>            \n            )}          \n          </ul>\n          <div className=\"nav-icon\" onClick={handleClick}>\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\n          </div> \n        </div>\n      </nav>\n    </>\n  );\n}\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/LoginPage/LoginPage.js",["162"],"import React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport GoogleLogin from \"react-google-login\";\nimport axios from 'axios';\nimport swal from \"sweetalert\";\n\naxios.defaults.withCredentials = true;\n \nexport default function LoginPage({ loginHandler }) {\n  \n  const [details, setDetails] = useState({email: \"\", password: \"\"})\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n\n  const submitHandler = (e) =>{\n    e.preventDefault();\n \n    const { email, password } = details;\n\n    if(!email || !password){\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n\n    axios.post(\"https://localhost:4000/users/login\", \n    {\n      email,\n      password\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n    .then(res => {\n      history.push(\"/\");\n      loginHandler(res.data)\n    })\n    .catch(err => {\n      console.log(err.message);\n      alert(err.message)\n    })\n  }\n\n  const handleLoginSuccess = (response) => {\n    console.log(\"구글로그인\", response.profileObj)\n    if (response.profileObj) {\n      axios\n        .post(\n          \"https://localhost:4000/users/socialLogin\",\n          {\n            email: response.profileObj.email,\n            nickName: response.profileObj.name,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n        .then((res) => {\n          setUser(response.profileObj);\n          history.push(\"/\");\n        });\n    }\n  };\n\n   const handleLoginFailure = (error) => {\n    console.log(error);\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Log in</h2>\n      <form onSubmit={submitHandler}>\n        <div className=\"email-form\">\n          📧 이메일\n          <input \n            className=\"input\"\n            type=\"text\"\n            placeholder=\"이메일을 입력해주세요.\"\n            value={details.email}\n            onChange={(e) => setDetails({...details, email: e.target.value})}\n          />\n        </div>\n        <div className=\"password-form\">\n          🔐 비밀번호\n          <input \n            className=\"input\"\n            type=\"password\"\n            placeholder=\"비밀번호를 입력해주세요.\"\n            value={details.password}\n            onChange={(e) => setDetails({...details, password: e.target.value})}\n          />\n        </div>\n        <div>\n          <button className=\"btn-signin\" onClick={submitHandler}>\n          이메일로 시작하기\n          </button>\n        </div>\n       </form>   \n       <div>\n          <GoogleLogin\n            className=\"btn-google\"\n            clientId=\"996092186048-291mg21lf890quda77fdgrqn11il9c0h.apps.googleusercontent.com\"\n            buttonText=\"구글 계정으로 시작하기\"\n            onSuccess={handleLoginSuccess}\n            onFailure={handleLoginFailure}\n            cookiePolicy={\"single_host_origin\"}\n          />\n        </div> \n        <div className=\"link-singup\">\n          <span>아직 계정이 없으신가요?</span>\n          <Link to=\"/signup\" style={{color:\"black\", textDecoration:\"none\"}}>\n          👉 회원가입하기\n          </Link>          \n        </div>    \n    </div>\n  )\n};\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Comments.js",["163"],"import axios from 'axios';\nimport React, { useState, useContext } from 'react';\nimport SingleComment from './SingleComment';\n\naxios.defaults.withCredentials = true;\n\n\nexport default function Comments(props) {\n  const [comment, setComment] = useState(\"\")\n   \n  const handleChange = (e) => {\n    setComment(e.target.value)\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if(comment === \"\") {\n      alert(\"내용을 입력해주세요\")\n      return\n    }\n\n  const body = {\n      comment: comment,\n      _id: props.productId\n    }\n\n   console.log(\"댓글 보내는값\", body)\n\n    axios\n      .post(\"https://localhost:4000/products/writeComment\", \n      body,\n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}, \n      })\n      .then(response => {\n        console.log (\"포스트\", response.data)\n        if(response.data.success) {\n          props.updateComment(response.data.data)\n          setComment(\"\")        \n        } else {\n          alert('failed to save comment')\n        }\n       })\n      .catch((err) =>{\n        if(err.response.status === 401) {\n          alert(\"로그인이 필요합니다.\")\n      }\n    })       \n  }\n\n  return (\n    <div>\n      <br />\n      <p> replies</p>\n      {/* root comment form */}\n      <form style={{ display: \"flex\" }} onSubmit={onSubmit}>\n        <textarea \n          style={{ width: \"100%\", borderRadius: \"5px\"}}\n          onChange={handleChange}\n          value={comment}\n          placeholder=\"코멘트를 작성해 주세요.\"  \n        />\n        <br />\n        <button style={{ width:\"20%\", height:\"52px\"}} onClick={onSubmit}>Submit</button>\n\n      </form>\n      {/* comment lists */}\n      {props.commentLists && props.commentLists.map((comment, index) => (\n          <SingleComment \n            key={index}\n            comment={comment} \n            productId={props.productId} \n            accessToken={props.accessToken}\n            updateLikes={props.updateLikes}\n         />\n      ))}\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/home/sungheeyun/Desktop/noti/noti-client/src/components/utils/Validation.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/SingleComment.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/SearchBox.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Datas.js",[],"/home/sungheeyun/Desktop/noti/noti-client/src/components/LandingPage/Sections/Button.js",["164"],"import React from 'react'\nimport { addToCart } from '../../../_Actions/UserActions';\nimport { useDispatch } from 'react-redux';\nimport { Button, Descriptions } from 'antd';\n\nexport default function AlarmListInfo(props) {\n\n    const dispatch = useDispatch();\n\n    const clickHandler = () => {\n        //필요한 정보를 Cart 필드에다가 넣어 준다.\n        dispatch(addToCart())\n    }\n \n    return (\n        <div>\n            {/* <Descriptions title=\"AlarmListInfo\">\n                <Descriptions.Item label=\"Productname\">{props.detail.productName}</Descriptions.Item>\n                <Descriptions.Item label=\"Date\">{props.data.releaseString}</Descriptions.Item>\n            </Descriptions> */}\n\n            <br />\n            <br />\n            <br />\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Button size=\"large\" shape=\"round\" type=\"danger\" onClick={clickHandler}>\n                    저장\n                </Button>\n            </div>\n\n\n        </div>\n    )\n}\n",["165","166"],"/home/sungheeyun/Desktop/noti/noti-client/src/components/DetailProductPage/Setions/Likes.js",["167"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\n\naxios.defaults.withCredentials = true;\n\nexport default function Likes(props) {\n\n  const [likeCount, setLikeCount] = useState(0);\n  const [action, setAction] = useState(0);\n\n  const onLikeClick = () => {\n\n    console.log(\"라이크클릭됨\")\n    const body = {\n      id: props.productId,\n      comment_id: props.commentId\n    }\n\n    axios.patch(`https://localhost:4000/products/good`, body, \n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}\n      })\n      .then(response => {\n        console.log(\"라이크\", response.data)\n        const comments = response.data.data.comment\n        const filteredLike = comments.filter((comment) => {\n          return comment._id === props.commentId\n       })    \n        setAction(filteredLike[0].state)\n        props.updateLikes(filteredLike[0].state)\n        setLikeCount(filteredLike[0].goodUsers.length)  \n      })\n      .catch((err) =>{\n        if(err.response.status === 401) {\n          alert(\"로그인이 필요합니다.\")\n      }\n    })    \n  }\n\n//   useEffect(() => {\n//     const body = {\n//     id: props.productId,\n//       comment_id: props.commentId\n//     }\n// })\n\n\n  return (\n    <div className=\"like-icon\">\n      {console.log(\"액션스테이트\", action)}\n      <div onClick={onLikeClick}>\n        <i className= {action === 0 ? \"far fa-heart\" : \"fas fa-heart\"}></i>\n        <span className=\"like-count\">{likeCount}</span>\n      </div>\n    </div>\n  )\n}\n\n\n\n\n\n// import React, { useEffect, useState } from 'react'\n// import axios from 'axios';\n\n// axios.defaults.withCredentials = true;\n\n// export default function Likes(props) {\n\n//   const [likeCount, setLikeCount] = useState(0);\n//   const [action, setAction] = useState(0);\n\n//   const onLikeClick = () => {\n\n//     console.log(\"라이크클릭됨\")\n//     const body = {\n//       id: props.productId,\n//       comment_id: props.commentId\n//     }\n\n\n\n    // axios.patch(`https://localhost:4000/products/good`, body, {\n    //   headers: {\"Content-Type\": \"application/json\", \"okCome\": props.accessToken}\n    // })\n    // .then(response => {\n    //   const comments = response.data.data.comment;\n    //   const filteredLike = comments.filter((comment) => {\n    //     return comment._id === props.commentId\n    //   })\n    //   if(action === 0)\n    // })\n\n \n    // if(action === 0)\n\n\n\n\n\n    // if(action === 0) {\n    //   axios.patch(`https://localhost:4000/products/good`, \n    //   body, \n    //   {\n    //     headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}\n    //   })\n    //   .then(response => {\n    //     console.log(\"라이크\", response.data)\n    //     const comments = response.data.data.comment\n    //     const filteredLike = comments.filter((comment) => {\n    //       return comment._id === props.commentId\n    //    })\n    //    if(filteredLike[0].state === 1){\n    //      setAction(1);\n        //  setLikeCount((prev) => prev + 1);\n      //  } else {\n      //    alert(response.data.err)\n      //  }\n    //   })\n    //   .catch(err => {\n    //     if(err.status === 401) {\n    //     alert(\"로그인이 필요합니다\")\n    //     }\n    //   })  \n    // } else if (action === 1) {\n    //   axios.patch(`https://localhost:4000/products/good`, \n    //   body, \n    //   {\n    //     headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}\n    //   })\n    //   .then(response => {\n    //     console.log(\"라이크\", response.data)\n    //     const comments = response.data.data.comment\n    //     const filteredLike = comments.filter((comment) => {\n    //       return comment._id === props.commentId\n    //    })      \n    //   if(filteredLike[0].state === 0){\n    //     setAction(0)\n        // setLikeCount((prev) => prev - 1);\n  //     }else{\n  //       alert(response.data.err)\n  //     }\n  //   })\n  //   .catch((err) =>{\n  //       if(err.response.status === 401) {\n  //         alert(\"로그인이 필요합니다.\")\n  //     }\n  //   })    \n  //   }\n  // }\n\n    // if (action === 0){\n      \n    //    axios.patch(`https://localhost:4000/products/good`, body, \n    //   {\n    //     headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}\n    //   })\n    //   .then(response => {\n    //     console.log(\"라이크\", response.data)\n    //     const comments = response.data.data.comment\n    //     const filteredLike = comments.filter((comment) => {\n    //       return comment._id === props.commentId\n    //    })\n       \n    // }\n\n    // axios.patch(`https://localhost:4000/products/good`, body, \n    //   {\n    //     headers: { \"Content-Type\": \"application/json\" , \"okCome\": props.accessToken}\n    //   })\n    //   .then(response => {\n    //     console.log(\"라이크\", response.data)\n    //     const comments = response.data.data.comment\n    //     const filteredLike = comments.filter((comment) => {\n    //       return comment._id === props.commentId\n    //    })    \n    //     setAction(filteredLike[0].state)\n    //     setLikeCount(filteredLike[0].goodUsers.length)  \n        \n    //   })\n  //     .catch((err) =>{\n  //       if(err.response.status === 401) {\n  //         alert(\"로그인이 필요합니다.\")\n  //     }\n  //   })    \n  // }\n\n\n\n\n\n\n  \n//   return (\n//     <div className=\"like-icon\">\n//       <div onClick={onLikeClick}>\n//         <i className= {action === 0 ? \"far fa-heart\" : \"fas fa-heart\"}></i>\n//         <span className=\"like-count\">{likeCount}</span>\n//       </div>\n//     </div>\n//   )\n// }\n\n\n\n\n\n\n\n",{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":1,"column":42,"nodeType":"174","messageId":"175","endLine":1,"endColumn":51},{"ruleId":"172","severity":1,"message":"176","line":1,"column":53,"nodeType":"174","messageId":"175","endLine":1,"endColumn":63},{"ruleId":"172","severity":1,"message":"177","line":12,"column":10,"nodeType":"174","messageId":"175","endLine":12,"endColumn":22},{"ruleId":"172","severity":1,"message":"178","line":124,"column":28,"nodeType":"174","messageId":"175","endLine":124,"endColumn":38},{"ruleId":"172","severity":1,"message":"179","line":127,"column":10,"nodeType":"174","messageId":"175","endLine":127,"endColumn":21},{"ruleId":"172","severity":1,"message":"180","line":128,"column":10,"nodeType":"174","messageId":"175","endLine":128,"endColumn":16},{"ruleId":"172","severity":1,"message":"181","line":130,"column":10,"nodeType":"174","messageId":"175","endLine":130,"endColumn":14},{"ruleId":"172","severity":1,"message":"182","line":130,"column":32,"nodeType":"174","messageId":"175","endLine":130,"endColumn":40},{"ruleId":"172","severity":1,"message":"183","line":131,"column":8,"nodeType":"174","messageId":"175","endLine":131,"endColumn":12},{"ruleId":"172","severity":1,"message":"184","line":139,"column":10,"nodeType":"174","messageId":"175","endLine":139,"endColumn":20},{"ruleId":"172","severity":1,"message":"185","line":139,"column":22,"nodeType":"174","messageId":"175","endLine":139,"endColumn":27},{"ruleId":"172","severity":1,"message":"186","line":145,"column":11,"nodeType":"174","messageId":"175","endLine":145,"endColumn":18},{"ruleId":"172","severity":1,"message":"187","line":149,"column":13,"nodeType":"174","messageId":"175","endLine":149,"endColumn":23},{"ruleId":"172","severity":1,"message":"188","line":149,"column":25,"nodeType":"174","messageId":"175","endLine":149,"endColumn":38},{"ruleId":"189","severity":1,"message":"190","line":209,"column":20,"nodeType":"191","endLine":209,"endColumn":80},{"ruleId":"189","severity":1,"message":"190","line":239,"column":17,"nodeType":"191","endLine":239,"endColumn":22},{"ruleId":"172","severity":1,"message":"179","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":21},{"ruleId":"172","severity":1,"message":"192","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":21},{"ruleId":"172","severity":1,"message":"193","line":18,"column":25,"nodeType":"174","messageId":"175","endLine":18,"endColumn":39},{"ruleId":"172","severity":1,"message":"194","line":44,"column":9,"nodeType":"174","messageId":"175","endLine":44,"endColumn":23},{"ruleId":"195","severity":1,"message":"196","line":47,"column":29,"nodeType":"197","messageId":"198","endLine":47,"endColumn":31},{"ruleId":"172","severity":1,"message":"199","line":5,"column":5,"nodeType":"174","messageId":"175","endLine":5,"endColumn":18},{"ruleId":"200","severity":1,"message":"201","line":9,"column":1,"nodeType":"202","endLine":35,"endColumn":2},{"ruleId":"189","severity":1,"message":"190","line":62,"column":13,"nodeType":"191","endLine":63,"endColumn":60},{"ruleId":"172","severity":1,"message":"203","line":3,"column":5,"nodeType":"174","messageId":"175","endLine":3,"endColumn":16},{"ruleId":"172","severity":1,"message":"204","line":4,"column":5,"nodeType":"174","messageId":"175","endLine":4,"endColumn":19},{"ruleId":"172","severity":1,"message":"199","line":6,"column":5,"nodeType":"174","messageId":"175","endLine":6,"endColumn":18},{"ruleId":"172","severity":1,"message":"205","line":9,"column":7,"nodeType":"174","messageId":"175","endLine":9,"endColumn":18},{"ruleId":"172","severity":1,"message":"206","line":9,"column":17,"nodeType":"174","messageId":"175","endLine":9,"endColumn":22},{"ruleId":"172","severity":1,"message":"173","line":1,"column":26,"nodeType":"174","messageId":"175","endLine":1,"endColumn":35},{"ruleId":"172","severity":1,"message":"207","line":5,"column":16,"nodeType":"174","messageId":"175","endLine":5,"endColumn":23},{"ruleId":"172","severity":1,"message":"208","line":11,"column":10,"nodeType":"174","messageId":"175","endLine":11,"endColumn":20},{"ruleId":"172","severity":1,"message":"209","line":11,"column":22,"nodeType":"174","messageId":"175","endLine":11,"endColumn":35},{"ruleId":"172","severity":1,"message":"210","line":12,"column":11,"nodeType":"174","messageId":"175","endLine":12,"endColumn":25},{"ruleId":"172","severity":1,"message":"211","line":12,"column":27,"nodeType":"174","messageId":"175","endLine":12,"endColumn":35},{"ruleId":"172","severity":1,"message":"212","line":12,"column":37,"nodeType":"174","messageId":"175","endLine":12,"endColumn":52},{"ruleId":"172","severity":1,"message":"213","line":15,"column":8,"nodeType":"174","messageId":"175","endLine":15,"endColumn":13},{"ruleId":"214","severity":1,"message":"215","line":32,"column":10,"nodeType":"216","endLine":32,"endColumn":12,"suggestions":"217"},{"ruleId":"172","severity":1,"message":"218","line":34,"column":10,"nodeType":"174","messageId":"175","endLine":34,"endColumn":15},{"ruleId":"172","severity":1,"message":"219","line":49,"column":9,"nodeType":"174","messageId":"175","endLine":49,"endColumn":18},{"ruleId":"172","severity":1,"message":"181","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":14},{"ruleId":"172","severity":1,"message":"220","line":3,"column":16,"nodeType":"174","messageId":"175","endLine":3,"endColumn":26},{"ruleId":"172","severity":1,"message":"221","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":13},{"ruleId":"222","severity":1,"message":"223","line":69,"column":19,"nodeType":"224","messageId":"225","endLine":72,"endColumn":21},{"ruleId":"172","severity":1,"message":"226","line":12,"column":10,"nodeType":"174","messageId":"175","endLine":12,"endColumn":14},{"ruleId":"172","severity":1,"message":"227","line":2,"column":27,"nodeType":"174","messageId":"175","endLine":2,"endColumn":37},{"ruleId":"172","severity":1,"message":"228","line":4,"column":18,"nodeType":"174","messageId":"175","endLine":4,"endColumn":30},{"ruleId":"168","replacedBy":"229"},{"ruleId":"170","replacedBy":"230"},{"ruleId":"172","severity":1,"message":"173","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'initialState' is defined but never used.","'withRouter' is defined but never used.","'useDispatch' is defined but never used.","'FaCode' is defined but never used.","'Icon' is defined but never used.","'Carousel' is defined but never used.","'Meta' is defined but never used.","'continents' is defined but never used.","'price' is defined but never used.","'history' is assigned a value but never used.","'searchTerm' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'UserCardBlock' is defined but never used.","'setShowSuccess' is assigned a value but never used.","'calculateTotal' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ALARM_SETTING' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'ADD_TO_CART' is defined but never used.","'GET_CART_ITEMS' is defined but never used.","'USER_SERVER' is assigned a value but never used.","'image' is assigned a value but never used.","'setForm' is assigned a value but never used.","'errMessage' is assigned a value but never used.","'setErrMessage' is assigned a value but never used.","'changeNickname' is assigned a value but never used.","'password' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'likes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.","ArrayExpression",["233"],"'index' is assigned a value but never used.","'handleTab' is assigned a value but never used.","'useHistory' is defined but never used.","'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'user' is assigned a value but never used.","'useContext' is defined but never used.","'Descriptions' is defined but never used.",["231"],["232"],"no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},"Update the dependencies array to be: [productId]",{"range":"236","text":"237"},[913,915],"[productId]"]