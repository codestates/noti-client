[{"/Users/seunghunhan/Desktop/project/noti-client/src/index.js":"1","/Users/seunghunhan/Desktop/project/noti-client/src/App.js":"2","/Users/seunghunhan/Desktop/project/noti-client/src/assets/state.js":"3","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/LandingPage.js":"4","/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/AlarmPage.js":"5","/Users/seunghunhan/Desktop/project/noti-client/src/components/UploadProductPage/UploadProdctPage.js":"6","/Users/seunghunhan/Desktop/project/noti-client/src/components/ModifiedPage/ModifiedPage.js":"7","/Users/seunghunhan/Desktop/project/noti-client/src/components/SignupPage/SignupPage.js":"8","/Users/seunghunhan/Desktop/project/noti-client/src/components/Navbar/Navbar.js":"9","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/DetailProductPage.js":"10","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/LoginPage.js":"11","/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/Validation.js":"12","/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/FileUpload.js":"13","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Comments.js":"14","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/SingleComment.js":"15","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/SearchBox.js":"16","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Toast.js":"17","/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Likes.js":"18","/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/Sections/AlarmItem.js":"19","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Product.js":"20","/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/Section/Card.js":"21","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/LandingCard.js":"22","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/LandingCardDetail.js":"23","/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/index.js":"24","/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/UserReducer.js":"25","/Users/seunghunhan/Desktop/project/noti-client/src/_Actions/Types.js":"26","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/FeatureOutro.js":"27","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Footer.js":"28","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/HowToUse.js":"29"},{"size":1542,"mtime":1619149086107,"results":"30","hashOfConfig":"31"},{"size":3885,"mtime":1619332369537,"results":"32","hashOfConfig":"31"},{"size":943,"mtime":1618817250092,"results":"33","hashOfConfig":"31"},{"size":3541,"mtime":1619337543286,"results":"34","hashOfConfig":"31"},{"size":6673,"mtime":1619354785848,"results":"35","hashOfConfig":"31"},{"size":2681,"mtime":1619332369631,"results":"36","hashOfConfig":"31"},{"size":4708,"mtime":1619159349737,"results":"37","hashOfConfig":"31"},{"size":4622,"mtime":1619136486229,"results":"38","hashOfConfig":"31"},{"size":3078,"mtime":1619337215295,"results":"39","hashOfConfig":"31"},{"size":3471,"mtime":1619350481161,"results":"40","hashOfConfig":"31"},{"size":4666,"mtime":1619355001641,"results":"41","hashOfConfig":"31"},{"size":772,"mtime":1618817250108,"results":"42","hashOfConfig":"31"},{"size":2176,"mtime":1619345836284,"results":"43","hashOfConfig":"31"},{"size":2732,"mtime":1619351805163,"results":"44","hashOfConfig":"31"},{"size":1380,"mtime":1619350726571,"results":"45","hashOfConfig":"31"},{"size":1164,"mtime":1619331780629,"results":"46","hashOfConfig":"31"},{"size":750,"mtime":1619136486226,"results":"47","hashOfConfig":"31"},{"size":1643,"mtime":1619332369540,"results":"48","hashOfConfig":"31"},{"size":6412,"mtime":1619353584550,"results":"49","hashOfConfig":"31"},{"size":3594,"mtime":1619344090235,"results":"50","hashOfConfig":"31"},{"size":312,"mtime":1619136486228,"results":"51","hashOfConfig":"31"},{"size":3724,"mtime":1619136486224,"results":"52","hashOfConfig":"31"},{"size":1500,"mtime":1619136486224,"results":"53","hashOfConfig":"31"},{"size":256,"mtime":1619148860535,"results":"54","hashOfConfig":"31"},{"size":785,"mtime":1619149181488,"results":"55","hashOfConfig":"31"},{"size":187,"mtime":1619148740540,"results":"56","hashOfConfig":"31"},{"size":936,"mtime":1619330381638,"results":"57","hashOfConfig":"31"},{"size":1664,"mtime":1619331472008,"results":"58","hashOfConfig":"31"},{"size":1779,"mtime":1619331979776,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"1yfoxc8",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"63"},"/Users/seunghunhan/Desktop/project/noti-client/src/index.js",["131"],"// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Reducer from './_Reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        {/* <ChakraProvider> */}\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n        {/* </ChakraProvider> */}\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();",["132","133"],"/Users/seunghunhan/Desktop/project/noti-client/src/App.js",["134"],"import React, { useState, useEffect } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport {\n  BrowserRouter as Router, \n  Route, \n  Switch \n} from 'react-router-dom';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport SignupPage from './components/SignupPage/SignupPage';\nimport Navbar from './components/Navbar/Navbar';\nimport DetailProductPage from './components/DetailProductPage/DetailProductPage';\nimport ModifiedPage from './components/ModifiedPage/ModifiedPage';\nimport UploadProdctPage from './components/UploadProductPage/UploadProdctPage';\nimport LandingPage from \"./components/LandingPage/LandingPage\";\nimport AlarmPage from \"./components/AlarmPage/AlarmPage\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\n\n\naxios.defaults.withCredentials = true;\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(false);\n  const loginHandler = (data) => {\n    setIsLogin(true)\n  };\n\n  const handleLogout = () => {\n    setIsLogin(false);\n    window.localStorage.removeItem(\"userToken\")\n  }\n\n  const accessToken = window.localStorage.getItem(\"userToken\")\n  \n  const [productList, setProductList] = useState([])\n  \n  useEffect(() => {\n    axios\n      .get(\"https://projectb1.com:4000/products/filterProductList\")\n        .then(response => {\n         console.log(\"제품 정보\", response.data)\n          if(response.data.data) {\n            setProductList(response.data.data)\n          } else {\n            alert(\" 상품들을 가져오는데 실패 했습니다.\")\n          }\n        })\n      if(accessToken){\n        setIsLogin(true)\n      }\n    }, [])\n    const addToCart = (productId) => { \n    const goToList = productList.filter((el) => el._id === productId)[0]\n    console.log(\"고투\", goToList)\n    const body = goToList\n    axios\n      .post('https://projectb1.com:4000/products/addMyLIst',\n      body,\n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n      })\n        .then((response) => {\n          if(response.status === 201){\n            swal({\n              title: \"Good job!\",\n              text: \"알림 리스트로 저장되었습니다.\",\n              icon: \"success\",\n            });            \n          }\n      })\n      .catch((err) => {\n        if(err.response.status === 400){\n          swal(\"Oops\", \"이미 등록된 알람입니다.\", \"error\")\n        } else if(err.response.status === 404) {\n           swal({\n           title: \"로그인이 필요합니다.\",\n           icon: \"warning\",\n          })\n        }\n      })\n  }\n  const updateSearchTerm = (newSearchTerm) => {\n    axios\n      .get(`https://projectb1.com:4000/products/searchProduct?searchTerm=${newSearchTerm}`,\n        {\n        headers: {\"Content-Type\": \"application/json\"}\n        })\n        .then(response => {\n          console.log(\"서치\", response)\n          setProductList(response.data.data)\n    })  \n  }\nreturn (  \n    <Router>\n      <Navbar \n        loginHandler={loginHandler}\n        handleLogout={handleLogout}\n        isLogin={isLogin}      \n      />\n      <ChakraProvider>\n      <Switch>\n      <Route exact path=\"/\">\n      <LandingPage \n        productList={productList}\n        addToCart={addToCart}\n        updateSearchTerm={updateSearchTerm}\n        />\n      </Route>\n      <Route exact path=\"/user/alarmpage\">\n        <AlarmPage/>\n      </Route>\n        <Route exact path=\"/login\">\n          <LoginPage loginHandler={loginHandler} /> \n        </Route>\n        <Route exact path=\"/signup\" component={SignupPage} />\n        <Route exact path=\"/product/upload\" component={UploadProdctPage} />\n        <Route path=\"/modified\">\n          <ModifiedPage/>\n        </Route> \n        <Route \n          path=\"/product/:productId\" \n          render={(props) =>  <DetailProductPage {...props} />} />\n      </Switch>\n      </ChakraProvider>      \n    </Router>    \n  );\n}\nexport default App;\n\n\n\n\n\n","/Users/seunghunhan/Desktop/project/noti-client/src/assets/state.js",[],["135","136"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/LandingPage.js",["137"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/AlarmPage.js",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/UploadProductPage/UploadProdctPage.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/ModifiedPage/ModifiedPage.js",["153","154"],"import React, { useState } from \"react\";\nimport { Card } from '../LoginPage/Section/Card'\nimport {\n  Box,\n  Button,\n  Heading,\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  SimpleGrid,\n  Link,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react'\nimport validation from \"../utils/Validation\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\n\n\n\naxios.defaults.withCredentials = true;\n\nexport default function ModifiedPage() {\n  const [values, setValues] = useState({\n    nickName: \"\",\n    password: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n  const accessToken = window.localStorage.getItem('userToken')\n  const handleChange = (key) => (e) => {\n    setValues({\n      ...values,\n      [key]: e.target.value,\n    });\n    setErrors(validation(values));\n  };\n  const history = useHistory();\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n    const { nickName,  password } = values;\n    if (!password && !nickName ) {\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n   console.log(accessToken)\n    axios\n      .post(\n        \"https://projectb1.com:4000/users/changePrivacy\",\n        {\n          nickName,\n          password\n        },\n        {\n          headers: {\n              \"okCome\":accessToken,\n              \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        if (res.status === 200) {\n            console.log(\"성공하면 홈으로 이동\", res.data)\n           history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"중복되면 띄워주기\", err.response.data.message);\n        swal(\"Oops\", 'duplicated nickName', \"error\")\n        history.push(\"/\");\n      });\n  };\n  \n  return (\n    <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{ base: '4', lg: '8' }}\n  >\n    <Box maxW=\"md\" mx=\"auto\">\n    <Heading textAlign=\"center\" size=\"lg\" fontWeight=\"extrabold\">\n        🔔 개인 정보를 바꾸어 보세요!\n    </Heading>\n    <SimpleGrid mt=\"10\" columns={3} spacing=\"3\"/>\n    <Card>\n    <Stack spacing=\"6\">\n          <FormControl id=\"name\">\n            <FormLabel>💌 닉네임</FormLabel>\n              <Input onChange={handleChange(\"nickName\")}\n                // value={errors.nickName}\n                name=\"name\" \n                type=\"name\" \n                placeholder=\"닉네임을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.nickName && (\n              <p className=\"error-signup\">{errors.nickName}</p>\n            )}\n        </Stack>\n        {/* <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"email\">\n            <FormLabel>💌 이메일</FormLabel>\n              <Input onChange={handleChange(\"email\")}\n                name=\"email\" \n                type=\"email\" \n                placeholder=\"이메일을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.email && <p className=\"error-signup\">{errors.email}</p>}\n        </Stack> */}\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호</FormLabel>\n              <Input onChange={handleChange(\"password\")}\n                name=\"password\" \n                type=\"password\" \n                placeholder=\"비밀번호를 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.password && (<p className=\"error-signup\">{errors.password}</p> )}\n        </Stack>\n        {/* <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호 확인 </FormLabel>\n              <Input onChange={handleChange(\"confirmPassword\")}\n                name=\"confirmPassword\"\n                type=\"password\"\n                placeholder=\"비밀번호를 다시한번 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.confirmPassword && (\n              <p className=\"error-signup\">{errors.confirmPassword}</p>\n            )}\n        </Stack> */}\n           <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <Button\n              onClick={handleSignup}  \n              type=\"submit\" \n              colorScheme=\"purple\" \n              width=\"full\"\n              fontSize=\"md\">\n              개인정보변경\n          </Button>\n          <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n    </Card>\n    </Box>\n    </Box>\n  );\n}\n\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/SignupPage/SignupPage.js",["155","156"],"import React, { useState } from \"react\";\nimport { Card } from '../LoginPage/Section/Card'\nimport {\n  Box,\n  Button,\n  Heading,\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  SimpleGrid,\n  Link,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react'\nimport validation from \"../utils/Validation\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\n\naxios.defaults.withCredentials = true;\n\nexport default function SingupPage() {\n\n  const [values, setValues] = useState({\n    nickName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  \n  const [errors, setErrors] = useState({});\n\n  const handleChange = (key) => (e) => {\n    setValues({\n      ...values,\n      [key]: e.target.value,\n    });\n    setErrors(validation(values));\n  };\n  \n  const history = useHistory();\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n\n    const { nickName, email, password, confirmPassword } = values;\n    if (!email || !password || !nickName || !confirmPassword) {\n      return swal(\"Oops\", \"모든 항목은 필수입니다.\", \"error\");\n    }\n   \n    axios\n      .post(\n        \"https://projectb1.com:4000/users/signup\",\n        {\n          nickName,\n          email,\n          password,\n          confirmPassword,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        if (res.status === 200) {\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err.response.data.message);\n        swal(\"Oops\", err.response.data.message, \"error\")\n        history.push(\"/login\");\n      });\n  };\n  return (\n    <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{ base: '4', lg: '8' }}\n  >\n    <Box maxW=\"md\" mx=\"auto\">\n    <Heading textAlign=\"center\" size=\"lg\" fontWeight=\"extrabold\">\n        🔔 발매 정보를 미리 받아 보세요!\n    </Heading>\n    <SimpleGrid mt=\"10\" columns={3} spacing=\"3\"/>\n    <Card>\n    <Stack spacing=\"6\">\n          <FormControl id=\"name\">\n            <FormLabel>💌 닉네임</FormLabel>\n              <Input onChange={handleChange(\"nickName\")}\n                // value={errors.nickName}\n                name=\"name\" \n                type=\"name\" \n                placeholder=\"닉네임을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.nickName && (\n              <p className=\"error-signup\">{errors.nickName}</p>\n            )}\n        </Stack>\n\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"email\">\n            <FormLabel>💌 이메일</FormLabel>\n              <Input onChange={handleChange(\"email\")}\n                name=\"email\" \n                type=\"email\" \n                placeholder=\"이메일을 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.email && <p className=\"error-signup\">{errors.email}</p>}\n        </Stack>\n\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호</FormLabel>\n              <Input onChange={handleChange(\"password\")}\n                name=\"password\" \n                type=\"password\" \n                placeholder=\"비밀번호를 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.password && (<p className=\"error-signup\">{errors.password}</p> )}\n        </Stack>\n\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n        <Stack spacing=\"6\">\n          <FormControl id=\"password\">\n            <FormLabel> 🔐 비밀번호 확인 </FormLabel>\n              <Input onChange={handleChange(\"confirmPassword\")}\n                name=\"confirmPassword\"\n                type=\"password\"\n                placeholder=\"비밀번호를 다시한번 입력해 주세요.\"\n                autoComplete=\"\" required />\n            </FormControl>\n            {errors.confirmPassword && (\n              <p className=\"error-signup\">{errors.confirmPassword}</p>\n            )}\n        </Stack>\n\n           <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n          <Button\n              onClick={handleSignup}  \n              type=\"submit\" \n              colorScheme=\"purple\" \n              width=\"full\"\n              fontSize=\"md\">\n              회원가입하기\n          </Button>\n          <SimpleGrid mt=\"6\" columns={3} spacing=\"3\"/>\n    </Card>\n    </Box>\n    </Box>\n    \n  );\n}\n","/Users/seunghunhan/Desktop/project/noti-client/src/components/Navbar/Navbar.js",["157","158","159"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/DetailProductPage.js",["160","161","162","163","164"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/LoginPage.js",["165","166","167"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/Validation.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/utils/FileUpload.js",["168"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Comments.js",["169","170"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/SingleComment.js",["171","172","173","174","175"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/SearchBox.js",["176","177"],"import React, { useState } from \"react\";\n// import \"../../SearchBox.css\"\nimport { Input, Flex, Badge, Box, Tooltip  } from \"@chakra-ui/react\"\n// import { Input } from \"antd\"\n\n// const { Search } = Input;\n\nexport default function SearchBox({ updateSearchTerm }){\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  // const [click, setClick] = useState(false);\n\n  const searchHandler = (event) => {\n    setSearchTerm(event.target.value)\n    updateSearchTerm(event.target.value)\n  \n  }\n  \n  // const handleClick = () => setClick(!click);\n\n  return(\n    <div style={{ width: '100%', margin: '1rem auto' }}>\n      {/* <Badge\n          borderRadius=\"full\" \n          px=\"2\"\n          mt=\"4\"\n          fontSize=\"lg\"\n          colorScheme=\"yellow\">\n            핫 아이템을 검색해 보세요!\n      </Badge> */}\n      <Box>\n      <Tooltip label=\"원하는 제품을 검색해 보세요!\" aria-label=\"A tooltip\">\n      <Input\n        mt=\"4\"\n        placeholder=\"예) nike\"\n        // size=\"lg\"\n        variant=\"filled\"\n        onChange={searchHandler}\n        style={{ width: 288}}\n        value={searchTerm}\n      />\n      </Tooltip>\n      </Box>\n    </div>\n  )\n}","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Toast.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/DetailProductPage/Setions/Likes.js",["178"],"import React, { useEffect, useState } from 'react'\nimport { IoMdHeartEmpty, IoMdHeart } from \"react-icons/io\";\nimport axios from 'axios';\nimport swal from \"sweetalert\";\naxios.defaults.withCredentials = true;\nexport default function Likes(props) {\n  const [likeCount, setLikeCount] = useState(props.goodCount);\n  const [action, setAction] = useState(props.state);\n  const accessToken = window.localStorage.getItem('userToken')\n  const onLikeClick = () => {\n    const body = {\n      id: props.productId,\n      comment_id: props.commentId\n    }\n    axios.patch(`https://projectb1.com:4000/products/good`, body, \n      {\n        headers: { \"Content-Type\": \"application/json\" , \"okCome\": accessToken}\n      })\n      .then(response => {\n        const comments = response.data.data.comment\n        const filteredLike = comments.filter((comment) => {\n          return comment._id === props.commentId\n       })    \n        setAction(filteredLike[0].state)\n        props.updateLikes(filteredLike[0].state)\n        setLikeCount(filteredLike[0].goodUsers.length)  \n      })\n      .catch((err) =>{\n        if(err.response.status === 401) {\n          swal({\n           title: \"로그인이 필요합니다.\",\n           icon: \"warning\",\n        })     \n      }\n    })    \n  }\n  return (\n    <div>\n      <div className=\"like-icon\" style={{display: \"flex\"}} onClick={onLikeClick}>\n        {action=== 0 ? \n          <IoMdHeartEmpty  size=\"25\"/> :\n          <IoMdHeart size=\"25\" color=\"rgb(201, 89, 113)\" />}         \n        <span \n          className=\"like-count\"\n          style={{marginLeft: \"5px\"}}\n        >{likeCount}</span>\n      </div>\n    </div>\n  )\n}","/Users/seunghunhan/Desktop/project/noti-client/src/components/AlarmPage/Sections/AlarmItem.js",["179","180","181","182","183","184","185","186"],"// import React, { useState } from 'react'\n// import axios from \"axios\";\n// import { Switch, Button, HStack, Heading, Box,\n//          VStack, Text, IconButton, StackDivider, Spacer, Badge, Avatar, Wrap, WrapItem, Flex\n// } from \"@chakra-ui/react\"\n// import { FaTrash } from 'react-icons/fa';\n// import swal from \"sweetalert\"; \n\n\n// export default function AlarmItem({ item, handleDelete }) {\n\n//   const accessToken = window.localStorage.getItem('userToken')\n\n//       const alarmSetting = (productId) => {\n        \n//         console.log(\"알람설정\")\n//         let body = {\n//           productId: item.productId,\n//         }\n//         console.log(\"바디가뭐야\", body)\n//         axios.post(`https://projectb1.com:4000/products/changeAlarm`, body, \n//         {\n//         headers: {\"okCome\": accessToken}\n//       })\n//       .then(response => {\n//             console.log(response.data.data.myList);\n//         const myList = response.data.data.myList;\n//         const alarmProduct = myList.filter((el) => el.productId === item.productId)\n//         console.log(\"알람프로덕트\", alarmProduct)\n//           if(alarmProduct[0].alarm === true) {\n//             swal({\n//               title: \"Good job!\",\n//               text: \"발매 하루 전에 메일로 발송됩니다.\",\n//               icon: \"success\",\n//             });     \n//           }else{\n//              swal(\"Oops\", \"알람 설정이 취소되었습니다.\", \"error\")\n//           }        \n//        });\n//     }\n  \n//   return (\n//     // <Flex>\n//       <VStack\n//         divider={<StackDivider  mt=\"6\" />}\n//         borderColor='black.400'\n//         borderWidth='1px'\n//         spacing={16}\n//         p={4}\n//         borderRadius='2xl'\n//         w='100%'\n//         maxW={{ base: '100vw', sm: '100vw', lg: '50vw', xl: '40vw' }}\n//         alignItems='stretch'\n//         shadow=\"xs\"\n//         bg=\"white\"\n//         mt=\"8\"\n//       >\n//         {/* <Flex> */}\n//         <HStack mt=\"0\">\n//           <Avatar ml=\"0\" mr=\"4\" size=\"lg\" name=\"shoes\" src={`https://projectb1.com:4000/${item.images[0]}`} />\n//             {/* <Flex> */}\n//             <Box\n//               alignContent=\"space-between\"\n//               fontSize=\"lg\"\n//               fontWeight=\"semibold\"\n//               as=\"h3\"\n//               lineHeight=\"1.5\"\n//               isTruncated\n//               ml=\"8\"\n//             >\n//               <Spacer />\n//               <Flex>\n//               <Box>\n//                     {item.releaseString}\n\n//               <Switch \n//                     ml=\"4\"\n//                     defaultChecked=\"true\"\n//                     onChange={alarmSetting}>\n//               </Switch>\n              \n//               <IconButton\n//               ml=\"2\"\n//               size=\"md\"\n//               alignContent=\"space-between\"\n//               icon={<FaTrash />}\n//               isRound='true'\n//               onClick={() => {handleDelete(item.productId)}}\n//             />\n//             </Box>\n//             </Flex>\n\n//             <Box fontSize=\"md\" fontWeight=\"light\" mt={0} ml={0}>{item.productName} <Box as=\"span\" color=\"gray.600\" fontSize=\"md\"> </Box></Box>\n//             </Box>\n            \n//         {/* </Flex> */}\n//         </HStack>\n//         {/* </Flex> */}\n//       </VStack>\n//       // </Flex>\n//   )\n// };\n \n\n\nimport React, { useState } from 'react'\nimport axios from \"axios\";\nimport { Switch, Button, HStack, Heading, Box, SimpleGrid, Divider,\n         VStack, Text, IconButton, StackDivider, Spacer, Badge, Avatar, Wrap, WrapItem, Flex, Container\n} from \"@chakra-ui/react\"\nimport { FaTrash } from 'react-icons/fa';\nimport swal from \"sweetalert\"; \nexport default function AlarmItem({ item, handleDelete }) {\n  const accessToken = window.localStorage.getItem('userToken')\n  const [alarm, setAlarm] = useState(true)\n      const alarmSetting = (productId) => {\n        console.log(\"알람설정\")\n        let body = {\n          productId: productId,\n        }\n        console.log(\"바디가뭐야\", body)\n        axios.post(`https://projectb1.com:4000/products/changeAlarm`, body, \n        {\n        headers: {\"okCome\": accessToken}\n      })\n      .then(response => {\n            console.log(response.data.data.myList);\n        const myList = response.data.data.myList;\n        const alarmProduct = myList.filter((el) => el.productId === item.productId)\n        console.log(\"알람프로덕트\", alarmProduct)\n          if(alarmProduct[0].alarm === true){\n            setAlarm(true)\n            swal({\n              title: \"Good job!\",\n              text: \"발매 하루 전에 메일로 발송됩니다.\",\n              icon: \"success\",\n            });     \n          }else{\n            setAlarm(false)\n             swal(\"Oops\", \"알람 설정이 취소되었습니다.\", \"error\")\n          }        \n       });\n    }\n  return (\n    <Box>\n      <Divider\n\n       />\n      <Container\n      // borderColor='black.400'\n      mb=\"8\"\n      mt=\"8\"\n      // border=\"1px\"\n      borderRadius=\"16\"\n      >\n      <Flex>\n          <Box\n          >\n            <Avatar size=\"xl\" name=\"shoes\" src={`https://projectb1.com:4000/${item.images[0]}`} />\n          </Box>\n          <Box>\n            <Heading\n             ml=\"6\"\n             fontSize=\"xl\">{item.releaseString}</Heading>\n            <Spacer />\n            <Text\n             mt=\"2\"\n             ml=\"6\"\n            >{item.productName}</Text>\n            <Box\n             alignItems=\"center\"\n            >\n            {alarm ? \n            <Button \n              width=\"170px\"\n              mt=\"4\"\n              ml=\"6\"\n              variant=\"outline\" \n              colorScheme=\"red\"\n              onClick={()=>{alarmSetting(item.productId)}}\n              > 알람 취소 \n            </Button> :\n            <Button\n              width=\"170px\"\n              mt=\"4\"\n              ml=\"6\"\n              variant=\"solid\"\n              colorScheme=\"purple\"\n              onClick={()=>{alarmSetting(item.productId)}}\n              > 알람 설정\n            </Button>}\n            </Box>\n          </Box>\n          <Spacer />\n          <Spacer />\n          <Box>\n            <IconButton\n            ml=\"0\"\n            icon={<FaTrash />}\n            isRound='true'\n            onClick={() => {handleDelete(item.productId)}}\n            />\n          </Box>\n        </Flex>\n        <Box>\n\n          </Box>\n      </Container>\n      </Box>\n  )\n};\n \n","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Product.js",["187","188","189","190","191"],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LoginPage/Section/Card.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/LandingCard.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/LandingCardDetail.js",["192","193"],"import styled from \"styled-components\";\nimport Jordan from \"../../../assets/Jordan.png\";\n\nconst DetailsContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 2.5em 6px 0 6px;\n  line-height: 1.4;\n  user-select: none;\n`;\n\nconst MediumText = styled.span`\n  font-size: 14px;\n  color: #000;\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst SmallText = styled.span`\n  font-size: 10px;\n  color: #000;\n  font-weight: 700;\n  text-transform: uppercase;\n`;\n\nconst SpacedHorizontalContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst BuyButton = styled.button`\n  padding: 10px 16px;\n  background-color: #805BD5;\n  color: #fff;\n  text-transform: uppercase;\n  font-size: 16px;\n  font-weight: 700;\n  border: 3px solid transparent;\n  outline: none;\n  cursor: pointer;\n  transition: all 290ms ease-in-out;\n  border-radius: 8px;\n  &:hover {\n    background-color: transparent;\n    color: #000;\n    border: 3px solid #805BD5;\n  }\n`;\n\nexport default function ShoeDetials() {\n  return (\n    <DetailsContainer>\n      {/* <SmallText>Nike</SmallText> */}\n      <SpacedHorizontalContainer>\n        <MediumText>Nike Jordan Mid SE-GC</MediumText>\n      </SpacedHorizontalContainer>\n      <br />\n      <SpacedHorizontalContainer>\n        <MediumText>알림 설정 해보세요!</MediumText>\n        <BuyButton>알림</BuyButton>\n      </SpacedHorizontalContainer>\n    </DetailsContainer>\n  );\n}\n","/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/index.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/_Reducers/UserReducer.js",["194"],"import {\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM,\n} from '../_Actions/Types';\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case ADD_TO_CART:\n            return {\n                ...state,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload\n                }\n            }\n        case GET_CART_ITEMS:\n            return { ...state, cartDetail: action.payload }\n        case REMOVE_CART_ITEM:\n            return {\n                ...state, cartDetail: action.payload.productInfo,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart\n                }\n            }\n        default:\n            return state;\n    }\n}","/Users/seunghunhan/Desktop/project/noti-client/src/_Actions/Types.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/FeatureOutro.js",["195"],"import * as React from 'react'\nimport { Box, Button, Heading, Text, Link } from '@chakra-ui/react'\n\nconst FeatureOutro = () => (\n    <Box as=\"section\">\n      <Box\n        maxW=\"2xl\"\n        mx=\"auto\"\n        px={{ base: '6', lg: '8' }}\n        py={{ base: '16', sm: '20' }}\n        textAlign=\"center\"\n      >\n        <Heading as=\"h2\" size=\"xl\" fontWeight=\"extrabold\" letterSpacing=\"tight\">\n        ❗️ 핫 아이템 정보 미리 받아 보세요\n        </Heading>\n        <Text mt=\"4\" fontSize=\"lg\">\n          꼭 갖고 싶은 아이템 놓치지 않도록 NOTI로 미리 알림 설정 하시면 발매 하루 전 이메일로 발매 정보를 다시 알려 드립니다\n        </Text>\n        <Button \n        variant=\"outline\"\n        mt=\"8\" as=\"a\" href=\"/user/alarmpage\" size=\"lg\" colorScheme=\"purple\" fontWeight=\"bold\">\n          알림설정하기\n        </Button>\n      </Box>\n    </Box>\n  )\n  export default FeatureOutro;","/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/Footer.js",[],"/Users/seunghunhan/Desktop/project/noti-client/src/components/LandingPage/Sections/HowToUse.js",["196"],"import { ReactElement } from 'react';\nimport { Box, SimpleGrid, Icon, Text, Stack, Flex, Heading } from '@chakra-ui/react';\nimport { FcLike, FcAlarmClock, FcAdvertising } from 'react-icons/fc';\n\n\nconst Feature = ({ title, text, icon }) => {\n  return (\n    <Stack\n    mt=\"0\"\n    mb=\"16\"\n    align={'center'}\n    >\n      <Flex\n        w={16}\n        h={16}\n        align={'center'}\n        justify={'center'}\n        color={'white'}\n        rounded={'full'}\n        bg={'gray.100'}\n        mb={1}>\n        {icon}\n      </Flex>\n      <Text fontWeight={600}>{title}</Text>\n      <Text color={'gray.600'}>{text}</Text>\n    </Stack>\n  );\n};\n\nexport default function SimpleThreeColumns() {\n  return (\n    <Box p={4} mb=\"16\" align=\"center\">\n        <Heading\n        size=\"xl\"\n        fontWeight=\"extrabold\"\n        mb=\"16\"\n        > 👉 간편하게 NOTI를 이용하는 방법</Heading>\n      <SimpleGrid columns={{ base: 1, md: 3 }} spacing={10}>\n        <Feature\n          icon={<Icon as={FcLike} w={10} h={10} />}\n          title={'원하는 상품 저장'}\n          text={\n            '최신 발매정보에서 원하시는 상품을 검색하고 저장 버튼을 눌러 주세요.'\n          }\n        />\n        <Feature\n          icon={<Icon as={FcAlarmClock} w={10} h={10} />}\n          title={'알림 설정'}\n          text={\n            '저장한 상품은 알림 리스트에서 알림 설정 또는 삭제 할 수 있습니다.'\n          }\n        />\n        <Feature\n          icon={<Icon as={FcAdvertising} w={10} h={10} />}\n          title={'발매정보 미리 받기'}\n          text={\n            '알림 설정한 제품은 발매 하루 전 이메일로 발매 정보를 다시 알려 드립니다.'\n          }\n        />\n      </SimpleGrid>\n    </Box>\n  );\n}",{"ruleId":"197","severity":1,"message":"198","line":25,"column":10,"nodeType":"199","messageId":"200","endLine":25,"endColumn":24},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":51,"column":8,"nodeType":"207","endLine":51,"endColumn":10,"suggestions":"208"},{"ruleId":"201","replacedBy":"209"},{"ruleId":"203","replacedBy":"210"},{"ruleId":"197","severity":1,"message":"211","line":5,"column":15,"nodeType":"199","messageId":"200","endLine":5,"endColumn":24},{"ruleId":"197","severity":1,"message":"212","line":116,"column":8,"nodeType":"199","messageId":"200","endLine":116,"endColumn":13},{"ruleId":"197","severity":1,"message":"213","line":118,"column":10,"nodeType":"199","messageId":"200","endLine":118,"endColumn":16},{"ruleId":"197","severity":1,"message":"214","line":118,"column":18,"nodeType":"199","messageId":"200","endLine":118,"endColumn":24},{"ruleId":"197","severity":1,"message":"215","line":118,"column":26,"nodeType":"199","messageId":"200","endLine":118,"endColumn":32},{"ruleId":"197","severity":1,"message":"216","line":118,"column":48,"nodeType":"199","messageId":"200","endLine":118,"endColumn":65},{"ruleId":"197","severity":1,"message":"217","line":118,"column":67,"nodeType":"199","messageId":"200","endLine":118,"endColumn":71},{"ruleId":"197","severity":1,"message":"218","line":119,"column":3,"nodeType":"199","messageId":"200","endLine":119,"endColumn":9},{"ruleId":"197","severity":1,"message":"219","line":119,"column":17,"nodeType":"199","messageId":"200","endLine":119,"endColumn":27},{"ruleId":"197","severity":1,"message":"220","line":119,"column":29,"nodeType":"199","messageId":"200","endLine":119,"endColumn":41},{"ruleId":"197","severity":1,"message":"221","line":119,"column":43,"nodeType":"199","messageId":"200","endLine":119,"endColumn":49},{"ruleId":"197","severity":1,"message":"222","line":119,"column":51,"nodeType":"199","messageId":"200","endLine":119,"endColumn":56},{"ruleId":"197","severity":1,"message":"223","line":119,"column":58,"nodeType":"199","messageId":"200","endLine":119,"endColumn":64},{"ruleId":"197","severity":1,"message":"224","line":119,"column":66,"nodeType":"199","messageId":"200","endLine":119,"endColumn":70},{"ruleId":"197","severity":1,"message":"225","line":119,"column":72,"nodeType":"199","messageId":"200","endLine":119,"endColumn":80},{"ruleId":"205","severity":1,"message":"206","line":139,"column":5,"nodeType":"207","endLine":139,"endColumn":7,"suggestions":"226"},{"ruleId":"197","severity":1,"message":"227","line":12,"column":3,"nodeType":"199","messageId":"200","endLine":12,"endColumn":7},{"ruleId":"197","severity":1,"message":"228","line":13,"column":3,"nodeType":"199","messageId":"200","endLine":13,"endColumn":7},{"ruleId":"197","severity":1,"message":"227","line":12,"column":3,"nodeType":"199","messageId":"200","endLine":12,"endColumn":7},{"ruleId":"197","severity":1,"message":"228","line":13,"column":3,"nodeType":"199","messageId":"200","endLine":13,"endColumn":7},{"ruleId":"197","severity":1,"message":"214","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":16},{"ruleId":"197","severity":1,"message":"229","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":20},{"ruleId":"230","severity":1,"message":"231","line":60,"column":19,"nodeType":"232","messageId":"233","endLine":63,"endColumn":21},{"ruleId":"197","severity":1,"message":"211","line":6,"column":19,"nodeType":"199","messageId":"200","endLine":6,"endColumn":28},{"ruleId":"197","severity":1,"message":"234","line":6,"column":30,"nodeType":"199","messageId":"200","endLine":6,"endColumn":36},{"ruleId":"197","severity":1,"message":"235","line":6,"column":38,"nodeType":"199","messageId":"200","endLine":6,"endColumn":48},{"ruleId":"197","severity":1,"message":"236","line":13,"column":8,"nodeType":"199","messageId":"200","endLine":13,"endColumn":13},{"ruleId":"205","severity":1,"message":"237","line":27,"column":6,"nodeType":"207","endLine":27,"endColumn":8,"suggestions":"238"},{"ruleId":"197","severity":1,"message":"212","line":8,"column":8,"nodeType":"199","messageId":"200","endLine":8,"endColumn":13},{"ruleId":"197","severity":1,"message":"228","line":19,"column":3,"nodeType":"199","messageId":"200","endLine":19,"endColumn":7},{"ruleId":"197","severity":1,"message":"239","line":25,"column":10,"nodeType":"199","messageId":"200","endLine":25,"endColumn":14},{"ruleId":"240","severity":1,"message":"241","line":61,"column":13,"nodeType":"242","endLine":62,"endColumn":64},{"ruleId":"197","severity":1,"message":"243","line":5,"column":10,"nodeType":"199","messageId":"200","endLine":5,"endColumn":13},{"ruleId":"197","severity":1,"message":"217","line":5,"column":34,"nodeType":"199","messageId":"200","endLine":5,"endColumn":38},{"ruleId":"197","severity":1,"message":"244","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":17},{"ruleId":"197","severity":1,"message":"228","line":3,"column":19,"nodeType":"199","messageId":"200","endLine":3,"endColumn":23},{"ruleId":"197","severity":1,"message":"245","line":3,"column":25,"nodeType":"199","messageId":"200","endLine":3,"endColumn":30},{"ruleId":"197","severity":1,"message":"246","line":4,"column":10,"nodeType":"199","messageId":"200","endLine":4,"endColumn":24},{"ruleId":"197","severity":1,"message":"247","line":4,"column":26,"nodeType":"199","messageId":"200","endLine":4,"endColumn":35},{"ruleId":"197","severity":1,"message":"217","line":3,"column":17,"nodeType":"199","messageId":"200","endLine":3,"endColumn":21},{"ruleId":"197","severity":1,"message":"222","line":3,"column":23,"nodeType":"199","messageId":"200","endLine":3,"endColumn":28},{"ruleId":"197","severity":1,"message":"248","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":26},{"ruleId":"197","severity":1,"message":"213","line":108,"column":10,"nodeType":"199","messageId":"200","endLine":108,"endColumn":16},{"ruleId":"197","severity":1,"message":"215","line":108,"column":26,"nodeType":"199","messageId":"200","endLine":108,"endColumn":32},{"ruleId":"197","severity":1,"message":"235","line":108,"column":48,"nodeType":"199","messageId":"200","endLine":108,"endColumn":58},{"ruleId":"197","severity":1,"message":"218","line":109,"column":10,"nodeType":"199","messageId":"200","endLine":109,"endColumn":16},{"ruleId":"197","severity":1,"message":"220","line":109,"column":36,"nodeType":"199","messageId":"200","endLine":109,"endColumn":48},{"ruleId":"197","severity":1,"message":"222","line":109,"column":58,"nodeType":"199","messageId":"200","endLine":109,"endColumn":63},{"ruleId":"197","severity":1,"message":"224","line":109,"column":73,"nodeType":"199","messageId":"200","endLine":109,"endColumn":77},{"ruleId":"197","severity":1,"message":"225","line":109,"column":79,"nodeType":"199","messageId":"200","endLine":109,"endColumn":87},{"ruleId":"197","severity":1,"message":"249","line":4,"column":8,"nodeType":"199","messageId":"200","endLine":4,"endColumn":14},{"ruleId":"197","severity":1,"message":"214","line":6,"column":10,"nodeType":"199","messageId":"200","endLine":6,"endColumn":16},{"ruleId":"197","severity":1,"message":"250","line":6,"column":87,"nodeType":"199","messageId":"200","endLine":6,"endColumn":103},{"ruleId":"197","severity":1,"message":"251","line":18,"column":12,"nodeType":"199","messageId":"200","endLine":18,"endColumn":18},{"ruleId":"197","severity":1,"message":"252","line":18,"column":20,"nodeType":"199","messageId":"200","endLine":18,"endColumn":26},{"ruleId":"197","severity":1,"message":"253","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":14},{"ruleId":"197","severity":1,"message":"254","line":21,"column":7,"nodeType":"199","messageId":"200","endLine":21,"endColumn":16},{"ruleId":"255","severity":1,"message":"256","line":6,"column":1,"nodeType":"257","endLine":29,"endColumn":2},{"ruleId":"197","severity":1,"message":"227","line":2,"column":38,"nodeType":"199","messageId":"200","endLine":2,"endColumn":42},{"ruleId":"197","severity":1,"message":"258","line":1,"column":10,"nodeType":"199","messageId":"200","endLine":1,"endColumn":22},"no-unused-vars","'ChakraProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["259"],"no-negated-in-lhs",["260"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'accessToken'. Either include it or remove the dependency array.","ArrayExpression",["261"],["259"],["260"],"'Container' is defined but never used.","'Toast' is defined but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'HStack' is defined but never used.","'useColorModeValue' is defined but never used.","'Flex' is defined but never used.","'VStack' is defined but never used.","'IconButton' is defined but never used.","'StackDivider' is defined but never used.","'Spacer' is defined but never used.","'Badge' is defined but never used.","'Avatar' is defined but never used.","'Wrap' is defined but never used.","'WrapItem' is defined but never used.",["262"],"'Link' is defined but never used.","'Text' is defined but never used.","'useHistory' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Center' is defined but never used.","'SimpleGrid' is defined but never used.","'likes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["263"],"'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Box' is defined but never used.","'Divider' is defined but never used.","'Stack' is defined but never used.","'IoMdHeartEmpty' is defined but never used.","'IoMdHeart' is defined but never used.","'useEffect' is defined but never used.","'styled' is defined but never used.","'ExternalLinkIcon' is defined but never used.","'isOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'Jordan' is defined but never used.","'SmallText' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'ReactElement' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"264","fix":"266"},{"desc":"267","fix":"268"},"Update the dependencies array to be: [accessToken]",{"range":"269","text":"270"},{"range":"271","text":"270"},"Update the dependencies array to be: [productId]",{"range":"272","text":"273"},[1562,1564],"[accessToken]",[4602,4604],[959,961],"[productId]"]