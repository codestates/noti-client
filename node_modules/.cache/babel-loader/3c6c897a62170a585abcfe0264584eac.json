{"ast":null,"code":"var _jsxFileName = \"/Users/seunghunhan/Desktop/project/noti-client/src/LandingPage/Toast.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport create from \"zustand\"; // import shallow from \"zustand/shallow\";\n// import cn from \"clsx\";\n\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useToastStore = create((set, get) => ({\n  toastList: new Set(),\n\n  show(toastId) {\n    const {\n      toastList\n    } = get();\n    const newToastList = new Set(toastList);\n    newToastList.add(toastId);\n    set({\n      toastList: newToastList\n    });\n  },\n\n  close(toastId) {\n    const {\n      toastList\n    } = get();\n    const newToastList = new Set(toastList);\n    newToastList.delete(toastId);\n    set({\n      toastList: newToastList\n    });\n  },\n\n  closeAll() {\n    const newToastList = new Set();\n    set({\n      toastList: newToastList\n    });\n  }\n\n}));\nexport function Toast(props) {\n  _s();\n\n  const {\n    uniqueId,\n    config = {},\n    className,\n    children\n  } = props;\n  const {\n    duration = 3500,\n    role = \"status\"\n  } = config;\n  const {\n    toastList,\n    close\n  } = useToastStore(store => ({\n    toastList: store.toastList,\n    close: store.close\n  }), shallow);\n  const isShown = toastList.has(uniqueId);\n  useEffect(() => {\n    if (!duration || !isShown) {\n      return;\n    }\n\n    const timeoutId = setTimeout(() => {\n      close(uniqueId);\n    }, duration);\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [uniqueId, isShown, duration, close]);\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: isShown && /*#__PURE__*/_jsxDEV(motion.div, {\n      layout: true,\n      initial: {\n        opacity: 0,\n        y: 50,\n        scale: 0.3\n      },\n      animate: {\n        opacity: 1,\n        y: 0,\n        scale: 1\n      },\n      exit: {\n        opacity: 0,\n        y: 20,\n        scale: 0.5\n      },\n      className: cn(\"toast\", className),\n      role: role,\n      children: children\n    }, uniqueId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this), document.querySelector(\"#toasts-portal\"));\n}\n\n_s(Toast, \"ECcobmID5WdXMV2l5vh1iLwNshM=\", false, function () {\n  return [useToastStore];\n});\n\n_c = Toast;\nexport function useToastControls() {\n  _s2();\n\n  const controls = useToastStore(store => ({\n    show: store.show,\n    close: store.close,\n    closeAll: store.closeAll\n  }), shallow);\n  return controls;\n}\n\n_s2(useToastControls, \"56X1wdOeM7LLbwb85TGxM1wgDwY=\", false, function () {\n  return [useToastStore];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"sources":["/Users/seunghunhan/Desktop/project/noti-client/src/LandingPage/Toast.js"],"names":["React","useEffect","createPortal","create","AnimatePresence","motion","useToastStore","set","get","toastList","Set","show","toastId","newToastList","add","close","delete","closeAll","Toast","props","uniqueId","config","className","children","duration","role","store","shallow","isShown","has","timeoutId","setTimeout","clearTimeout","opacity","y","scale","cn","document","querySelector","useToastControls","controls"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport create from \"zustand\";\n// import shallow from \"zustand/shallow\";\n// import cn from \"clsx\";\nimport { AnimatePresence, motion } from \"framer-motion\";\n\nconst useToastStore = create((set, get) => ({\n  toastList: new Set(),\n  show(toastId) {\n    const { toastList } = get();\n\n    const newToastList = new Set(toastList);\n    newToastList.add(toastId);\n\n    set({\n      toastList: newToastList\n    });\n  },\n  close(toastId) {\n    const { toastList } = get();\n\n    const newToastList = new Set(toastList);\n    newToastList.delete(toastId);\n\n    set({\n      toastList: newToastList\n    });\n  },\n  closeAll() {\n    const newToastList = new Set();\n\n    set({\n      toastList: newToastList\n    });\n  }\n}));\n\nexport function Toast(props) {\n  const { uniqueId, config = {}, className, children } = props;\n  const { duration = 3500, role = \"status\" } = config;\n\n  const { toastList, close } = useToastStore(\n    (store) => ({\n      toastList: store.toastList,\n      close: store.close\n    }),\n    shallow\n  );\n\n  const isShown = toastList.has(uniqueId);\n\n  useEffect(() => {\n    if (!duration || !isShown) {\n      return;\n    }\n\n    const timeoutId = setTimeout(() => {\n      close(uniqueId);\n    }, duration);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [uniqueId, isShown, duration, close]);\n\n  return createPortal(\n    <AnimatePresence>\n      {isShown && (\n        <motion.div\n          key={uniqueId}\n          layout\n          initial={{ opacity: 0, y: 50, scale: 0.3 }}\n          animate={{ opacity: 1, y: 0, scale: 1 }}\n          exit={{ opacity: 0, y: 20, scale: 0.5 }}\n          className={cn(\"toast\", className)}\n          role={role}\n        >\n          {children}\n        </motion.div>\n      )}\n    </AnimatePresence>,\n    document.querySelector(\"#toasts-portal\")\n  );\n}\n\nexport function useToastControls() {\n  const controls = useToastStore(\n    (store) => ({\n      show: store.show,\n      close: store.close,\n      closeAll: store.closeAll\n    }),\n    shallow\n  );\n\n  return controls;\n}\n"]},"metadata":{},"sourceType":"module"}