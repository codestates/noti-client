{"ast":null,"code":"var _jsxFileName = \"/Users/seunghunhan/Desktop/project/noti-client/src/AlarmListPage/Headline.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { useTodoState } from '../TodoContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeadlineBlock = styled.div`\n  padding-top: 48px;\n  padding-left: 32px;\n  padding-right: 32px;\n  padding-bottom: 24px;\n  border-bottom: 1px solid #e9ecef;\n  h1 {\n    margin: 0;\n    font-size: 36px;\n    color: #343a40;\n  }\n  .item {\n    margin-top: 4px;\n    color: #868e96;\n    font-size: 21px;\n  }\n  .tasks-left {\n    color: #000000;\n    font-size: 18px;\n    margin-top: 40px;\n    font-weight: bold;\n  }\n`;\n_c = HeadlineBlock;\nconst [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\nuseEffect(() => {\n  const timer = setTimeout(() => {\n    setTimeLeft(calculateTimeLeft());\n    setYear(new Date().getFullYear());\n  }, 1000); // Clear timeout if the component is unmounted\n\n  return () => clearTimeout(timer);\n});\n\nfunction Headline() {\n  _s();\n\n  const todos = useTodoState();\n  const undoneTasks = todos.filter(todo => !todo.done);\n  console.log(todos);\n\n  const calculateTimeLeft = () => {\n    let year = new Date().getFullYear();\n    const difference = +new Date(`10/01/${year}`) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n        minutes: Math.floor(difference / 1000 / 60 % 60),\n        seconds: Math.floor(difference / 1000 % 60)\n      };\n    }\n\n    return timeLeft;\n  };\n\n  return /*#__PURE__*/_jsxDEV(HeadlineBlock, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"3\\uC77C \\uB4A4,\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: \"\\uB098\\uC774\\uD0A4 \\uC870\\uB358 1 \\uC720\\uB2C8\\uBC84\\uC2DC\\uD2F0 \\uBE14\\uB8E8\\uAC00 \\uBC1C\\uB9E4\\uB429\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-left\",\n      children: [\"\\uBC1C\\uB9E4 \\uC77C\\uC815 \", undoneTasks.length, \"\\uAC1C \\uB0A8\\uC74C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Headline, \"pr6K0VeC20DQDtCj4dVyY1Qagh0=\", false, function () {\n  return [useTodoState];\n});\n\n_c2 = Headline;\nexport default Headline;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HeadlineBlock\");\n$RefreshReg$(_c2, \"Headline\");","map":{"version":3,"sources":["/Users/seunghunhan/Desktop/project/noti-client/src/AlarmListPage/Headline.js"],"names":["React","useEffect","useState","styled","useTodoState","HeadlineBlock","div","timeLeft","setTimeLeft","calculateTimeLeft","timer","setTimeout","setYear","Date","getFullYear","clearTimeout","Headline","todos","undoneTasks","filter","todo","done","console","log","year","difference","days","Math","floor","hours","minutes","seconds","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;KAAMD,a;AAwBN,MAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACO,iBAAiB,EAAlB,CAAxC;AAEAR,SAAS,CAAC,MAAM;AACd,QAAMS,KAAK,GAACC,UAAU,CAAC,MAAM;AAC3BH,IAAAA,WAAW,CAACC,iBAAiB,EAAlB,CAAX;AACAG,IAAAA,OAAO,CAAC,IAAIC,IAAJ,GAAWC,WAAX,EAAD,CAAP;AACD,GAHqB,EAGnB,IAHmB,CAAtB,CADc,CAKd;;AACA,SAAO,MAAMC,YAAY,CAACL,KAAD,CAAzB;AACD,CAPQ,CAAT;;AAUA,SAASM,QAAT,GAAoB;AAAA;;AAClB,QAAMC,KAAK,GAAGb,YAAY,EAA1B;AACA,QAAMc,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAAI,IAAI,CAACA,IAAI,CAACC,IAA3B,CAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;;AACA,QAAMR,iBAAiB,GAAG,MAAM;AAC9B,QAAIe,IAAI,GAAG,IAAIX,IAAJ,GAAWC,WAAX,EAAX;AACA,UAAMW,UAAU,GAAG,CAAC,IAAIZ,IAAJ,CAAU,SAAQW,IAAK,EAAvB,CAAD,GAA6B,CAAC,IAAIX,IAAJ,EAAjD;AACA,QAAIN,QAAQ,GAAG,EAAf;;AAEA,QAAIkB,UAAU,GAAG,CAAjB,EAAoB;AAClBlB,MAAAA,QAAQ,GAAG;AACTmB,QAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAArB,CADG;AAETI,QAAAA,KAAK,EAAEF,IAAI,CAACC,KAAL,CAAYH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAX,GAAkC,EAA7C,CAFE;AAGTK,QAAAA,OAAO,EAAEH,IAAI,CAACC,KAAL,CAAYH,UAAU,GAAG,IAAb,GAAoB,EAArB,GAA2B,EAAtC,CAHA;AAITM,QAAAA,OAAO,EAAEJ,IAAI,CAACC,KAAL,CAAYH,UAAU,GAAG,IAAd,GAAsB,EAAjC;AAJA,OAAX;AAMH;;AAED,WAAOlB,QAAP;AAED,GAhBC;;AAoBA,sBACE,QAAC,aAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,+CAAmCW,WAAW,CAACc,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA/BQhB,Q;UACOZ,Y;;;MADPY,Q;AAiCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { useTodoState } from '../TodoContext';\n\nconst HeadlineBlock = styled.div`\n  padding-top: 48px;\n  padding-left: 32px;\n  padding-right: 32px;\n  padding-bottom: 24px;\n  border-bottom: 1px solid #e9ecef;\n  h1 {\n    margin: 0;\n    font-size: 36px;\n    color: #343a40;\n  }\n  .item {\n    margin-top: 4px;\n    color: #868e96;\n    font-size: 21px;\n  }\n  .tasks-left {\n    color: #000000;\n    font-size: 18px;\n    margin-top: 40px;\n    font-weight: bold;\n  }\n`;\n\nconst [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\nuseEffect(() => {\n  const timer=setTimeout(() => {\n    setTimeLeft(calculateTimeLeft());\n    setYear(new Date().getFullYear());\n  }, 1000);\n  // Clear timeout if the component is unmounted\n  return () => clearTimeout(timer);\n});\n\n\nfunction Headline() {\n  const todos = useTodoState();\n  const undoneTasks = todos.filter(todo => !todo.done);\n  console.log(todos);\n  const calculateTimeLeft = () => {\n    let year = new Date().getFullYear();\n    const difference = +new Date(`10/01/${year}`) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60)\n    };\n  }\n\n  return timeLeft;\n\n}\n\n\n\n  return (\n    <HeadlineBlock>\n      <h1>3일 뒤,</h1>\n      <div className=\"item\">나이키 조던 1 유니버시티 블루가 발매됩니다.</div>\n      <div className=\"tasks-left\">발매 일정 {undoneTasks.length}개 남음</div>\n    </HeadlineBlock>\n  );\n}\n\nexport default Headline;"]},"metadata":{},"sourceType":"module"}