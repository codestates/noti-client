{"ast":null,"code":"var _jsxFileName = \"/Users/seunghunhan/Desktop/project/noti-client/src/AlarmContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\n// const product = {\n//     id:'productObjectId',\n//     productName:'nike 조던',\n//     brand:'nike',\n//     price:'300000',\n//     tag:[\"nike\",'조던','신발'],\n//     releaseDate:2021/04/07,\n//     comment:[\n//         {id:'commentObjectId',\n//         nickName:'jemins',\n//         goodUsers:['mins','parks'],\n//         goodCount:5,\n//         content:\"이거 진짜 사고싶어요\"}\n//     ]\n// }\n// import React, { useReducer, createContext, useContext, useRef } from 'react';\n// const initialList = [\n//   {\n//     id: 1,\n//     img: \"../../IMG/조던1.jpeg\",\n//     date: '04월 30일 발매',\n//     productname: \"조던1\",\n//     done: false\n//   },\n//   {\n//     id: 2,\n//     img: \"../../IMG/조던1.jpeg\",\n//     date: '05월 30일 발매',\n//     productname: \"조던1\",\n//     done: false\n//   },\n//   {\n//     id: 3,\n//     img: \"../../IMG/조던1.jpeg\",\n//     date: '06월 30일 발매',\n//     productname: \"조던1\",\n//     done: false\n//   },\n//   {\n//     id: 4,\n//     img: \"../../IMG/조던1.jpeg\",\n//     date: '07월 28일 발매',\n//     productname: \"조던1\",\n//     done: false\n//   }\n// ];\n// function alarmReducer(state, action) {\n//   switch (action.type) {\n//     // case 'CREATE':\n//     //   return state.concat(action.alarm);\n//     case 'CHANGE':\n//       return state.map(alarm =>\n//         alarm.id === action.id ? { ...alarm, done: !alarm.done } : alarm\n//       );\n//     case 'REMOVE':\n//       return state.filter(alarm => alarm.id !== action.id);\n//     default:\n//       throw new Error(`Unhandled action type: ${action.type}`);\n//   }\n// }\n// const AlarmStateContext = createContext();\n// const AlarmDispatchContext = createContext();\n// const AlarmNextIdContext = createContext();\n// export function AlarmProvider({ children }) {\n//   const [state, dispatch] = useReducer(alarmReducer, initialList);\n//   const nextId = useRef(5);\n//   return (\n//     <AlarmStateContext.Provider value={state}>\n//       <AlarmDispatchContext.Provider value={dispatch}>\n//         <AlarmNextIdContext.Provider value={nextId}>\n//           {children}\n//         </AlarmNextIdContext.Provider>\n//       </AlarmDispatchContext.Provider>\n//     </AlarmStateContext.Provider>\n//   );\n// }\n// export function useAlarmState() {\n//   const context = useContext(AlarmStateContext);\n//   if (!context) {\n//     throw new Error('Cannot find AlarmProvider');\n//   }\n//   return context;\n// }\n// export function useAlarmDispatch() {\n//   const context = useContext(AlarmDispatchContext);\n//   if (!context) {\n//     throw new Error('Cannot find AlarmProvider');\n//   }\n//   return context;\n// }\n// export function useAlarmNextId() {\n//   const context = useContext(AlarmNextIdContext);\n//   if (!context) {\n//     throw new Error('Cannot find AlarmProvider');\n//   }\n//   return context;\n// }\nimport React, { createContext, useReducer, useContext } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function getPRODUCTS(dispatch) {\n  dispatch({\n    type: 'GET_PRODUCTS'\n  });\n\n  try {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n    dispatch({\n      type: 'GET_PRODUCTS_SUCCESS',\n      data: response.data\n    });\n  } catch (e) {\n    dispatch({\n      type: 'GET_PRODUCTS_ERROR',\n      error: e\n    });\n  }\n}\nexport async function getUser(dispatch, id) {\n  dispatch({\n    type: 'GET_USER'\n  });\n\n  try {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({\n      type: 'GET_USER_SUCCESS',\n      data: response.data\n    });\n  } catch (e) {\n    dispatch({\n      type: 'GET_USER_ERROR',\n      error: e\n    });\n  }\n}\nconst initialState = {\n  users: {\n    loading: false,\n    data: null,\n    error: null\n  },\n  user: {\n    loading: false,\n    data: null,\n    error: null\n  }\n}; // 로딩중일 때 바뀔 상태 객체\n\nconst loadingState = {\n  loading: true,\n  data: null,\n  error: null\n}; // 성공했을 때의 상태 만들어주는 함수\n\nconst success = data => ({\n  loading: false,\n  data,\n  error: null\n}); // 실패했을 때의 상태 만들어주는 함수\n\n\nconst error = error => ({\n  loading: false,\n  data: null,\n  error: error\n}); // 위에서 만든 객체 / 유틸 함수들을 사용하여 리듀서 작성\n\n\nfunction alarmReducer(state, action) {\n  switch (action.type) {\n    case 'GET_PRODUCTS':\n      return { ...state,\n        users: loadingState\n      };\n\n    case 'GET_PRODUCTS_SUCCESS':\n      return { ...state,\n        users: success(action.data)\n      };\n\n    case 'GET_PRODUCTS_ERROR':\n      return { ...state,\n        users: error(action.error)\n      };\n\n    case 'GET_PRODUCTS':\n      return { ...state,\n        user: loadingState\n      };\n\n    case 'GET_USER_SUCCESS':\n      return { ...state,\n        user: success(action.data)\n      };\n\n    case 'GET_USER_ERROR':\n      return { ...state,\n        user: error(action.error)\n      };\n\n    default:\n      throw new Error(`Unhanded action type: ${action.type}`);\n  }\n} // State 용 Context 와 Dispatch 용 Context 따로 만들어주기\n\n\nconst UsersStateContext = /*#__PURE__*/createContext(null);\nconst UsersDispatchContext = /*#__PURE__*/createContext(null); // 위에서 선언한 두가지 Context 들의 Provider 로 감싸주는 컴포넌트\n\nexport function UsersProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(usersReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(UsersStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(UsersDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n} // State 를 쉽게 조회 할 수 있게 해주는 커스텀 Hook\n\n_s(UsersProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = UsersProvider;\nexport function useUsersState() {\n  _s2();\n\n  const state = useContext(UsersStateContext);\n\n  if (!state) {\n    throw new Error('Cannot find UsersProvider');\n  }\n\n  return state;\n} // Dispatch 를 쉽게 사용 할 수 있게 해주는 커스텀 Hook\n\n_s2(useUsersState, \"kdLImxeHm3898p7tqgy8Fclg5s8=\");\n\nexport function useUsersDispatch() {\n  _s3();\n\n  const dispatch = useContext(UsersDispatchContext);\n\n  if (!dispatch) {\n    throw new Error('Cannot find UsersProvider');\n  }\n\n  return dispatch;\n}\n\n_s3(useUsersDispatch, \"kCU+r/6VuXUfg74P0SIOBSNFld8=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersProvider\");","map":{"version":3,"sources":["/Users/seunghunhan/Desktop/project/noti-client/src/AlarmContext.js"],"names":["React","createContext","useReducer","useContext","axios","getPRODUCTS","dispatch","type","response","get","data","e","error","getUser","id","initialState","users","loading","user","loadingState","success","alarmReducer","state","action","Error","UsersStateContext","UsersDispatchContext","UsersProvider","children","usersReducer","useUsersState","useUsersDispatch"],"mappings":";;;;;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,eAAeC,WAAf,CAA2BC,QAA3B,EAAqC;AAC1CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACrB,4CADqB,CAAvB;AAGAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,sBAAR;AAAgCG,MAAAA,IAAI,EAAEF,QAAQ,CAACE;AAA/C,KAAD,CAAR;AACD,GALD,CAKE,OAAOC,CAAP,EAAU;AACVL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,oBAAR;AAA8BK,MAAAA,KAAK,EAAED;AAArC,KAAD,CAAR;AACD;AACF;AAED,OAAO,eAAeE,OAAf,CAAuBP,QAAvB,EAAiCQ,EAAjC,EAAqC;AAC1CR,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACpB,8CAA6CK,EAAG,EAD5B,CAAvB;AAGAR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,kBAAR;AAA4BG,MAAAA,IAAI,EAAEF,QAAQ,CAACE;AAA3C,KAAD,CAAR;AACD,GALD,CAKE,OAAOC,CAAP,EAAU;AACVL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,gBAAR;AAA0BK,MAAAA,KAAK,EAAED;AAAjC,KAAD,CAAR;AACD;AACF;AAED,MAAMI,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,KADJ;AAELP,IAAAA,IAAI,EAAE,IAFD;AAGLE,IAAAA,KAAK,EAAE;AAHF,GADY;AAMnBM,EAAAA,IAAI,EAAE;AACJD,IAAAA,OAAO,EAAE,KADL;AAEJP,IAAAA,IAAI,EAAE,IAFF;AAGJE,IAAAA,KAAK,EAAE;AAHH;AANa,CAArB,C,CAaA;;AACA,MAAMO,YAAY,GAAG;AACnBF,EAAAA,OAAO,EAAE,IADU;AAEnBP,EAAAA,IAAI,EAAE,IAFa;AAGnBE,EAAAA,KAAK,EAAE;AAHY,CAArB,C,CAMA;;AACA,MAAMQ,OAAO,GAAGV,IAAI,KAAK;AACvBO,EAAAA,OAAO,EAAE,KADc;AAEvBP,EAAAA,IAFuB;AAGvBE,EAAAA,KAAK,EAAE;AAHgB,CAAL,CAApB,C,CAMA;;;AACA,MAAMA,KAAK,GAAGA,KAAK,KAAK;AACtBK,EAAAA,OAAO,EAAE,KADa;AAEtBP,EAAAA,IAAI,EAAE,IAFgB;AAGtBE,EAAAA,KAAK,EAAEA;AAHe,CAAL,CAAnB,C,CAMA;;;AACA,SAASS,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,UAAQA,MAAM,CAAChB,IAAf;AACE,SAAK,cAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELN,QAAAA,KAAK,EAAEG;AAFF,OAAP;;AAIF,SAAK,sBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELN,QAAAA,KAAK,EAAEI,OAAO,CAACG,MAAM,CAACb,IAAR;AAFT,OAAP;;AAIF,SAAK,oBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELN,QAAAA,KAAK,EAAEJ,KAAK,CAACW,MAAM,CAACX,KAAR;AAFP,OAAP;;AAIF,SAAK,cAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,IAAI,EAAEC;AAFD,OAAP;;AAIF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELJ,QAAAA,IAAI,EAAEE,OAAO,CAACG,MAAM,CAACb,IAAR;AAFR,OAAP;;AAIF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,IAAI,EAAEN,KAAK,CAACW,MAAM,CAACX,KAAR;AAFN,OAAP;;AAIF;AACE,YAAM,IAAIY,KAAJ,CAAW,yBAAwBD,MAAM,CAAChB,IAAK,EAA/C,CAAN;AAhCJ;AAkCD,C,CAED;;;AACA,MAAMkB,iBAAiB,gBAAGxB,aAAa,CAAC,IAAD,CAAvC;AACA,MAAMyB,oBAAoB,gBAAGzB,aAAa,CAAC,IAAD,CAA1C,C,CAEA;;AACA,OAAO,SAAS0B,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAqC;AAAA;;AAC1C,QAAM,CAACN,KAAD,EAAQhB,QAAR,IAAoBJ,UAAU,CAAC2B,YAAD,EAAed,YAAf,CAApC;AACA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEO,KAAnC;AAAA,2BACE,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,MAAA,KAAK,EAAEhB,QAAtC;AAAA,gBACGsB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,C,CAED;;GAXgBD,a;;KAAAA,a;AAYhB,OAAO,SAASG,aAAT,GAAyB;AAAA;;AAC9B,QAAMR,KAAK,GAAGnB,UAAU,CAACsB,iBAAD,CAAxB;;AACA,MAAI,CAACH,KAAL,EAAY;AACV,UAAM,IAAIE,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACD,SAAOF,KAAP;AACD,C,CAED;;IARgBQ,a;;AAShB,OAAO,SAASC,gBAAT,GAA4B;AAAA;;AACjC,QAAMzB,QAAQ,GAAGH,UAAU,CAACuB,oBAAD,CAA3B;;AACA,MAAI,CAACpB,QAAL,EAAe;AACb,UAAM,IAAIkB,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACD,SAAOlB,QAAP;AACD;;IANeyB,gB","sourcesContent":["// const product = {\n  //     id:'productObjectId',\n  //     productName:'nike 조던',\n  //     brand:'nike',\n  //     price:'300000',\n  //     tag:[\"nike\",'조던','신발'],\n  //     releaseDate:2021/04/07,\n  //     comment:[\n  //         {id:'commentObjectId',\n  //         nickName:'jemins',\n  //         goodUsers:['mins','parks'],\n  //         goodCount:5,\n  //         content:\"이거 진짜 사고싶어요\"}\n  //     ]\n  \n  // }\n\n\n// import React, { useReducer, createContext, useContext, useRef } from 'react';\n\n// const initialList = [\n//   {\n//     id: 1,\n//     img: \"../../IMG/조던1.jpeg\",\n//     date: '04월 30일 발매',\n//     productname: \"조던1\",\n//     done: false\n//   },\n//   {\n//     id: 2,\n//     img: \"../../IMG/조던1.jpeg\",\n//     date: '05월 30일 발매',\n//     productname: \"조던1\",\n//     done: false\n//   },\n//   {\n//     id: 3,\n//     img: \"../../IMG/조던1.jpeg\",\n//     date: '06월 30일 발매',\n//     productname: \"조던1\",\n//     done: false\n//   },\n//   {\n//     id: 4,\n//     img: \"../../IMG/조던1.jpeg\",\n//     date: '07월 28일 발매',\n//     productname: \"조던1\",\n//     done: false\n//   }\n// ];\n\n// function alarmReducer(state, action) {\n//   switch (action.type) {\n//     // case 'CREATE':\n//     //   return state.concat(action.alarm);\n//     case 'CHANGE':\n//       return state.map(alarm =>\n//         alarm.id === action.id ? { ...alarm, done: !alarm.done } : alarm\n//       );\n//     case 'REMOVE':\n//       return state.filter(alarm => alarm.id !== action.id);\n//     default:\n//       throw new Error(`Unhandled action type: ${action.type}`);\n//   }\n// }\n\n// const AlarmStateContext = createContext();\n// const AlarmDispatchContext = createContext();\n// const AlarmNextIdContext = createContext();\n\n// export function AlarmProvider({ children }) {\n//   const [state, dispatch] = useReducer(alarmReducer, initialList);\n//   const nextId = useRef(5);\n\n//   return (\n//     <AlarmStateContext.Provider value={state}>\n//       <AlarmDispatchContext.Provider value={dispatch}>\n//         <AlarmNextIdContext.Provider value={nextId}>\n//           {children}\n//         </AlarmNextIdContext.Provider>\n//       </AlarmDispatchContext.Provider>\n//     </AlarmStateContext.Provider>\n//   );\n// }\n\n// export function useAlarmState() {\n//   const context = useContext(AlarmStateContext);\n//   if (!context) {\n//     throw new Error('Cannot find AlarmProvider');\n//   }\n//   return context;\n// }\n\n// export function useAlarmDispatch() {\n//   const context = useContext(AlarmDispatchContext);\n//   if (!context) {\n//     throw new Error('Cannot find AlarmProvider');\n//   }\n//   return context;\n// }\n\n// export function useAlarmNextId() {\n//   const context = useContext(AlarmNextIdContext);\n//   if (!context) {\n//     throw new Error('Cannot find AlarmProvider');\n//   }\n//   return context;\n// }\n\n\n\n\n\nimport React, { createContext, useReducer, useContext } from 'react';\nimport axios from 'axios';\n\nexport async function getPRODUCTS(dispatch) {\n  dispatch({ type: 'GET_PRODUCTS' });\n  try {\n    const response = await axios.get(\n      'https://jsonplaceholder.typicode.com/users'\n    );\n    dispatch({ type: 'GET_PRODUCTS_SUCCESS', data: response.data });\n  } catch (e) {\n    dispatch({ type: 'GET_PRODUCTS_ERROR', error: e });\n  }\n}\n\nexport async function getUser(dispatch, id) {\n  dispatch({ type: 'GET_USER' });\n  try {\n    const response = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    dispatch({ type: 'GET_USER_SUCCESS', data: response.data });\n  } catch (e) {\n    dispatch({ type: 'GET_USER_ERROR', error: e });\n  }\n}\n\nconst initialState = {\n  users: {\n    loading: false,\n    data: null,\n    error: null\n  },\n  user: {\n    loading: false,\n    data: null,\n    error: null\n  }\n};\n\n// 로딩중일 때 바뀔 상태 객체\nconst loadingState = {\n  loading: true,\n  data: null,\n  error: null\n};\n\n// 성공했을 때의 상태 만들어주는 함수\nconst success = data => ({\n  loading: false,\n  data,\n  error: null\n});\n\n// 실패했을 때의 상태 만들어주는 함수\nconst error = error => ({\n  loading: false,\n  data: null,\n  error: error\n});\n\n// 위에서 만든 객체 / 유틸 함수들을 사용하여 리듀서 작성\nfunction alarmReducer(state, action) {\n  switch (action.type) {\n    case 'GET_PRODUCTS':\n      return {\n        ...state,\n        users: loadingState\n      };\n    case 'GET_PRODUCTS_SUCCESS':\n      return {\n        ...state,\n        users: success(action.data)\n      };\n    case 'GET_PRODUCTS_ERROR':\n      return {\n        ...state,\n        users: error(action.error)\n      };\n    case 'GET_PRODUCTS':\n      return {\n        ...state,\n        user: loadingState\n      };\n    case 'GET_USER_SUCCESS':\n      return {\n        ...state,\n        user: success(action.data)\n      };\n    case 'GET_USER_ERROR':\n      return {\n        ...state,\n        user: error(action.error)\n      };\n    default:\n      throw new Error(`Unhanded action type: ${action.type}`);\n  }\n}\n\n// State 용 Context 와 Dispatch 용 Context 따로 만들어주기\nconst UsersStateContext = createContext(null);\nconst UsersDispatchContext = createContext(null);\n\n// 위에서 선언한 두가지 Context 들의 Provider 로 감싸주는 컴포넌트\nexport function UsersProvider({ children }) {\n  const [state, dispatch] = useReducer(usersReducer, initialState);\n  return (\n    <UsersStateContext.Provider value={state}>\n      <UsersDispatchContext.Provider value={dispatch}>\n        {children}\n      </UsersDispatchContext.Provider>\n    </UsersStateContext.Provider>\n  );\n}\n\n// State 를 쉽게 조회 할 수 있게 해주는 커스텀 Hook\nexport function useUsersState() {\n  const state = useContext(UsersStateContext);\n  if (!state) {\n    throw new Error('Cannot find UsersProvider');\n  }\n  return state;\n}\n\n// Dispatch 를 쉽게 사용 할 수 있게 해주는 커스텀 Hook\nexport function useUsersDispatch() {\n  const dispatch = useContext(UsersDispatchContext);\n  if (!dispatch) {\n    throw new Error('Cannot find UsersProvider');\n  }\n  return dispatch;\n}"]},"metadata":{},"sourceType":"module"}