{"ast":null,"code":"var _jsxFileName = \"/Users/seunghunhan/Desktop/project/noti-client/src/AlarmListPage/Headline.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { useTodoState } from '../TodoContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeadlineBlock = styled.div`\n  padding-top: 48px;\n  padding-left: 32px;\n  padding-right: 32px;\n  padding-bottom: 24px;\n  border-bottom: 1px solid #e9ecef;\n  h1 {\n    margin: 0;\n    font-size: 36px;\n    color: #343a40;\n  }\n  .item {\n    margin-top: 4px;\n    color: #868e96;\n    font-size: 21px;\n  }\n  .tasks-left {\n    color: #000000;\n    font-size: 18px;\n    margin-top: 40px;\n    font-weight: bold;\n  }\n`;\n_c = HeadlineBlock;\n\nfunction Headline() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const todos = useTodoState();\n  const undoneTasks = todos.filter(todo => !todo.done);\n  console.log(todos);\n\n  const Timer = ({\n    seconds\n  }) => {\n    _s();\n\n    // initialize timeLeft with the seconds prop\n    const [timeLeft, setTimeLeft] = useState(seconds);\n    useEffect(() => {\n      // exit early when we reach 0\n      if (!timeLeft) return; // save intervalId to clear the interval when the\n      // component re-renders\n\n      const intervalId = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000); // clear interval on re-render to avoid memory leaks\n\n      return () => clearInterval(intervalId); // add timeLeft as a dependency to re-rerun the effect\n      // when we update it\n    }, [timeLeft]);\n  };\n\n  _s(Timer, \"9JJnqmTCdqLHDdCmRHNOIx0rlJg=\");\n\n  return /*#__PURE__*/_jsxDEV(HeadlineBlock, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: timeLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: \"\\uB098\\uC774\\uD0A4 \\uC870\\uB358 1 \\uC720\\uB2C8\\uBC84\\uC2DC\\uD2F0 \\uBE14\\uB8E8\\uAC00 \\uBC1C\\uB9E4\\uB429\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-left\",\n      children: [\"\\uBC1C\\uB9E4 \\uC77C\\uC815 \", undoneTasks.length, \"\\uAC1C \\uB0A8\\uC74C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Headline, \"pr6K0VeC20DQDtCj4dVyY1Qagh0=\", false, function () {\n  return [useTodoState];\n});\n\n_c2 = Headline;\nexport default Headline;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HeadlineBlock\");\n$RefreshReg$(_c2, \"Headline\");","map":{"version":3,"sources":["/Users/seunghunhan/Desktop/project/noti-client/src/AlarmListPage/Headline.js"],"names":["React","useEffect","useState","styled","useTodoState","HeadlineBlock","div","Headline","todos","undoneTasks","filter","todo","done","console","log","Timer","seconds","timeLeft","setTimeLeft","intervalId","setInterval","clearInterval","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;KAAMD,a;;AAyBN,SAASE,QAAT,GAAoB;AAAA;;AAAA;;AAClB,QAAMC,KAAK,GAAGJ,YAAY,EAA1B;AACA,QAAMK,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAAI,IAAI,CAACA,IAAI,CAACC,IAA3B,CAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;;AACA,QAAMO,KAAK,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AAAA;;AAC7B;AACA,UAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACc,OAAD,CAAxC;AAEAf,IAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAI,CAACgB,QAAL,EAAe,OAFD,CAId;AACA;;AACA,YAAME,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnCF,QAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACD,OAF6B,EAE3B,IAF2B,CAA9B,CANc,CAUd;;AACA,aAAO,MAAMI,aAAa,CAACF,UAAD,CAA1B,CAXc,CAYd;AACA;AACD,KAdQ,EAcN,CAACF,QAAD,CAdM,CAAT;AAgBD,GApBD;;AAJkB,KAIZF,KAJY;;AA0BlB,sBACE,QAAC,aAAD;AAAA,4BACE;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,+CAAmCR,WAAW,CAACa,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;IAjCQf,Q;UACOH,Y;;;MADPG,Q;AAmCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { useTodoState } from '../TodoContext';\n\nconst HeadlineBlock = styled.div`\n  padding-top: 48px;\n  padding-left: 32px;\n  padding-right: 32px;\n  padding-bottom: 24px;\n  border-bottom: 1px solid #e9ecef;\n  h1 {\n    margin: 0;\n    font-size: 36px;\n    color: #343a40;\n  }\n  .item {\n    margin-top: 4px;\n    color: #868e96;\n    font-size: 21px;\n  }\n  .tasks-left {\n    color: #000000;\n    font-size: 18px;\n    margin-top: 40px;\n    font-weight: bold;\n  }\n`;\n\n\nfunction Headline() {\n  const todos = useTodoState();\n  const undoneTasks = todos.filter(todo => !todo.done);\n  console.log(todos)\n  const Timer = ({ seconds }) => {\n    // initialize timeLeft with the seconds prop\n    const [timeLeft, setTimeLeft] = useState(seconds);\n  \n    useEffect(() => {\n      // exit early when we reach 0\n      if (!timeLeft) return;\n  \n      // save intervalId to clear the interval when the\n      // component re-renders\n      const intervalId = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n  \n      // clear interval on re-render to avoid memory leaks\n      return () => clearInterval(intervalId);\n      // add timeLeft as a dependency to re-rerun the effect\n      // when we update it\n    }, [timeLeft]);\n\n  }\n\n  return (\n    <HeadlineBlock>\n      <h1>{timeLeft}</h1>\n      <div className=\"item\">나이키 조던 1 유니버시티 블루가 발매됩니다.</div>\n      <div className=\"tasks-left\">발매 일정 {undoneTasks.length}개 남음</div>\n    </HeadlineBlock>\n  );\n}\n\nexport default Headline;"]},"metadata":{},"sourceType":"module"}