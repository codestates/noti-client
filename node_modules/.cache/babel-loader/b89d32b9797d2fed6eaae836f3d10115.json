{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// // import { useHistory } from \"react-router-dom\";\n// // const axios = require(\"axios\");\n// // axios.defaults.withCredentials = true;\n// const Modified = ({ userInfo }) => {\n//   // db에서 userinfo.nickname을 가져와서 9번 input테그에 넣는다\n//   // 만약 수정하기 버튼을 눌럿을때, 위패스워드와, 아래패스워드가 다르면 catch\n//   // 만약 두개가 같으면 post요청을 한다.\n//   // 만약 닉네임, 비밀번호, 비밀번호2 이 중에 한개라도 빠지면 모두 다 써달라는 말을 출력한다.\n//   // const history = useHistory();\n//   const [form, setForm] = useState({\n//     changeNickname: \"\",\n//     password: \"\",\n//     passwordTwo: \"\",\n//   });\n//   const [errMessage, setErrMessage] = useState(\"\");\n//   const { changeNickname, password, passwordTwo } = form;\n//   const handleChange = (e) => {\n//     const nextForm = {\n//       ...form,\n//       [e.target.name]: e.target.value,\n//     };\n//     setForm(nextForm);\n//   };\n//   const handleModify = (e) => {\n//     e.preventDefault();\n//     if (changeNickname === \"\" || password === \"\" || passwordTwo === \"\") {\n//       setErrMessage(\"빈칸을 모두 적어주세요.\");\n//     } else if (changeNickname !== \"\" && password === passwordTwo) {\n//       axios\n//         .post(\"https://localhost:5000/user/change\", {\n//           password: password,\n//           nickName: changeNickname,\n//         })\n//         .then((res) => {\n//           history.push(\"/\");\n//         })\n//         .catch((err) => {\n//           console.log(\"실패했습니다\");\n//         }); //만약에 닉네임을 수정하게 되면? 어디로 이동해야하나?\n//     } else {\n//       setErrMessage(\"두 비번이 일치하지 않습니다.\");\n//     }\n//   };\n//   useEffect(() => {\n//     setErrMessage(\"\");\n//   }, [password, passwordTwo, changeNickname]);\n//   return (\n//     <div className=\"container\">\n//       <div className=\"app-wrapper\">\n//         <div>\n//           <h2 className=\"h2\"> 💖 닉네임 또는 패스워드를 수정해주세요.</h2>\n//           <div />\n//           <form className=\"form-wrapper\">\n//             <div className=\"nickName\">\n//               😁 닉네임을 수정해 주세요.\n//               <input\n//                 className=\"input\"\n//                 value={userInfo.nickName}\n//                 type=\"nickname\"\n//               />\n//             </div>\n//             <input\n//               className=\"input\"\n//               name=\"changeNickname\"\n//               placeholder=\"수정할 닉네임을 입력해 주세요.\"\n//               value={changeNickname}\n//               onChange={handleChange}\n//               type=\"text\"\n//             ></input>\n//             <div className=\"passwordmodified\">\n//               🔐 비밀번호를 변경해 주세요.\n//               <input\n//                 className=\"input\"\n//                 name=\"password\"\n//                 placeholder=\"패스워드를 입력해 주세요.\"\n//                 value={password}\n//                 onChange={handleChange}\n//                 type=\"password\"\n//               />\n//             </div>\n//             <br></br>\n//             <input\n//               className=\"input\"\n//               name=\"passwordTwo\"\n//               placeholder=\"패스워드를 다시 한번 입력해주세요.\"\n//               value={passwordTwo}\n//               onChange={handleChange}\n//               type=\"password\"\n//             ></input>\n//             <br></br>\n//             <button className=\"submit\" onClick={handleModify}>\n//               수정하기\n//             </button>\n//             <div className=\"error-modified\">\n//               {password !== passwordTwo ||\n//               changeNickname === \"\" ||\n//               password === \"\" ||\n//               passwordTwo === \"\"\n//                 ? errMessage\n//                 : null}\n//             </div>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Modified;","map":{"version":3,"sources":["/Users/seunghunhan/Desktop/project/noti-client/src/Components/Modified.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect } from \"react\";\n// // import { useHistory } from \"react-router-dom\";\n\n// // const axios = require(\"axios\");\n// // axios.defaults.withCredentials = true;\n\n// const Modified = ({ userInfo }) => {\n//   // db에서 userinfo.nickname을 가져와서 9번 input테그에 넣는다\n//   // 만약 수정하기 버튼을 눌럿을때, 위패스워드와, 아래패스워드가 다르면 catch\n//   // 만약 두개가 같으면 post요청을 한다.\n//   // 만약 닉네임, 비밀번호, 비밀번호2 이 중에 한개라도 빠지면 모두 다 써달라는 말을 출력한다.\n//   // const history = useHistory();\n//   const [form, setForm] = useState({\n//     changeNickname: \"\",\n//     password: \"\",\n//     passwordTwo: \"\",\n//   });\n\n//   const [errMessage, setErrMessage] = useState(\"\");\n//   const { changeNickname, password, passwordTwo } = form;\n//   const handleChange = (e) => {\n//     const nextForm = {\n//       ...form,\n//       [e.target.name]: e.target.value,\n//     };\n//     setForm(nextForm);\n//   };\n\n//   const handleModify = (e) => {\n//     e.preventDefault();\n//     if (changeNickname === \"\" || password === \"\" || passwordTwo === \"\") {\n//       setErrMessage(\"빈칸을 모두 적어주세요.\");\n//     } else if (changeNickname !== \"\" && password === passwordTwo) {\n//       axios\n//         .post(\"https://localhost:5000/user/change\", {\n//           password: password,\n//           nickName: changeNickname,\n//         })\n//         .then((res) => {\n//           history.push(\"/\");\n//         })\n//         .catch((err) => {\n//           console.log(\"실패했습니다\");\n//         }); //만약에 닉네임을 수정하게 되면? 어디로 이동해야하나?\n//     } else {\n//       setErrMessage(\"두 비번이 일치하지 않습니다.\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     setErrMessage(\"\");\n//   }, [password, passwordTwo, changeNickname]);\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"app-wrapper\">\n//         <div>\n//           <h2 className=\"h2\"> 💖 닉네임 또는 패스워드를 수정해주세요.</h2>\n//           <div />\n//           <form className=\"form-wrapper\">\n//             <div className=\"nickName\">\n//               😁 닉네임을 수정해 주세요.\n//               <input\n//                 className=\"input\"\n//                 value={userInfo.nickName}\n//                 type=\"nickname\"\n//               />\n//             </div>\n//             <input\n//               className=\"input\"\n//               name=\"changeNickname\"\n//               placeholder=\"수정할 닉네임을 입력해 주세요.\"\n//               value={changeNickname}\n//               onChange={handleChange}\n//               type=\"text\"\n//             ></input>\n//             <div className=\"passwordmodified\">\n//               🔐 비밀번호를 변경해 주세요.\n//               <input\n//                 className=\"input\"\n//                 name=\"password\"\n//                 placeholder=\"패스워드를 입력해 주세요.\"\n//                 value={password}\n//                 onChange={handleChange}\n//                 type=\"password\"\n//               />\n//             </div>\n//             <br></br>\n//             <input\n//               className=\"input\"\n//               name=\"passwordTwo\"\n//               placeholder=\"패스워드를 다시 한번 입력해주세요.\"\n//               value={passwordTwo}\n//               onChange={handleChange}\n//               type=\"password\"\n//             ></input>\n//             <br></br>\n//             <button className=\"submit\" onClick={handleModify}>\n//               수정하기\n//             </button>\n//             <div className=\"error-modified\">\n//               {password !== passwordTwo ||\n//               changeNickname === \"\" ||\n//               password === \"\" ||\n//               passwordTwo === \"\"\n//                 ? errMessage\n//                 : null}\n//             </div>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Modified;\n"]},"metadata":{},"sourceType":"module"}