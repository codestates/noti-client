{"ast":null,"code":"var _jsxFileName = \"/Users/seunghunhan/Desktop/project/noti-client/src/AlarmContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useReducer, createContext, useContext, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialList = [{\n  id: 1,\n  img: \"../../images/test01.svg\",\n  date: '4월 30일 발매',\n  done: true\n}, {\n  id: 2,\n  date: '5월 30일 발매',\n  done: true\n}, {\n  id: 3,\n  date: '6월 30일 발매',\n  done: false\n}, {\n  id: 4,\n  date: '7월 30일 발매',\n  done: false\n}];\n\nfunction alarmReducer(state, action) {\n  switch (action.type) {\n    // case 'CREATE':\n    //   return state.concat(action.alarm);\n    case 'CHANGE':\n      return state.map(alarm => alarm.id === action.id ? { ...alarm,\n        done: !alarm.done\n      } : alarm);\n\n    case 'REMOVE':\n      return state.filter(alarm => alarm.id !== action.id);\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst AlarmStateContext = /*#__PURE__*/createContext();\nconst AlarmDispatchContext = /*#__PURE__*/createContext();\nconst AlarmNextIdContext = /*#__PURE__*/createContext();\nexport function AlarmProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(alarmReducer, initialList);\n  const nextId = useRef(5);\n  return /*#__PURE__*/_jsxDEV(AlarmStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(AlarmDispatchContext.Provider, {\n      value: dispatch,\n      children: /*#__PURE__*/_jsxDEV(AlarmNextIdContext.Provider, {\n        value: nextId,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AlarmProvider, \"0LvN0DonuOhCM325ED0FzNO/mgU=\");\n\n_c = AlarmProvider;\nexport function useAlarmState() {\n  _s2();\n\n  const context = useContext(AlarmStateContext);\n\n  if (!context) {\n    throw new Error('Cannot find AlarmProvider');\n  }\n\n  return context;\n}\n\n_s2(useAlarmState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function useAlarmDispatch() {\n  _s3();\n\n  const context = useContext(AlarmDispatchContext);\n\n  if (!context) {\n    throw new Error('Cannot find AlarmProvider');\n  }\n\n  return context;\n}\n\n_s3(useAlarmDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function useAlarmNextId() {\n  _s4();\n\n  const context = useContext(AlarmNextIdContext);\n\n  if (!context) {\n    throw new Error('Cannot find AlarmProvider');\n  }\n\n  return context;\n}\n\n_s4(useAlarmNextId, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AlarmProvider\");","map":{"version":3,"sources":["/Users/seunghunhan/Desktop/project/noti-client/src/AlarmContext.js"],"names":["React","useReducer","createContext","useContext","useRef","initialList","id","img","date","done","alarmReducer","state","action","type","map","alarm","filter","Error","AlarmStateContext","AlarmDispatchContext","AlarmNextIdContext","AlarmProvider","children","dispatch","nextId","useAlarmState","context","useAlarmDispatch","useAlarmNextId"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext, useContext, useRef } from 'react';\n\nconst initialList = [\n  {\n    id: 1,\n    img: \"../../images/test01.svg\",\n    date: '4월 30일 발매',\n    done: true\n  },\n  {\n    id: 2,\n    date: '5월 30일 발매',\n    done: true\n  },\n  {\n    id: 3,\n    date: '6월 30일 발매',\n    done: false\n  },\n  {\n    id: 4,\n    date: '7월 30일 발매',\n    done: false\n  }\n];\n\nfunction alarmReducer(state, action) {\n  switch (action.type) {\n    // case 'CREATE':\n    //   return state.concat(action.alarm);\n    case 'CHANGE':\n      return state.map(alarm =>\n        alarm.id === action.id ? { ...alarm, done: !alarm.done } : alarm\n      );\n    case 'REMOVE':\n      return state.filter(alarm => alarm.id !== action.id);\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst AlarmStateContext = createContext();\nconst AlarmDispatchContext = createContext();\nconst AlarmNextIdContext = createContext();\n\nexport function AlarmProvider({ children }) {\n  const [state, dispatch] = useReducer(alarmReducer, initialList);\n  const nextId = useRef(5);\n\n  return (\n    <AlarmStateContext.Provider value={state}>\n      <AlarmDispatchContext.Provider value={dispatch}>\n        <AlarmNextIdContext.Provider value={nextId}>\n          {children}\n        </AlarmNextIdContext.Provider>\n      </AlarmDispatchContext.Provider>\n    </AlarmStateContext.Provider>\n  );\n}\n\nexport function useAlarmState() {\n  const context = useContext(AlarmStateContext);\n  if (!context) {\n    throw new Error('Cannot find AlarmProvider');\n  }\n  return context;\n}\n\nexport function useAlarmDispatch() {\n  const context = useContext(AlarmDispatchContext);\n  if (!context) {\n    throw new Error('Cannot find AlarmProvider');\n  }\n  return context;\n}\n\nexport function useAlarmNextId() {\n  const context = useContext(AlarmNextIdContext);\n  if (!context) {\n    throw new Error('Cannot find AlarmProvider');\n  }\n  return context;\n}"]},"metadata":{},"sourceType":"module"}